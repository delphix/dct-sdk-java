/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.10.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import com.delphix.dct.models.SourceOperation;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for OracleDSourceLinkSourceParameters
 */
public class OracleDSourceLinkSourceParametersTest {
    private final OracleDSourceLinkSourceParameters model = new OracleDSourceLinkSourceParameters();

    /**
     * Model tests for OracleDSourceLinkSourceParameters
     */
    @Test
    public void testOracleDSourceLinkSourceParameters() {
        // TODO: test OracleDSourceLinkSourceParameters
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'sourceId'
     */
    @Test
    public void sourceIdTest() {
        // TODO: test sourceId
    }

    /**
     * Test the property 'groupId'
     */
    @Test
    public void groupIdTest() {
        // TODO: test groupId
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'logSyncEnabled'
     */
    @Test
    public void logSyncEnabledTest() {
        // TODO: test logSyncEnabled
    }

    /**
     * Test the property 'syncPolicyId'
     */
    @Test
    public void syncPolicyIdTest() {
        // TODO: test syncPolicyId
    }

    /**
     * Test the property 'retentionPolicyId'
     */
    @Test
    public void retentionPolicyIdTest() {
        // TODO: test retentionPolicyId
    }

    /**
     * Test the property 'makeCurrentAccountOwner'
     */
    @Test
    public void makeCurrentAccountOwnerTest() {
        // TODO: test makeCurrentAccountOwner
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'opsPreSync'
     */
    @Test
    public void opsPreSyncTest() {
        // TODO: test opsPreSync
    }

    /**
     * Test the property 'opsPostSync'
     */
    @Test
    public void opsPostSyncTest() {
        // TODO: test opsPostSync
    }

    /**
     * Test the property 'externalFilePath'
     */
    @Test
    public void externalFilePathTest() {
        // TODO: test externalFilePath
    }

    /**
     * Test the property 'environmentUserId'
     */
    @Test
    public void environmentUserIdTest() {
        // TODO: test environmentUserId
    }

    /**
     * Test the property 'backupLevelEnabled'
     */
    @Test
    public void backupLevelEnabledTest() {
        // TODO: test backupLevelEnabled
    }

    /**
     * Test the property 'rmanChannels'
     */
    @Test
    public void rmanChannelsTest() {
        // TODO: test rmanChannels
    }

    /**
     * Test the property 'filesPerSet'
     */
    @Test
    public void filesPerSetTest() {
        // TODO: test filesPerSet
    }

    /**
     * Test the property 'checkLogical'
     */
    @Test
    public void checkLogicalTest() {
        // TODO: test checkLogical
    }

    /**
     * Test the property 'encryptedLinkingEnabled'
     */
    @Test
    public void encryptedLinkingEnabledTest() {
        // TODO: test encryptedLinkingEnabled
    }

    /**
     * Test the property 'compressedLinkingEnabled'
     */
    @Test
    public void compressedLinkingEnabledTest() {
        // TODO: test compressedLinkingEnabled
    }

    /**
     * Test the property 'bandwidthLimit'
     */
    @Test
    public void bandwidthLimitTest() {
        // TODO: test bandwidthLimit
    }

    /**
     * Test the property 'numberOfConnections'
     */
    @Test
    public void numberOfConnectionsTest() {
        // TODO: test numberOfConnections
    }

    /**
     * Test the property 'diagnoseNoLoggingFaults'
     */
    @Test
    public void diagnoseNoLoggingFaultsTest() {
        // TODO: test diagnoseNoLoggingFaults
    }

    /**
     * Test the property 'preProvisioningEnabled'
     */
    @Test
    public void preProvisioningEnabledTest() {
        // TODO: test preProvisioningEnabled
    }

    /**
     * Test the property 'linkNow'
     */
    @Test
    public void linkNowTest() {
        // TODO: test linkNow
    }

    /**
     * Test the property 'forceFullBackup'
     */
    @Test
    public void forceFullBackupTest() {
        // TODO: test forceFullBackup
    }

    /**
     * Test the property 'doubleSync'
     */
    @Test
    public void doubleSyncTest() {
        // TODO: test doubleSync
    }

    /**
     * Test the property 'skipSpaceCheck'
     */
    @Test
    public void skipSpaceCheckTest() {
        // TODO: test skipSpaceCheck
    }

    /**
     * Test the property 'doNotResume'
     */
    @Test
    public void doNotResumeTest() {
        // TODO: test doNotResume
    }

    /**
     * Test the property 'filesForFullBackup'
     */
    @Test
    public void filesForFullBackupTest() {
        // TODO: test filesForFullBackup
    }

    /**
     * Test the property 'logSyncMode'
     */
    @Test
    public void logSyncModeTest() {
        // TODO: test logSyncMode
    }

    /**
     * Test the property 'logSyncInterval'
     */
    @Test
    public void logSyncIntervalTest() {
        // TODO: test logSyncInterval
    }

    /**
     * Test the property 'nonSysUsername'
     */
    @Test
    public void nonSysUsernameTest() {
        // TODO: test nonSysUsername
    }

    /**
     * Test the property 'nonSysPassword'
     */
    @Test
    public void nonSysPasswordTest() {
        // TODO: test nonSysPassword
    }

    /**
     * Test the property 'nonSysVaultUsername'
     */
    @Test
    public void nonSysVaultUsernameTest() {
        // TODO: test nonSysVaultUsername
    }

    /**
     * Test the property 'nonSysVault'
     */
    @Test
    public void nonSysVaultTest() {
        // TODO: test nonSysVault
    }

    /**
     * Test the property 'nonSysHashicorpVaultEngine'
     */
    @Test
    public void nonSysHashicorpVaultEngineTest() {
        // TODO: test nonSysHashicorpVaultEngine
    }

    /**
     * Test the property 'nonSysHashicorpVaultSecretPath'
     */
    @Test
    public void nonSysHashicorpVaultSecretPathTest() {
        // TODO: test nonSysHashicorpVaultSecretPath
    }

    /**
     * Test the property 'nonSysHashicorpVaultUsernameKey'
     */
    @Test
    public void nonSysHashicorpVaultUsernameKeyTest() {
        // TODO: test nonSysHashicorpVaultUsernameKey
    }

    /**
     * Test the property 'nonSysHashicorpVaultSecretKey'
     */
    @Test
    public void nonSysHashicorpVaultSecretKeyTest() {
        // TODO: test nonSysHashicorpVaultSecretKey
    }

    /**
     * Test the property 'nonSysAzureVaultName'
     */
    @Test
    public void nonSysAzureVaultNameTest() {
        // TODO: test nonSysAzureVaultName
    }

    /**
     * Test the property 'nonSysAzureVaultUsernameKey'
     */
    @Test
    public void nonSysAzureVaultUsernameKeyTest() {
        // TODO: test nonSysAzureVaultUsernameKey
    }

    /**
     * Test the property 'nonSysAzureVaultSecretKey'
     */
    @Test
    public void nonSysAzureVaultSecretKeyTest() {
        // TODO: test nonSysAzureVaultSecretKey
    }

    /**
     * Test the property 'nonSysCyberarkVaultQueryString'
     */
    @Test
    public void nonSysCyberarkVaultQueryStringTest() {
        // TODO: test nonSysCyberarkVaultQueryString
    }

    /**
     * Test the property 'fallbackUsername'
     */
    @Test
    public void fallbackUsernameTest() {
        // TODO: test fallbackUsername
    }

    /**
     * Test the property 'fallbackPassword'
     */
    @Test
    public void fallbackPasswordTest() {
        // TODO: test fallbackPassword
    }

    /**
     * Test the property 'fallbackVaultUsername'
     */
    @Test
    public void fallbackVaultUsernameTest() {
        // TODO: test fallbackVaultUsername
    }

    /**
     * Test the property 'fallbackVault'
     */
    @Test
    public void fallbackVaultTest() {
        // TODO: test fallbackVault
    }

    /**
     * Test the property 'fallbackHashicorpVaultEngine'
     */
    @Test
    public void fallbackHashicorpVaultEngineTest() {
        // TODO: test fallbackHashicorpVaultEngine
    }

    /**
     * Test the property 'fallbackHashicorpVaultSecretPath'
     */
    @Test
    public void fallbackHashicorpVaultSecretPathTest() {
        // TODO: test fallbackHashicorpVaultSecretPath
    }

    /**
     * Test the property 'fallbackHashicorpVaultUsernameKey'
     */
    @Test
    public void fallbackHashicorpVaultUsernameKeyTest() {
        // TODO: test fallbackHashicorpVaultUsernameKey
    }

    /**
     * Test the property 'fallbackHashicorpVaultSecretKey'
     */
    @Test
    public void fallbackHashicorpVaultSecretKeyTest() {
        // TODO: test fallbackHashicorpVaultSecretKey
    }

    /**
     * Test the property 'fallbackAzureVaultName'
     */
    @Test
    public void fallbackAzureVaultNameTest() {
        // TODO: test fallbackAzureVaultName
    }

    /**
     * Test the property 'fallbackAzureVaultUsernameKey'
     */
    @Test
    public void fallbackAzureVaultUsernameKeyTest() {
        // TODO: test fallbackAzureVaultUsernameKey
    }

    /**
     * Test the property 'fallbackAzureVaultSecretKey'
     */
    @Test
    public void fallbackAzureVaultSecretKeyTest() {
        // TODO: test fallbackAzureVaultSecretKey
    }

    /**
     * Test the property 'fallbackCyberarkVaultQueryString'
     */
    @Test
    public void fallbackCyberarkVaultQueryStringTest() {
        // TODO: test fallbackCyberarkVaultQueryString
    }

    /**
     * Test the property 'opsPreLogSync'
     */
    @Test
    public void opsPreLogSyncTest() {
        // TODO: test opsPreLogSync
    }

}
