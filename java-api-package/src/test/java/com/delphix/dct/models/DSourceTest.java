/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.10.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import com.delphix.dct.models.DSourceHooks;
import com.delphix.dct.models.Replica;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DSource
 */
public class DSourceTest {
    private final DSource model = new DSource();

    /**
     * Model tests for DSource
     */
    @Test
    public void testDSource() {
        // TODO: test DSource
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'databaseType'
     */
    @Test
    public void databaseTypeTest() {
        // TODO: test databaseType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'namespaceId'
     */
    @Test
    public void namespaceIdTest() {
        // TODO: test namespaceId
    }

    /**
     * Test the property 'namespaceName'
     */
    @Test
    public void namespaceNameTest() {
        // TODO: test namespaceName
    }

    /**
     * Test the property 'isReplica'
     */
    @Test
    public void isReplicaTest() {
        // TODO: test isReplica
    }

    /**
     * Test the property 'databaseVersion'
     */
    @Test
    public void databaseVersionTest() {
        // TODO: test databaseVersion
    }

    /**
     * Test the property 'contentType'
     */
    @Test
    public void contentTypeTest() {
        // TODO: test contentType
    }

    /**
     * Test the property 'dataUuid'
     */
    @Test
    public void dataUuidTest() {
        // TODO: test dataUuid
    }

    /**
     * Test the property 'storageSize'
     */
    @Test
    public void storageSizeTest() {
        // TODO: test storageSize
    }

    /**
     * Test the property 'pluginVersion'
     */
    @Test
    public void pluginVersionTest() {
        // TODO: test pluginVersion
    }

    /**
     * Test the property 'creationDate'
     */
    @Test
    public void creationDateTest() {
        // TODO: test creationDate
    }

    /**
     * Test the property 'groupName'
     */
    @Test
    public void groupNameTest() {
        // TODO: test groupName
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'engineId'
     */
    @Test
    public void engineIdTest() {
        // TODO: test engineId
    }

    /**
     * Test the property 'sourceId'
     */
    @Test
    public void sourceIdTest() {
        // TODO: test sourceId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'engineName'
     */
    @Test
    public void engineNameTest() {
        // TODO: test engineName
    }

    /**
     * Test the property 'cdbId'
     */
    @Test
    public void cdbIdTest() {
        // TODO: test cdbId
    }

    /**
     * Test the property 'currentTimeflowId'
     */
    @Test
    public void currentTimeflowIdTest() {
        // TODO: test currentTimeflowId
    }

    /**
     * Test the property 'previousTimeflowId'
     */
    @Test
    public void previousTimeflowIdTest() {
        // TODO: test previousTimeflowId
    }

    /**
     * Test the property 'isAppdata'
     */
    @Test
    public void isAppdataTest() {
        // TODO: test isAppdata
    }

    /**
     * Test the property 'toolkitId'
     */
    @Test
    public void toolkitIdTest() {
        // TODO: test toolkitId
    }

    /**
     * Test the property 'unvirtualizedSpace'
     */
    @Test
    public void unvirtualizedSpaceTest() {
        // TODO: test unvirtualizedSpace
    }

    /**
     * Test the property 'dependantVdbs'
     */
    @Test
    public void dependantVdbsTest() {
        // TODO: test dependantVdbs
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'primaryObjectId'
     */
    @Test
    public void primaryObjectIdTest() {
        // TODO: test primaryObjectId
    }

    /**
     * Test the property 'primaryEngineId'
     */
    @Test
    public void primaryEngineIdTest() {
        // TODO: test primaryEngineId
    }

    /**
     * Test the property 'primaryEngineName'
     */
    @Test
    public void primaryEngineNameTest() {
        // TODO: test primaryEngineName
    }

    /**
     * Test the property 'replicas'
     */
    @Test
    public void replicasTest() {
        // TODO: test replicas
    }

    /**
     * Test the property 'hooks'
     */
    @Test
    public void hooksTest() {
        // TODO: test hooks
    }

    /**
     * Test the property 'syncPolicyId'
     */
    @Test
    public void syncPolicyIdTest() {
        // TODO: test syncPolicyId
    }

    /**
     * Test the property 'retentionPolicyId'
     */
    @Test
    public void retentionPolicyIdTest() {
        // TODO: test retentionPolicyId
    }

    /**
     * Test the property 'quotaPolicyId'
     */
    @Test
    public void quotaPolicyIdTest() {
        // TODO: test quotaPolicyId
    }

}
