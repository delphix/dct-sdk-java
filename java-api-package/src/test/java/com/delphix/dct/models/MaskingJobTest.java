/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.10.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import com.delphix.dct.models.MaskingRuleset;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MaskingJob
 */
public class MaskingJobTest {
    private final MaskingJob model = new MaskingJob();

    /**
     * Model tests for MaskingJob
     */
    @Test
    public void testMaskingJob() {
        // TODO: test MaskingJob
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'ruleset'
     */
    @Test
    public void rulesetTest() {
        // TODO: test ruleset
    }

    /**
     * Test the property 'connectorType'
     */
    @Test
    public void connectorTypeTest() {
        // TODO: test connectorType
    }

    /**
     * Test the property 'isOnTheFlyMasking'
     */
    @Test
    public void isOnTheFlyMaskingTest() {
        // TODO: test isOnTheFlyMasking
    }

    /**
     * Test the property 'creationDate'
     */
    @Test
    public void creationDateTest() {
        // TODO: test creationDate
    }

    /**
     * Test the property 'lastCompletedExecutionDate'
     */
    @Test
    public void lastCompletedExecutionDateTest() {
        // TODO: test lastCompletedExecutionDate
    }

    /**
     * Test the property 'lastExecutionStatus'
     */
    @Test
    public void lastExecutionStatusTest() {
        // TODO: test lastExecutionStatus
    }

    /**
     * Test the property 'lastExecutionId'
     */
    @Test
    public void lastExecutionIdTest() {
        // TODO: test lastExecutionId
    }

    /**
     * Test the property 'connectorUsername'
     */
    @Test
    public void connectorUsernameTest() {
        // TODO: test connectorUsername
    }

    /**
     * Test the property 'connectorPassword'
     */
    @Test
    public void connectorPasswordTest() {
        // TODO: test connectorPassword
    }

    /**
     * Test the property 'onTheFlySourceConnectorUsername'
     */
    @Test
    public void onTheFlySourceConnectorUsernameTest() {
        // TODO: test onTheFlySourceConnectorUsername
    }

    /**
     * Test the property 'onTheFlySourceConnectorPassword'
     */
    @Test
    public void onTheFlySourceConnectorPasswordTest() {
        // TODO: test onTheFlySourceConnectorPassword
    }

    /**
     * Test the property 'jobType'
     */
    @Test
    public void jobTypeTest() {
        // TODO: test jobType
    }

    /**
     * Test the property 'hyperscaleInstanceId'
     */
    @Test
    public void hyperscaleInstanceIdTest() {
        // TODO: test hyperscaleInstanceId
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'datasetId'
     */
    @Test
    public void datasetIdTest() {
        // TODO: test datasetId
    }

    /**
     * Test the property 'retainExecutionData'
     */
    @Test
    public void retainExecutionDataTest() {
        // TODO: test retainExecutionData
    }

    /**
     * Test the property 'maxMemory'
     */
    @Test
    public void maxMemoryTest() {
        // TODO: test maxMemory
    }

    /**
     * Test the property 'minMemory'
     */
    @Test
    public void minMemoryTest() {
        // TODO: test minMemory
    }

    /**
     * Test the property 'feedbackSize'
     */
    @Test
    public void feedbackSizeTest() {
        // TODO: test feedbackSize
    }

    /**
     * Test the property 'streamRowLimit'
     */
    @Test
    public void streamRowLimitTest() {
        // TODO: test streamRowLimit
    }

    /**
     * Test the property 'numInputStreams'
     */
    @Test
    public void numInputStreamsTest() {
        // TODO: test numInputStreams
    }

    /**
     * Test the property 'maxConcurrentSourceConnections'
     */
    @Test
    public void maxConcurrentSourceConnectionsTest() {
        // TODO: test maxConcurrentSourceConnections
    }

    /**
     * Test the property 'maxConcurrentTargetConnections'
     */
    @Test
    public void maxConcurrentTargetConnectionsTest() {
        // TODO: test maxConcurrentTargetConnections
    }

    /**
     * Test the property 'parallelismDegree'
     */
    @Test
    public void parallelismDegreeTest() {
        // TODO: test parallelismDegree
    }

    /**
     * Test the property 'sourceMaskingJobId'
     */
    @Test
    public void sourceMaskingJobIdTest() {
        // TODO: test sourceMaskingJobId
    }

    /**
     * Test the property 'engineIds'
     */
    @Test
    public void engineIdsTest() {
        // TODO: test engineIds
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

}
