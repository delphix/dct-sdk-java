/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.10.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import com.delphix.dct.models.SourceOperation;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MSSQLDSourceLinkSourceParameters
 */
public class MSSQLDSourceLinkSourceParametersTest {
    private final MSSQLDSourceLinkSourceParameters model = new MSSQLDSourceLinkSourceParameters();

    /**
     * Model tests for MSSQLDSourceLinkSourceParameters
     */
    @Test
    public void testMSSQLDSourceLinkSourceParameters() {
        // TODO: test MSSQLDSourceLinkSourceParameters
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'sourceId'
     */
    @Test
    public void sourceIdTest() {
        // TODO: test sourceId
    }

    /**
     * Test the property 'groupId'
     */
    @Test
    public void groupIdTest() {
        // TODO: test groupId
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'logSyncEnabled'
     */
    @Test
    public void logSyncEnabledTest() {
        // TODO: test logSyncEnabled
    }

    /**
     * Test the property 'syncPolicyId'
     */
    @Test
    public void syncPolicyIdTest() {
        // TODO: test syncPolicyId
    }

    /**
     * Test the property 'retentionPolicyId'
     */
    @Test
    public void retentionPolicyIdTest() {
        // TODO: test retentionPolicyId
    }

    /**
     * Test the property 'makeCurrentAccountOwner'
     */
    @Test
    public void makeCurrentAccountOwnerTest() {
        // TODO: test makeCurrentAccountOwner
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'opsPreSync'
     */
    @Test
    public void opsPreSyncTest() {
        // TODO: test opsPreSync
    }

    /**
     * Test the property 'opsPostSync'
     */
    @Test
    public void opsPostSyncTest() {
        // TODO: test opsPostSync
    }

    /**
     * Test the property 'encryptionKey'
     */
    @Test
    public void encryptionKeyTest() {
        // TODO: test encryptionKey
    }

    /**
     * Test the property 'syncStrategy'
     */
    @Test
    public void syncStrategyTest() {
        // TODO: test syncStrategy
    }

    /**
     * Test the property 'mssqlBackupUuid'
     */
    @Test
    public void mssqlBackupUuidTest() {
        // TODO: test mssqlBackupUuid
    }

    /**
     * Test the property 'compressionEnabled'
     */
    @Test
    public void compressionEnabledTest() {
        // TODO: test compressionEnabled
    }

    /**
     * Test the property 'availabilityGroupBackupPolicy'
     */
    @Test
    public void availabilityGroupBackupPolicyTest() {
        // TODO: test availabilityGroupBackupPolicy
    }

    /**
     * Test the property 'sourceHostUser'
     */
    @Test
    public void sourceHostUserTest() {
        // TODO: test sourceHostUser
    }

    /**
     * Test the property 'pptRepository'
     */
    @Test
    public void pptRepositoryTest() {
        // TODO: test pptRepository
    }

    /**
     * Test the property 'pptHostUser'
     */
    @Test
    public void pptHostUserTest() {
        // TODO: test pptHostUser
    }

    /**
     * Test the property 'stagingPreScript'
     */
    @Test
    public void stagingPreScriptTest() {
        // TODO: test stagingPreScript
    }

    /**
     * Test the property 'stagingPostScript'
     */
    @Test
    public void stagingPostScriptTest() {
        // TODO: test stagingPostScript
    }

    /**
     * Test the property 'syncStrategyManagedType'
     */
    @Test
    public void syncStrategyManagedTypeTest() {
        // TODO: test syncStrategyManagedType
    }

    /**
     * Test the property 'mssqlUserEnvironmentReference'
     */
    @Test
    public void mssqlUserEnvironmentReferenceTest() {
        // TODO: test mssqlUserEnvironmentReference
    }

    /**
     * Test the property 'mssqlUserDomainUsername'
     */
    @Test
    public void mssqlUserDomainUsernameTest() {
        // TODO: test mssqlUserDomainUsername
    }

    /**
     * Test the property 'mssqlUserDomainPassword'
     */
    @Test
    public void mssqlUserDomainPasswordTest() {
        // TODO: test mssqlUserDomainPassword
    }

    /**
     * Test the property 'mssqlUserDomainVaultUsername'
     */
    @Test
    public void mssqlUserDomainVaultUsernameTest() {
        // TODO: test mssqlUserDomainVaultUsername
    }

    /**
     * Test the property 'mssqlUserDomainVault'
     */
    @Test
    public void mssqlUserDomainVaultTest() {
        // TODO: test mssqlUserDomainVault
    }

    /**
     * Test the property 'mssqlUserDomainHashicorpVaultEngine'
     */
    @Test
    public void mssqlUserDomainHashicorpVaultEngineTest() {
        // TODO: test mssqlUserDomainHashicorpVaultEngine
    }

    /**
     * Test the property 'mssqlUserDomainHashicorpVaultSecretPath'
     */
    @Test
    public void mssqlUserDomainHashicorpVaultSecretPathTest() {
        // TODO: test mssqlUserDomainHashicorpVaultSecretPath
    }

    /**
     * Test the property 'mssqlUserDomainHashicorpVaultUsernameKey'
     */
    @Test
    public void mssqlUserDomainHashicorpVaultUsernameKeyTest() {
        // TODO: test mssqlUserDomainHashicorpVaultUsernameKey
    }

    /**
     * Test the property 'mssqlUserDomainHashicorpVaultSecretKey'
     */
    @Test
    public void mssqlUserDomainHashicorpVaultSecretKeyTest() {
        // TODO: test mssqlUserDomainHashicorpVaultSecretKey
    }

    /**
     * Test the property 'mssqlUserDomainAzureVaultName'
     */
    @Test
    public void mssqlUserDomainAzureVaultNameTest() {
        // TODO: test mssqlUserDomainAzureVaultName
    }

    /**
     * Test the property 'mssqlUserDomainAzureVaultUsernameKey'
     */
    @Test
    public void mssqlUserDomainAzureVaultUsernameKeyTest() {
        // TODO: test mssqlUserDomainAzureVaultUsernameKey
    }

    /**
     * Test the property 'mssqlUserDomainAzureVaultSecretKey'
     */
    @Test
    public void mssqlUserDomainAzureVaultSecretKeyTest() {
        // TODO: test mssqlUserDomainAzureVaultSecretKey
    }

    /**
     * Test the property 'mssqlUserDomainCyberarkVaultQueryString'
     */
    @Test
    public void mssqlUserDomainCyberarkVaultQueryStringTest() {
        // TODO: test mssqlUserDomainCyberarkVaultQueryString
    }

    /**
     * Test the property 'mssqlDatabaseUsername'
     */
    @Test
    public void mssqlDatabaseUsernameTest() {
        // TODO: test mssqlDatabaseUsername
    }

    /**
     * Test the property 'mssqlDatabasePassword'
     */
    @Test
    public void mssqlDatabasePasswordTest() {
        // TODO: test mssqlDatabasePassword
    }

    /**
     * Test the property 'delphixManagedBackupCompressionEnabled'
     */
    @Test
    public void delphixManagedBackupCompressionEnabledTest() {
        // TODO: test delphixManagedBackupCompressionEnabled
    }

    /**
     * Test the property 'delphixManagedBackupPolicy'
     */
    @Test
    public void delphixManagedBackupPolicyTest() {
        // TODO: test delphixManagedBackupPolicy
    }

    /**
     * Test the property 'externalManagedValidateSyncMode'
     */
    @Test
    public void externalManagedValidateSyncModeTest() {
        // TODO: test externalManagedValidateSyncMode
    }

    /**
     * Test the property 'externalManagedSharedBackupLocations'
     */
    @Test
    public void externalManagedSharedBackupLocationsTest() {
        // TODO: test externalManagedSharedBackupLocations
    }

    /**
     * Test the property 'externalNetbackupConfigMasterName'
     */
    @Test
    public void externalNetbackupConfigMasterNameTest() {
        // TODO: test externalNetbackupConfigMasterName
    }

    /**
     * Test the property 'externalNetbackupConfigSourceClientName'
     */
    @Test
    public void externalNetbackupConfigSourceClientNameTest() {
        // TODO: test externalNetbackupConfigSourceClientName
    }

    /**
     * Test the property 'externalNetbackupConfigParams'
     */
    @Test
    public void externalNetbackupConfigParamsTest() {
        // TODO: test externalNetbackupConfigParams
    }

    /**
     * Test the property 'externalNetbackupConfigTemplates'
     */
    @Test
    public void externalNetbackupConfigTemplatesTest() {
        // TODO: test externalNetbackupConfigTemplates
    }

    /**
     * Test the property 'externalCommserveHostName'
     */
    @Test
    public void externalCommserveHostNameTest() {
        // TODO: test externalCommserveHostName
    }

    /**
     * Test the property 'externalCommvaultConfigSourceClientName'
     */
    @Test
    public void externalCommvaultConfigSourceClientNameTest() {
        // TODO: test externalCommvaultConfigSourceClientName
    }

    /**
     * Test the property 'externalCommvaultConfigStagingClientName'
     */
    @Test
    public void externalCommvaultConfigStagingClientNameTest() {
        // TODO: test externalCommvaultConfigStagingClientName
    }

    /**
     * Test the property 'externalCommvaultConfigParams'
     */
    @Test
    public void externalCommvaultConfigParamsTest() {
        // TODO: test externalCommvaultConfigParams
    }

    /**
     * Test the property 'externalCommvaultConfigTemplates'
     */
    @Test
    public void externalCommvaultConfigTemplatesTest() {
        // TODO: test externalCommvaultConfigTemplates
    }

}
