/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.10.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.api;

import com.delphix.dct.ApiException;
import com.delphix.dct.models.AddEngineToHyperscaleResponse;
import com.delphix.dct.models.DeleteTag;
import com.delphix.dct.models.EngineIdBody;
import com.delphix.dct.models.HyperscaleInstance;
import com.delphix.dct.models.HyperscaleInstanceRegistrationParameter;
import com.delphix.dct.models.HyperscaleInstanceUpdateParams;
import com.delphix.dct.models.ListHyperscaleInstancesResponse;
import com.delphix.dct.models.RemoveEngineFromHyperscaleResponse;
import com.delphix.dct.models.SearchBody;
import com.delphix.dct.models.SearchHyperscaleInstancesResponse;
import com.delphix.dct.models.SyncEnginesHyperscaleParameters;
import com.delphix.dct.models.SyncEnginesHyperscaleResponse;
import com.delphix.dct.models.TagsRequest;
import com.delphix.dct.models.TagsResponse;
import com.delphix.dct.models.UnregisterHyperscaleInstanceResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HyperscaleInstanceApi
 */
@Disabled
public class HyperscaleInstanceApiTest {

    private final HyperscaleInstanceApi api = new HyperscaleInstanceApi();

    /**
     * Add an engine to a Hyperscale Instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addEngineToHyperscaleInstanceTest() throws ApiException {
        String hyperscaleInstanceId = null;
        EngineIdBody engineIdBody = null;
        AddEngineToHyperscaleResponse response = api.addEngineToHyperscaleInstance(hyperscaleInstanceId, engineIdBody);
        // TODO: test validations
    }

    /**
     * Create tags for a Hyperscale Instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createHyperscaleInstanceTagsTest() throws ApiException {
        String hyperscaleInstanceId = null;
        TagsRequest tagsRequest = null;
        TagsResponse response = api.createHyperscaleInstanceTags(hyperscaleInstanceId, tagsRequest);
        // TODO: test validations
    }

    /**
     * Delete tags for a Hyperscale Instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteHyperscaleInstanceTagsTest() throws ApiException {
        String hyperscaleInstanceId = null;
        DeleteTag deleteTag = null;
        api.deleteHyperscaleInstanceTags(hyperscaleInstanceId, deleteTag);
        // TODO: test validations
    }

    /**
     * Returns a Hyperscale Instance by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHyperscaleInstanceByIdTest() throws ApiException {
        String hyperscaleInstanceId = null;
        HyperscaleInstance response = api.getHyperscaleInstanceById(hyperscaleInstanceId);
        // TODO: test validations
    }

    /**
     * Get tags for a Hyperscale Instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHyperscaleInstanceTagsTest() throws ApiException {
        String hyperscaleInstanceId = null;
        TagsResponse response = api.getHyperscaleInstanceTags(hyperscaleInstanceId);
        // TODO: test validations
    }

    /**
     * Returns a list of Hyperscale instances.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHyperscaleInstancesTest() throws ApiException {
        Integer limit = null;
        String cursor = null;
        String sort = null;
        ListHyperscaleInstancesResponse response = api.getHyperscaleInstances(limit, cursor, sort);
        // TODO: test validations
    }

    /**
     * Register a Hyperscale instance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registerHyperscaleInstanceTest() throws ApiException {
        HyperscaleInstanceRegistrationParameter hyperscaleInstanceRegistrationParameter = null;
        HyperscaleInstance response = api.registerHyperscaleInstance(hyperscaleInstanceRegistrationParameter);
        // TODO: test validations
    }

    /**
     * Remove an engine from a Hyperscale Instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeEngineFromHyperscaleInstanceTest() throws ApiException {
        String hyperscaleInstanceId = null;
        EngineIdBody engineIdBody = null;
        RemoveEngineFromHyperscaleResponse response = api.removeEngineFromHyperscaleInstance(hyperscaleInstanceId, engineIdBody);
        // TODO: test validations
    }

    /**
     * Search for Hyperscale instances.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchHyperscaleInstancesTest() throws ApiException {
        Integer limit = null;
        String cursor = null;
        String sort = null;
        SearchBody searchBody = null;
        SearchHyperscaleInstancesResponse response = api.searchHyperscaleInstances(limit, cursor, sort, searchBody);
        // TODO: test validations
    }

    /**
     * Sync the global object from a source engine to engines on a Hyperscale Instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncEnginesHyperscaleInstanceTest() throws ApiException {
        String hyperscaleInstanceId = null;
        SyncEnginesHyperscaleParameters syncEnginesHyperscaleParameters = null;
        SyncEnginesHyperscaleResponse response = api.syncEnginesHyperscaleInstance(hyperscaleInstanceId, syncEnginesHyperscaleParameters);
        // TODO: test validations
    }

    /**
     * Unregister a Hyperscale Instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unregisterHyperscaleInstanceTest() throws ApiException {
        String hyperscaleInstanceId = null;
        UnregisterHyperscaleInstanceResponse response = api.unregisterHyperscaleInstance(hyperscaleInstanceId);
        // TODO: test validations
    }

    /**
     * Update an Hyperscale Instance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateHyperscaleInstanceTest() throws ApiException {
        String hyperscaleInstanceId = null;
        HyperscaleInstanceUpdateParams hyperscaleInstanceUpdateParams = null;
        HyperscaleInstance response = api.updateHyperscaleInstance(hyperscaleInstanceId, hyperscaleInstanceUpdateParams);
        // TODO: test validations
    }

}
