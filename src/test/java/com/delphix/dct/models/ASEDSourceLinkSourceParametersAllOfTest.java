/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import com.delphix.dct.models.SourceOperation;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ASEDSourceLinkSourceParametersAllOf
 */
public class ASEDSourceLinkSourceParametersAllOfTest {
    private final ASEDSourceLinkSourceParametersAllOf model = new ASEDSourceLinkSourceParametersAllOf();

    /**
     * Model tests for ASEDSourceLinkSourceParametersAllOf
     */
    @Test
    public void testASEDSourceLinkSourceParametersAllOf() {
        // TODO: test ASEDSourceLinkSourceParametersAllOf
    }

    /**
     * Test the property 'mountBase'
     */
    @Test
    public void mountBaseTest() {
        // TODO: test mountBase
    }

    /**
     * Test the property 'loadBackupPath'
     */
    @Test
    public void loadBackupPathTest() {
        // TODO: test loadBackupPath
    }

    /**
     * Test the property 'backupServerName'
     */
    @Test
    public void backupServerNameTest() {
        // TODO: test backupServerName
    }

    /**
     * Test the property 'backupHostUser'
     */
    @Test
    public void backupHostUserTest() {
        // TODO: test backupHostUser
    }

    /**
     * Test the property 'backupHost'
     */
    @Test
    public void backupHostTest() {
        // TODO: test backupHost
    }

    /**
     * Test the property 'dumpCredentials'
     */
    @Test
    public void dumpCredentialsTest() {
        // TODO: test dumpCredentials
    }

    /**
     * Test the property 'sourceHostUser'
     */
    @Test
    public void sourceHostUserTest() {
        // TODO: test sourceHostUser
    }

    /**
     * Test the property 'dbUser'
     */
    @Test
    public void dbUserTest() {
        // TODO: test dbUser
    }

    /**
     * Test the property 'dbPassword'
     */
    @Test
    public void dbPasswordTest() {
        // TODO: test dbPassword
    }

    /**
     * Test the property 'dbVault'
     */
    @Test
    public void dbVaultTest() {
        // TODO: test dbVault
    }

    /**
     * Test the property 'dbHashicorpVaultEngine'
     */
    @Test
    public void dbHashicorpVaultEngineTest() {
        // TODO: test dbHashicorpVaultEngine
    }

    /**
     * Test the property 'dbHashicorpVaultSecretPath'
     */
    @Test
    public void dbHashicorpVaultSecretPathTest() {
        // TODO: test dbHashicorpVaultSecretPath
    }

    /**
     * Test the property 'dbHashicorpVaultUsernameKey'
     */
    @Test
    public void dbHashicorpVaultUsernameKeyTest() {
        // TODO: test dbHashicorpVaultUsernameKey
    }

    /**
     * Test the property 'dbHashicorpVaultSecretKey'
     */
    @Test
    public void dbHashicorpVaultSecretKeyTest() {
        // TODO: test dbHashicorpVaultSecretKey
    }

    /**
     * Test the property 'dbAzureVaultName'
     */
    @Test
    public void dbAzureVaultNameTest() {
        // TODO: test dbAzureVaultName
    }

    /**
     * Test the property 'dbAzureVaultUsernameKey'
     */
    @Test
    public void dbAzureVaultUsernameKeyTest() {
        // TODO: test dbAzureVaultUsernameKey
    }

    /**
     * Test the property 'dbAzureVaultSecretKey'
     */
    @Test
    public void dbAzureVaultSecretKeyTest() {
        // TODO: test dbAzureVaultSecretKey
    }

    /**
     * Test the property 'dbCyberarkVaultQueryString'
     */
    @Test
    public void dbCyberarkVaultQueryStringTest() {
        // TODO: test dbCyberarkVaultQueryString
    }

    /**
     * Test the property 'stagingRepository'
     */
    @Test
    public void stagingRepositoryTest() {
        // TODO: test stagingRepository
    }

    /**
     * Test the property 'stagingHostUser'
     */
    @Test
    public void stagingHostUserTest() {
        // TODO: test stagingHostUser
    }

    /**
     * Test the property 'validatedSyncMode'
     */
    @Test
    public void validatedSyncModeTest() {
        // TODO: test validatedSyncMode
    }

    /**
     * Test the property 'dumpHistoryFileEnabled'
     */
    @Test
    public void dumpHistoryFileEnabledTest() {
        // TODO: test dumpHistoryFileEnabled
    }

    /**
     * Test the property 'dropAndRecreateDevices'
     */
    @Test
    public void dropAndRecreateDevicesTest() {
        // TODO: test dropAndRecreateDevices
    }

    /**
     * Test the property 'syncStrategy'
     */
    @Test
    public void syncStrategyTest() {
        // TODO: test syncStrategy
    }

    /**
     * Test the property 'aseBackupFiles'
     */
    @Test
    public void aseBackupFilesTest() {
        // TODO: test aseBackupFiles
    }

    /**
     * Test the property 'preValidatedSync'
     */
    @Test
    public void preValidatedSyncTest() {
        // TODO: test preValidatedSync
    }

    /**
     * Test the property 'postValidatedSync'
     */
    @Test
    public void postValidatedSyncTest() {
        // TODO: test postValidatedSync
    }

}
