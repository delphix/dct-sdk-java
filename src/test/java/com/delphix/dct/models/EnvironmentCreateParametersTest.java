/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.10.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for EnvironmentCreateParameters
 */
public class EnvironmentCreateParametersTest {
    private final EnvironmentCreateParameters model = new EnvironmentCreateParameters();

    /**
     * Model tests for EnvironmentCreateParameters
     */
    @Test
    public void testEnvironmentCreateParameters() {
        // TODO: test EnvironmentCreateParameters
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'engineId'
     */
    @Test
    public void engineIdTest() {
        // TODO: test engineId
    }

    /**
     * Test the property 'osName'
     */
    @Test
    public void osNameTest() {
        // TODO: test osName
    }

    /**
     * Test the property 'isCluster'
     */
    @Test
    public void isClusterTest() {
        // TODO: test isCluster
    }

    /**
     * Test the property 'clusterHome'
     */
    @Test
    public void clusterHomeTest() {
        // TODO: test clusterHome
    }

    /**
     * Test the property 'hostname'
     */
    @Test
    public void hostnameTest() {
        // TODO: test hostname
    }

    /**
     * Test the property 'stagingEnvironment'
     */
    @Test
    public void stagingEnvironmentTest() {
        // TODO: test stagingEnvironment
    }

    /**
     * Test the property 'connectorPort'
     */
    @Test
    public void connectorPortTest() {
        // TODO: test connectorPort
    }

    /**
     * Test the property 'connectorAuthenticationKey'
     */
    @Test
    public void connectorAuthenticationKeyTest() {
        // TODO: test connectorAuthenticationKey
    }

    /**
     * Test the property 'isTarget'
     */
    @Test
    public void isTargetTest() {
        // TODO: test isTarget
    }

    /**
     * Test the property 'sshPort'
     */
    @Test
    public void sshPortTest() {
        // TODO: test sshPort
    }

    /**
     * Test the property 'toolkitPath'
     */
    @Test
    public void toolkitPathTest() {
        // TODO: test toolkitPath
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'vault'
     */
    @Test
    public void vaultTest() {
        // TODO: test vault
    }

    /**
     * Test the property 'vaultUsername'
     */
    @Test
    public void vaultUsernameTest() {
        // TODO: test vaultUsername
    }

    /**
     * Test the property 'hashicorpVaultEngine'
     */
    @Test
    public void hashicorpVaultEngineTest() {
        // TODO: test hashicorpVaultEngine
    }

    /**
     * Test the property 'hashicorpVaultSecretPath'
     */
    @Test
    public void hashicorpVaultSecretPathTest() {
        // TODO: test hashicorpVaultSecretPath
    }

    /**
     * Test the property 'hashicorpVaultUsernameKey'
     */
    @Test
    public void hashicorpVaultUsernameKeyTest() {
        // TODO: test hashicorpVaultUsernameKey
    }

    /**
     * Test the property 'hashicorpVaultSecretKey'
     */
    @Test
    public void hashicorpVaultSecretKeyTest() {
        // TODO: test hashicorpVaultSecretKey
    }

    /**
     * Test the property 'cyberarkVaultQueryString'
     */
    @Test
    public void cyberarkVaultQueryStringTest() {
        // TODO: test cyberarkVaultQueryString
    }

    /**
     * Test the property 'useKerberosAuthentication'
     */
    @Test
    public void useKerberosAuthenticationTest() {
        // TODO: test useKerberosAuthentication
    }

    /**
     * Test the property 'useEnginePublicKey'
     */
    @Test
    public void useEnginePublicKeyTest() {
        // TODO: test useEnginePublicKey
    }

    /**
     * Test the property 'nfsAddresses'
     */
    @Test
    public void nfsAddressesTest() {
        // TODO: test nfsAddresses
    }

    /**
     * Test the property 'aseDbVaultUsername'
     */
    @Test
    public void aseDbVaultUsernameTest() {
        // TODO: test aseDbVaultUsername
    }

    /**
     * Test the property 'aseDbUsername'
     */
    @Test
    public void aseDbUsernameTest() {
        // TODO: test aseDbUsername
    }

    /**
     * Test the property 'aseDbPassword'
     */
    @Test
    public void aseDbPasswordTest() {
        // TODO: test aseDbPassword
    }

    /**
     * Test the property 'aseDbVault'
     */
    @Test
    public void aseDbVaultTest() {
        // TODO: test aseDbVault
    }

    /**
     * Test the property 'aseDbHashicorpVaultEngine'
     */
    @Test
    public void aseDbHashicorpVaultEngineTest() {
        // TODO: test aseDbHashicorpVaultEngine
    }

    /**
     * Test the property 'aseDbHashicorpVaultSecretPath'
     */
    @Test
    public void aseDbHashicorpVaultSecretPathTest() {
        // TODO: test aseDbHashicorpVaultSecretPath
    }

    /**
     * Test the property 'aseDbHashicorpVaultUsernameKey'
     */
    @Test
    public void aseDbHashicorpVaultUsernameKeyTest() {
        // TODO: test aseDbHashicorpVaultUsernameKey
    }

    /**
     * Test the property 'aseDbHashicorpVaultSecretKey'
     */
    @Test
    public void aseDbHashicorpVaultSecretKeyTest() {
        // TODO: test aseDbHashicorpVaultSecretKey
    }

    /**
     * Test the property 'aseDbCyberarkVaultQueryString'
     */
    @Test
    public void aseDbCyberarkVaultQueryStringTest() {
        // TODO: test aseDbCyberarkVaultQueryString
    }

    /**
     * Test the property 'aseDbUseKerberosAuthentication'
     */
    @Test
    public void aseDbUseKerberosAuthenticationTest() {
        // TODO: test aseDbUseKerberosAuthentication
    }

    /**
     * Test the property 'javaHome'
     */
    @Test
    public void javaHomeTest() {
        // TODO: test javaHome
    }

    /**
     * Test the property 'dspKeystorePath'
     */
    @Test
    public void dspKeystorePathTest() {
        // TODO: test dspKeystorePath
    }

    /**
     * Test the property 'dspKeystorePassword'
     */
    @Test
    public void dspKeystorePasswordTest() {
        // TODO: test dspKeystorePassword
    }

    /**
     * Test the property 'dspKeystoreAlias'
     */
    @Test
    public void dspKeystoreAliasTest() {
        // TODO: test dspKeystoreAlias
    }

    /**
     * Test the property 'dspTruststorePath'
     */
    @Test
    public void dspTruststorePathTest() {
        // TODO: test dspTruststorePath
    }

    /**
     * Test the property 'dspTruststorePassword'
     */
    @Test
    public void dspTruststorePasswordTest() {
        // TODO: test dspTruststorePassword
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'makeCurrentAccountOwner'
     */
    @Test
    public void makeCurrentAccountOwnerTest() {
        // TODO: test makeCurrentAccountOwner
    }

}
