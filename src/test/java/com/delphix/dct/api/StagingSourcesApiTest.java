/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.10.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.api;

import com.delphix.dct.ApiException;
import com.delphix.dct.models.DeleteTag;
import com.delphix.dct.models.ListStagingSourcesResponse;
import com.delphix.dct.models.SearchBody;
import com.delphix.dct.models.SearchStagingSourcesResponse;
import com.delphix.dct.models.StagingSource;
import com.delphix.dct.models.TagsRequest;
import com.delphix.dct.models.TagsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StagingSourcesApi
 */
@Disabled
public class StagingSourcesApiTest {

    private final StagingSourcesApi api = new StagingSourcesApi();

    /**
     * Create tags for a Staging Source.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createStagingSourceTagsTest() throws ApiException {
        String stagingSourceId = null;
        TagsRequest tagsRequest = null;
        TagsResponse response = api.createStagingSourceTags(stagingSourceId, tagsRequest);
        // TODO: test validations
    }

    /**
     * Delete tags for a Staging Source.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteStagingSourceTagsTest() throws ApiException {
        String stagingSourceId = null;
        DeleteTag deleteTag = null;
        api.deleteStagingSourceTags(stagingSourceId, deleteTag);
        // TODO: test validations
    }

    /**
     * Get a staging source by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStagingSourceByIdTest() throws ApiException {
        String stagingSourceId = null;
        StagingSource response = api.getStagingSourceById(stagingSourceId);
        // TODO: test validations
    }

    /**
     * Get tags for a Staging Source.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStagingSourceTagsTest() throws ApiException {
        String stagingSourceId = null;
        TagsResponse response = api.getStagingSourceTags(stagingSourceId);
        // TODO: test validations
    }

    /**
     * List all staging sources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStagingSourcesTest() throws ApiException {
        Integer limit = null;
        String cursor = null;
        String sort = null;
        ListStagingSourcesResponse response = api.getStagingSources(limit, cursor, sort);
        // TODO: test validations
    }

    /**
     * Search for Staging Sources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchStagingSourcesTest() throws ApiException {
        Integer limit = null;
        String cursor = null;
        String sort = null;
        SearchBody searchBody = null;
        SearchStagingSourcesResponse response = api.searchStagingSources(limit, cursor, sort, searchBody);
        // TODO: test validations
    }

}
