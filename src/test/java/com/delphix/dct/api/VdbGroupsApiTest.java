/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.10.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.api;

import com.delphix.dct.ApiException;
import com.delphix.dct.models.CreateVDBGroupRequest;
import com.delphix.dct.models.CreateVDBGroupResponse;
import com.delphix.dct.models.DeleteTag;
import com.delphix.dct.models.ListBookmarksByVDBGroupsResponse;
import com.delphix.dct.models.ListVDBGroupsResponse;
import com.delphix.dct.models.LockVDBGroupParameters;
import com.delphix.dct.models.ProvisionVDBGroupFromBookmarkParameters;
import com.delphix.dct.models.ProvisionVDBGroupFromBookmarkResponse;
import com.delphix.dct.models.RefreshVDBGroupParameters;
import com.delphix.dct.models.RefreshVDBGroupResponse;
import com.delphix.dct.models.RollbackVDBGroupParameters;
import com.delphix.dct.models.RollbackVDBGroupResponse;
import com.delphix.dct.models.SearchBody;
import com.delphix.dct.models.SearchBookmarksByVDBGroupsResponse;
import com.delphix.dct.models.SearchVDBGroupResponse;
import com.delphix.dct.models.TagsRequest;
import com.delphix.dct.models.TagsResponse;
import com.delphix.dct.models.UpdateVDBGroupParameters;
import com.delphix.dct.models.VDBGroup;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VdbGroupsApi
 */
@Disabled
public class VdbGroupsApiTest {

    private final VdbGroupsApi api = new VdbGroupsApi();

    /**
     * Create a new VDBGroup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createVdbGroupTest() throws ApiException {
        CreateVDBGroupRequest createVDBGroupRequest = null;
        CreateVDBGroupResponse response = api.createVdbGroup(createVDBGroupRequest);
        // TODO: test validations
    }

    /**
     * Create tags for a VDB Group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createVdbGroupsTagsTest() throws ApiException {
        String vdbGroupId = null;
        TagsRequest tagsRequest = null;
        TagsResponse response = api.createVdbGroupsTags(vdbGroupId, tagsRequest);
        // TODO: test validations
    }

    /**
     * Delete a VDBGoup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVdbGroupTest() throws ApiException {
        String vdbGroupId = null;
        api.deleteVdbGroup(vdbGroupId);
        // TODO: test validations
    }

    /**
     * Delete tags for a VDB Group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVdbGroupTagsTest() throws ApiException {
        String vdbGroupId = null;
        DeleteTag deleteTag = null;
        api.deleteVdbGroupTags(vdbGroupId, deleteTag);
        // TODO: test validations
    }

    /**
     * List bookmarks compatible with this VDB Group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBookmarksByVdbGroupTest() throws ApiException {
        String vdbGroupId = null;
        Integer limit = null;
        String cursor = null;
        String sort = null;
        ListBookmarksByVDBGroupsResponse response = api.getBookmarksByVdbGroup(vdbGroupId, limit, cursor, sort);
        // TODO: test validations
    }

    /**
     * Get a VDBGroup by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVdbGroupTest() throws ApiException {
        String vdbGroupId = null;
        VDBGroup response = api.getVdbGroup(vdbGroupId);
        // TODO: test validations
    }

    /**
     * Get tags for a VDB Group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVdbGroupTagsTest() throws ApiException {
        String vdbGroupId = null;
        TagsResponse response = api.getVdbGroupTags(vdbGroupId);
        // TODO: test validations
    }

    /**
     * List all VDBGroups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVdbGroupsTest() throws ApiException {
        Integer limit = null;
        String cursor = null;
        String sort = null;
        ListVDBGroupsResponse response = api.getVdbGroups(limit, cursor, sort);
        // TODO: test validations
    }

    /**
     * Lock a VDB Group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lockVdbGroupTest() throws ApiException {
        String vdbGroupId = null;
        LockVDBGroupParameters lockVDBGroupParameters = null;
        VDBGroup response = api.lockVdbGroup(vdbGroupId, lockVDBGroupParameters);
        // TODO: test validations
    }

    /**
     * Provision a new VDB Group from a Bookmark.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void provisionVdbGroupFromBookmarkTest() throws ApiException {
        ProvisionVDBGroupFromBookmarkParameters provisionVDBGroupFromBookmarkParameters = null;
        ProvisionVDBGroupFromBookmarkResponse response = api.provisionVdbGroupFromBookmark(provisionVDBGroupFromBookmarkParameters);
        // TODO: test validations
    }

    /**
     * Refresh a VDBGroup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void refreshVdbGroupTest() throws ApiException {
        String vdbGroupId = null;
        RefreshVDBGroupParameters refreshVDBGroupParameters = null;
        RefreshVDBGroupResponse response = api.refreshVdbGroup(vdbGroupId, refreshVDBGroupParameters);
        // TODO: test validations
    }

    /**
     * Rollback a VDBGroup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rollbackVdbGroupTest() throws ApiException {
        String vdbGroupId = null;
        RollbackVDBGroupParameters rollbackVDBGroupParameters = null;
        RollbackVDBGroupResponse response = api.rollbackVdbGroup(vdbGroupId, rollbackVDBGroupParameters);
        // TODO: test validations
    }

    /**
     * Search for bookmarks compatible with this VDB Group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchBookmarksByVdbGroupTest() throws ApiException {
        String vdbGroupId = null;
        Integer limit = null;
        String cursor = null;
        String sort = null;
        SearchBody searchBody = null;
        SearchBookmarksByVDBGroupsResponse response = api.searchBookmarksByVdbGroup(vdbGroupId, limit, cursor, sort, searchBody);
        // TODO: test validations
    }

    /**
     * Search for VDB Groups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchVdbGroupsTest() throws ApiException {
        Integer limit = null;
        String cursor = null;
        String sort = null;
        SearchBody searchBody = null;
        SearchVDBGroupResponse response = api.searchVdbGroups(limit, cursor, sort, searchBody);
        // TODO: test validations
    }

    /**
     * Unlock a VDB Group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unlockVdbGroupTest() throws ApiException {
        String vdbGroupId = null;
        VDBGroup response = api.unlockVdbGroup(vdbGroupId);
        // TODO: test validations
    }

    /**
     * Update values of a VDB group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateVdbGroupByIdTest() throws ApiException {
        String vdbGroupId = null;
        UpdateVDBGroupParameters updateVDBGroupParameters = null;
        VDBGroup response = api.updateVdbGroupById(vdbGroupId, updateVDBGroupParameters);
        // TODO: test validations
    }

}
