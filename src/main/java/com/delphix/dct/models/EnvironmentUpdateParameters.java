/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.10.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.delphix.dct.JSON;

/**
 * EnvironmentUpdateParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-04T14:49:34.152994+05:30[Asia/Kolkata]", comments = "Generator version: 7.4.0")
public class EnvironmentUpdateParameters {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STAGING_ENVIRONMENT = "staging_environment";
  @SerializedName(SERIALIZED_NAME_STAGING_ENVIRONMENT)
  private String stagingEnvironment;

  public static final String SERIALIZED_NAME_CLUSTER_ADDRESS = "cluster_address";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ADDRESS)
  private String clusterAddress;

  public static final String SERIALIZED_NAME_CLUSTER_HOME = "cluster_home";
  @SerializedName(SERIALIZED_NAME_CLUSTER_HOME)
  private String clusterHome;

  public static final String SERIALIZED_NAME_ASE_DB_USERNAME = "ase_db_username";
  @SerializedName(SERIALIZED_NAME_ASE_DB_USERNAME)
  private String aseDbUsername;

  public static final String SERIALIZED_NAME_ASE_DB_PASSWORD = "ase_db_password";
  @SerializedName(SERIALIZED_NAME_ASE_DB_PASSWORD)
  private String aseDbPassword;

  public static final String SERIALIZED_NAME_ASE_DB_VAULT = "ase_db_vault";
  @SerializedName(SERIALIZED_NAME_ASE_DB_VAULT)
  private String aseDbVault;

  public static final String SERIALIZED_NAME_ASE_DB_VAULT_USERNAME = "ase_db_vault_username";
  @SerializedName(SERIALIZED_NAME_ASE_DB_VAULT_USERNAME)
  private String aseDbVaultUsername;

  public static final String SERIALIZED_NAME_ASE_DB_HASHICORP_VAULT_ENGINE = "ase_db_hashicorp_vault_engine";
  @SerializedName(SERIALIZED_NAME_ASE_DB_HASHICORP_VAULT_ENGINE)
  private String aseDbHashicorpVaultEngine;

  public static final String SERIALIZED_NAME_ASE_DB_HASHICORP_VAULT_SECRET_PATH = "ase_db_hashicorp_vault_secret_path";
  @SerializedName(SERIALIZED_NAME_ASE_DB_HASHICORP_VAULT_SECRET_PATH)
  private String aseDbHashicorpVaultSecretPath;

  public static final String SERIALIZED_NAME_ASE_DB_HASHICORP_VAULT_USERNAME_KEY = "ase_db_hashicorp_vault_username_key";
  @SerializedName(SERIALIZED_NAME_ASE_DB_HASHICORP_VAULT_USERNAME_KEY)
  private String aseDbHashicorpVaultUsernameKey;

  public static final String SERIALIZED_NAME_ASE_DB_HASHICORP_VAULT_SECRET_KEY = "ase_db_hashicorp_vault_secret_key";
  @SerializedName(SERIALIZED_NAME_ASE_DB_HASHICORP_VAULT_SECRET_KEY)
  private String aseDbHashicorpVaultSecretKey;

  public static final String SERIALIZED_NAME_ASE_DB_CYBERARK_VAULT_QUERY_STRING = "ase_db_cyberark_vault_query_string";
  @SerializedName(SERIALIZED_NAME_ASE_DB_CYBERARK_VAULT_QUERY_STRING)
  private String aseDbCyberarkVaultQueryString;

  public static final String SERIALIZED_NAME_ASE_DB_USE_KERBEROS_AUTHENTICATION = "ase_db_use_kerberos_authentication";
  @SerializedName(SERIALIZED_NAME_ASE_DB_USE_KERBEROS_AUTHENTICATION)
  private Boolean aseDbUseKerberosAuthentication;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public EnvironmentUpdateParameters() {
  }

  public EnvironmentUpdateParameters name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the environment.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public EnvironmentUpdateParameters stagingEnvironment(String stagingEnvironment) {
    this.stagingEnvironment = stagingEnvironment;
    return this;
  }

   /**
   * Id of the connector environment which is used to connect to this source environment.
   * @return stagingEnvironment
  **/
  @javax.annotation.Nullable
  public String getStagingEnvironment() {
    return stagingEnvironment;
  }

  public void setStagingEnvironment(String stagingEnvironment) {
    this.stagingEnvironment = stagingEnvironment;
  }


  public EnvironmentUpdateParameters clusterAddress(String clusterAddress) {
    this.clusterAddress = clusterAddress;
    return this;
  }

   /**
   * Address of the cluster. This property can be modified for Windows cluster only.
   * @return clusterAddress
  **/
  @javax.annotation.Nullable
  public String getClusterAddress() {
    return clusterAddress;
  }

  public void setClusterAddress(String clusterAddress) {
    this.clusterAddress = clusterAddress;
  }


  public EnvironmentUpdateParameters clusterHome(String clusterHome) {
    this.clusterHome = clusterHome;
    return this;
  }

   /**
   * Absolute path to cluster home directory. This parameter is for UNIX cluster environments.
   * @return clusterHome
  **/
  @javax.annotation.Nullable
  public String getClusterHome() {
    return clusterHome;
  }

  public void setClusterHome(String clusterHome) {
    this.clusterHome = clusterHome;
  }


  public EnvironmentUpdateParameters aseDbUsername(String aseDbUsername) {
    this.aseDbUsername = aseDbUsername;
    return this;
  }

   /**
   * username of the SAP ASE database.
   * @return aseDbUsername
  **/
  @javax.annotation.Nullable
  public String getAseDbUsername() {
    return aseDbUsername;
  }

  public void setAseDbUsername(String aseDbUsername) {
    this.aseDbUsername = aseDbUsername;
  }


  public EnvironmentUpdateParameters aseDbPassword(String aseDbPassword) {
    this.aseDbPassword = aseDbPassword;
    return this;
  }

   /**
   * password of the SAP ASE database.
   * @return aseDbPassword
  **/
  @javax.annotation.Nullable
  public String getAseDbPassword() {
    return aseDbPassword;
  }

  public void setAseDbPassword(String aseDbPassword) {
    this.aseDbPassword = aseDbPassword;
  }


  public EnvironmentUpdateParameters aseDbVault(String aseDbVault) {
    this.aseDbVault = aseDbVault;
    return this;
  }

   /**
   * The name or reference of the vault from which to read the ASE database credentials.
   * @return aseDbVault
  **/
  @javax.annotation.Nullable
  public String getAseDbVault() {
    return aseDbVault;
  }

  public void setAseDbVault(String aseDbVault) {
    this.aseDbVault = aseDbVault;
  }


  public EnvironmentUpdateParameters aseDbVaultUsername(String aseDbVaultUsername) {
    this.aseDbVaultUsername = aseDbVaultUsername;
    return this;
  }

   /**
   * Delphix display name for the vault user
   * @return aseDbVaultUsername
  **/
  @javax.annotation.Nullable
  public String getAseDbVaultUsername() {
    return aseDbVaultUsername;
  }

  public void setAseDbVaultUsername(String aseDbVaultUsername) {
    this.aseDbVaultUsername = aseDbVaultUsername;
  }


  public EnvironmentUpdateParameters aseDbHashicorpVaultEngine(String aseDbHashicorpVaultEngine) {
    this.aseDbHashicorpVaultEngine = aseDbHashicorpVaultEngine;
    return this;
  }

   /**
   * Vault engine name where the credential is stored.
   * @return aseDbHashicorpVaultEngine
  **/
  @javax.annotation.Nullable
  public String getAseDbHashicorpVaultEngine() {
    return aseDbHashicorpVaultEngine;
  }

  public void setAseDbHashicorpVaultEngine(String aseDbHashicorpVaultEngine) {
    this.aseDbHashicorpVaultEngine = aseDbHashicorpVaultEngine;
  }


  public EnvironmentUpdateParameters aseDbHashicorpVaultSecretPath(String aseDbHashicorpVaultSecretPath) {
    this.aseDbHashicorpVaultSecretPath = aseDbHashicorpVaultSecretPath;
    return this;
  }

   /**
   * Path in the vault engine where the credential is stored.
   * @return aseDbHashicorpVaultSecretPath
  **/
  @javax.annotation.Nullable
  public String getAseDbHashicorpVaultSecretPath() {
    return aseDbHashicorpVaultSecretPath;
  }

  public void setAseDbHashicorpVaultSecretPath(String aseDbHashicorpVaultSecretPath) {
    this.aseDbHashicorpVaultSecretPath = aseDbHashicorpVaultSecretPath;
  }


  public EnvironmentUpdateParameters aseDbHashicorpVaultUsernameKey(String aseDbHashicorpVaultUsernameKey) {
    this.aseDbHashicorpVaultUsernameKey = aseDbHashicorpVaultUsernameKey;
    return this;
  }

   /**
   * Key for the username in the key-value store.
   * @return aseDbHashicorpVaultUsernameKey
  **/
  @javax.annotation.Nullable
  public String getAseDbHashicorpVaultUsernameKey() {
    return aseDbHashicorpVaultUsernameKey;
  }

  public void setAseDbHashicorpVaultUsernameKey(String aseDbHashicorpVaultUsernameKey) {
    this.aseDbHashicorpVaultUsernameKey = aseDbHashicorpVaultUsernameKey;
  }


  public EnvironmentUpdateParameters aseDbHashicorpVaultSecretKey(String aseDbHashicorpVaultSecretKey) {
    this.aseDbHashicorpVaultSecretKey = aseDbHashicorpVaultSecretKey;
    return this;
  }

   /**
   * Key for the password in the key-value store.
   * @return aseDbHashicorpVaultSecretKey
  **/
  @javax.annotation.Nullable
  public String getAseDbHashicorpVaultSecretKey() {
    return aseDbHashicorpVaultSecretKey;
  }

  public void setAseDbHashicorpVaultSecretKey(String aseDbHashicorpVaultSecretKey) {
    this.aseDbHashicorpVaultSecretKey = aseDbHashicorpVaultSecretKey;
  }


  public EnvironmentUpdateParameters aseDbCyberarkVaultQueryString(String aseDbCyberarkVaultQueryString) {
    this.aseDbCyberarkVaultQueryString = aseDbCyberarkVaultQueryString;
    return this;
  }

   /**
   * Query to find a credential in the CyberArk vault.
   * @return aseDbCyberarkVaultQueryString
  **/
  @javax.annotation.Nullable
  public String getAseDbCyberarkVaultQueryString() {
    return aseDbCyberarkVaultQueryString;
  }

  public void setAseDbCyberarkVaultQueryString(String aseDbCyberarkVaultQueryString) {
    this.aseDbCyberarkVaultQueryString = aseDbCyberarkVaultQueryString;
  }


  public EnvironmentUpdateParameters aseDbUseKerberosAuthentication(Boolean aseDbUseKerberosAuthentication) {
    this.aseDbUseKerberosAuthentication = aseDbUseKerberosAuthentication;
    return this;
  }

   /**
   * Whether to use kerberos authentication for ASE DB discovery.
   * @return aseDbUseKerberosAuthentication
  **/
  @javax.annotation.Nullable
  public Boolean getAseDbUseKerberosAuthentication() {
    return aseDbUseKerberosAuthentication;
  }

  public void setAseDbUseKerberosAuthentication(Boolean aseDbUseKerberosAuthentication) {
    this.aseDbUseKerberosAuthentication = aseDbUseKerberosAuthentication;
  }


  public EnvironmentUpdateParameters description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The environment description.
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvironmentUpdateParameters environmentUpdateParameters = (EnvironmentUpdateParameters) o;
    return Objects.equals(this.name, environmentUpdateParameters.name) &&
        Objects.equals(this.stagingEnvironment, environmentUpdateParameters.stagingEnvironment) &&
        Objects.equals(this.clusterAddress, environmentUpdateParameters.clusterAddress) &&
        Objects.equals(this.clusterHome, environmentUpdateParameters.clusterHome) &&
        Objects.equals(this.aseDbUsername, environmentUpdateParameters.aseDbUsername) &&
        Objects.equals(this.aseDbPassword, environmentUpdateParameters.aseDbPassword) &&
        Objects.equals(this.aseDbVault, environmentUpdateParameters.aseDbVault) &&
        Objects.equals(this.aseDbVaultUsername, environmentUpdateParameters.aseDbVaultUsername) &&
        Objects.equals(this.aseDbHashicorpVaultEngine, environmentUpdateParameters.aseDbHashicorpVaultEngine) &&
        Objects.equals(this.aseDbHashicorpVaultSecretPath, environmentUpdateParameters.aseDbHashicorpVaultSecretPath) &&
        Objects.equals(this.aseDbHashicorpVaultUsernameKey, environmentUpdateParameters.aseDbHashicorpVaultUsernameKey) &&
        Objects.equals(this.aseDbHashicorpVaultSecretKey, environmentUpdateParameters.aseDbHashicorpVaultSecretKey) &&
        Objects.equals(this.aseDbCyberarkVaultQueryString, environmentUpdateParameters.aseDbCyberarkVaultQueryString) &&
        Objects.equals(this.aseDbUseKerberosAuthentication, environmentUpdateParameters.aseDbUseKerberosAuthentication) &&
        Objects.equals(this.description, environmentUpdateParameters.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, stagingEnvironment, clusterAddress, clusterHome, aseDbUsername, aseDbPassword, aseDbVault, aseDbVaultUsername, aseDbHashicorpVaultEngine, aseDbHashicorpVaultSecretPath, aseDbHashicorpVaultUsernameKey, aseDbHashicorpVaultSecretKey, aseDbCyberarkVaultQueryString, aseDbUseKerberosAuthentication, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvironmentUpdateParameters {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    stagingEnvironment: ").append(toIndentedString(stagingEnvironment)).append("\n");
    sb.append("    clusterAddress: ").append(toIndentedString(clusterAddress)).append("\n");
    sb.append("    clusterHome: ").append(toIndentedString(clusterHome)).append("\n");
    sb.append("    aseDbUsername: ").append(toIndentedString(aseDbUsername)).append("\n");
    sb.append("    aseDbPassword: ").append(toIndentedString(aseDbPassword)).append("\n");
    sb.append("    aseDbVault: ").append(toIndentedString(aseDbVault)).append("\n");
    sb.append("    aseDbVaultUsername: ").append(toIndentedString(aseDbVaultUsername)).append("\n");
    sb.append("    aseDbHashicorpVaultEngine: ").append(toIndentedString(aseDbHashicorpVaultEngine)).append("\n");
    sb.append("    aseDbHashicorpVaultSecretPath: ").append(toIndentedString(aseDbHashicorpVaultSecretPath)).append("\n");
    sb.append("    aseDbHashicorpVaultUsernameKey: ").append(toIndentedString(aseDbHashicorpVaultUsernameKey)).append("\n");
    sb.append("    aseDbHashicorpVaultSecretKey: ").append(toIndentedString(aseDbHashicorpVaultSecretKey)).append("\n");
    sb.append("    aseDbCyberarkVaultQueryString: ").append(toIndentedString(aseDbCyberarkVaultQueryString)).append("\n");
    sb.append("    aseDbUseKerberosAuthentication: ").append(toIndentedString(aseDbUseKerberosAuthentication)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("staging_environment");
    openapiFields.add("cluster_address");
    openapiFields.add("cluster_home");
    openapiFields.add("ase_db_username");
    openapiFields.add("ase_db_password");
    openapiFields.add("ase_db_vault");
    openapiFields.add("ase_db_vault_username");
    openapiFields.add("ase_db_hashicorp_vault_engine");
    openapiFields.add("ase_db_hashicorp_vault_secret_path");
    openapiFields.add("ase_db_hashicorp_vault_username_key");
    openapiFields.add("ase_db_hashicorp_vault_secret_key");
    openapiFields.add("ase_db_cyberark_vault_query_string");
    openapiFields.add("ase_db_use_kerberos_authentication");
    openapiFields.add("description");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to EnvironmentUpdateParameters
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EnvironmentUpdateParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnvironmentUpdateParameters is not found in the empty JSON string", EnvironmentUpdateParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EnvironmentUpdateParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EnvironmentUpdateParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("staging_environment") != null && !jsonObj.get("staging_environment").isJsonNull()) && !jsonObj.get("staging_environment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `staging_environment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("staging_environment").toString()));
      }
      if ((jsonObj.get("cluster_address") != null && !jsonObj.get("cluster_address").isJsonNull()) && !jsonObj.get("cluster_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cluster_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cluster_address").toString()));
      }
      if ((jsonObj.get("cluster_home") != null && !jsonObj.get("cluster_home").isJsonNull()) && !jsonObj.get("cluster_home").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cluster_home` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cluster_home").toString()));
      }
      if ((jsonObj.get("ase_db_username") != null && !jsonObj.get("ase_db_username").isJsonNull()) && !jsonObj.get("ase_db_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ase_db_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ase_db_username").toString()));
      }
      if ((jsonObj.get("ase_db_password") != null && !jsonObj.get("ase_db_password").isJsonNull()) && !jsonObj.get("ase_db_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ase_db_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ase_db_password").toString()));
      }
      if ((jsonObj.get("ase_db_vault") != null && !jsonObj.get("ase_db_vault").isJsonNull()) && !jsonObj.get("ase_db_vault").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ase_db_vault` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ase_db_vault").toString()));
      }
      if ((jsonObj.get("ase_db_vault_username") != null && !jsonObj.get("ase_db_vault_username").isJsonNull()) && !jsonObj.get("ase_db_vault_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ase_db_vault_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ase_db_vault_username").toString()));
      }
      if ((jsonObj.get("ase_db_hashicorp_vault_engine") != null && !jsonObj.get("ase_db_hashicorp_vault_engine").isJsonNull()) && !jsonObj.get("ase_db_hashicorp_vault_engine").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ase_db_hashicorp_vault_engine` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ase_db_hashicorp_vault_engine").toString()));
      }
      if ((jsonObj.get("ase_db_hashicorp_vault_secret_path") != null && !jsonObj.get("ase_db_hashicorp_vault_secret_path").isJsonNull()) && !jsonObj.get("ase_db_hashicorp_vault_secret_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ase_db_hashicorp_vault_secret_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ase_db_hashicorp_vault_secret_path").toString()));
      }
      if ((jsonObj.get("ase_db_hashicorp_vault_username_key") != null && !jsonObj.get("ase_db_hashicorp_vault_username_key").isJsonNull()) && !jsonObj.get("ase_db_hashicorp_vault_username_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ase_db_hashicorp_vault_username_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ase_db_hashicorp_vault_username_key").toString()));
      }
      if ((jsonObj.get("ase_db_hashicorp_vault_secret_key") != null && !jsonObj.get("ase_db_hashicorp_vault_secret_key").isJsonNull()) && !jsonObj.get("ase_db_hashicorp_vault_secret_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ase_db_hashicorp_vault_secret_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ase_db_hashicorp_vault_secret_key").toString()));
      }
      if ((jsonObj.get("ase_db_cyberark_vault_query_string") != null && !jsonObj.get("ase_db_cyberark_vault_query_string").isJsonNull()) && !jsonObj.get("ase_db_cyberark_vault_query_string").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ase_db_cyberark_vault_query_string` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ase_db_cyberark_vault_query_string").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnvironmentUpdateParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnvironmentUpdateParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnvironmentUpdateParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnvironmentUpdateParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<EnvironmentUpdateParameters>() {
           @Override
           public void write(JsonWriter out, EnvironmentUpdateParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EnvironmentUpdateParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EnvironmentUpdateParameters given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EnvironmentUpdateParameters
  * @throws IOException if the JSON string is invalid with respect to EnvironmentUpdateParameters
  */
  public static EnvironmentUpdateParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnvironmentUpdateParameters.class);
  }

 /**
  * Convert an instance of EnvironmentUpdateParameters to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

