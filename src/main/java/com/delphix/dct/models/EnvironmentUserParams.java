/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EnvironmentUserParams
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T18:53:50.335381+05:30[Asia/Kolkata]")
public class EnvironmentUserParams {
  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_VAULT = "vault";
  @SerializedName(SERIALIZED_NAME_VAULT)
  private String vault;

  public static final String SERIALIZED_NAME_VAULT_USERNAME = "vault_username";
  @SerializedName(SERIALIZED_NAME_VAULT_USERNAME)
  private String vaultUsername;

  public static final String SERIALIZED_NAME_HASHICORP_VAULT_ENGINE = "hashicorp_vault_engine";
  @SerializedName(SERIALIZED_NAME_HASHICORP_VAULT_ENGINE)
  private String hashicorpVaultEngine;

  public static final String SERIALIZED_NAME_HASHICORP_VAULT_SECRET_PATH = "hashicorp_vault_secret_path";
  @SerializedName(SERIALIZED_NAME_HASHICORP_VAULT_SECRET_PATH)
  private String hashicorpVaultSecretPath;

  public static final String SERIALIZED_NAME_HASHICORP_VAULT_USERNAME_KEY = "hashicorp_vault_username_key";
  @SerializedName(SERIALIZED_NAME_HASHICORP_VAULT_USERNAME_KEY)
  private String hashicorpVaultUsernameKey;

  public static final String SERIALIZED_NAME_HASHICORP_VAULT_SECRET_KEY = "hashicorp_vault_secret_key";
  @SerializedName(SERIALIZED_NAME_HASHICORP_VAULT_SECRET_KEY)
  private String hashicorpVaultSecretKey;

  public static final String SERIALIZED_NAME_CYBERARK_VAULT_QUERY_STRING = "cyberark_vault_query_string";
  @SerializedName(SERIALIZED_NAME_CYBERARK_VAULT_QUERY_STRING)
  private String cyberarkVaultQueryString;

  public static final String SERIALIZED_NAME_USE_KERBEROS_AUTHENTICATION = "use_kerberos_authentication";
  @SerializedName(SERIALIZED_NAME_USE_KERBEROS_AUTHENTICATION)
  private Boolean useKerberosAuthentication;

  public static final String SERIALIZED_NAME_USE_ENGINE_PUBLIC_KEY = "use_engine_public_key";
  @SerializedName(SERIALIZED_NAME_USE_ENGINE_PUBLIC_KEY)
  private Boolean useEnginePublicKey;


  public EnvironmentUserParams username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Username of the OS.
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "oracle", value = "Username of the OS.")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  public EnvironmentUserParams password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Password of the OS.
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "oracle", value = "Password of the OS.")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public EnvironmentUserParams vault(String vault) {
    
    this.vault = vault;
    return this;
  }

   /**
   * The name or reference of the vault from which to read the host credentials.
   * @return vault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "my-vault", value = "The name or reference of the vault from which to read the host credentials.")

  public String getVault() {
    return vault;
  }


  public void setVault(String vault) {
    this.vault = vault;
  }


  public EnvironmentUserParams vaultUsername(String vaultUsername) {
    
    this.vaultUsername = vaultUsername;
    return this;
  }

   /**
   * Delphix display name for the vault user
   * @return vaultUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "my-vault-user", value = "Delphix display name for the vault user")

  public String getVaultUsername() {
    return vaultUsername;
  }


  public void setVaultUsername(String vaultUsername) {
    this.vaultUsername = vaultUsername;
  }


  public EnvironmentUserParams hashicorpVaultEngine(String hashicorpVaultEngine) {
    
    this.hashicorpVaultEngine = hashicorpVaultEngine;
    return this;
  }

   /**
   * Vault engine name where the credential is stored.
   * @return hashicorpVaultEngine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "kv", value = "Vault engine name where the credential is stored.")

  public String getHashicorpVaultEngine() {
    return hashicorpVaultEngine;
  }


  public void setHashicorpVaultEngine(String hashicorpVaultEngine) {
    this.hashicorpVaultEngine = hashicorpVaultEngine;
  }


  public EnvironmentUserParams hashicorpVaultSecretPath(String hashicorpVaultSecretPath) {
    
    this.hashicorpVaultSecretPath = hashicorpVaultSecretPath;
    return this;
  }

   /**
   * Path in the vault engine where the credential is stored.
   * @return hashicorpVaultSecretPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "oracle-env", value = "Path in the vault engine where the credential is stored.")

  public String getHashicorpVaultSecretPath() {
    return hashicorpVaultSecretPath;
  }


  public void setHashicorpVaultSecretPath(String hashicorpVaultSecretPath) {
    this.hashicorpVaultSecretPath = hashicorpVaultSecretPath;
  }


  public EnvironmentUserParams hashicorpVaultUsernameKey(String hashicorpVaultUsernameKey) {
    
    this.hashicorpVaultUsernameKey = hashicorpVaultUsernameKey;
    return this;
  }

   /**
   * Key for the username in the key-value store.
   * @return hashicorpVaultUsernameKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "username", value = "Key for the username in the key-value store.")

  public String getHashicorpVaultUsernameKey() {
    return hashicorpVaultUsernameKey;
  }


  public void setHashicorpVaultUsernameKey(String hashicorpVaultUsernameKey) {
    this.hashicorpVaultUsernameKey = hashicorpVaultUsernameKey;
  }


  public EnvironmentUserParams hashicorpVaultSecretKey(String hashicorpVaultSecretKey) {
    
    this.hashicorpVaultSecretKey = hashicorpVaultSecretKey;
    return this;
  }

   /**
   * Key for the password in the key-value store.
   * @return hashicorpVaultSecretKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "secret", value = "Key for the password in the key-value store.")

  public String getHashicorpVaultSecretKey() {
    return hashicorpVaultSecretKey;
  }


  public void setHashicorpVaultSecretKey(String hashicorpVaultSecretKey) {
    this.hashicorpVaultSecretKey = hashicorpVaultSecretKey;
  }


  public EnvironmentUserParams cyberarkVaultQueryString(String cyberarkVaultQueryString) {
    
    this.cyberarkVaultQueryString = cyberarkVaultQueryString;
    return this;
  }

   /**
   * Query to find a credential in the CyberArk vault.
   * @return cyberarkVaultQueryString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Safe=Test;Folder=Test;Object=Test", value = "Query to find a credential in the CyberArk vault.")

  public String getCyberarkVaultQueryString() {
    return cyberarkVaultQueryString;
  }


  public void setCyberarkVaultQueryString(String cyberarkVaultQueryString) {
    this.cyberarkVaultQueryString = cyberarkVaultQueryString;
  }


  public EnvironmentUserParams useKerberosAuthentication(Boolean useKerberosAuthentication) {
    
    this.useKerberosAuthentication = useKerberosAuthentication;
    return this;
  }

   /**
   * Whether to use kerberos authentication.
   * @return useKerberosAuthentication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether to use kerberos authentication.")

  public Boolean getUseKerberosAuthentication() {
    return useKerberosAuthentication;
  }


  public void setUseKerberosAuthentication(Boolean useKerberosAuthentication) {
    this.useKerberosAuthentication = useKerberosAuthentication;
  }


  public EnvironmentUserParams useEnginePublicKey(Boolean useEnginePublicKey) {
    
    this.useEnginePublicKey = useEnginePublicKey;
    return this;
  }

   /**
   * Whether to use public key authentication.
   * @return useEnginePublicKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether to use public key authentication.")

  public Boolean getUseEnginePublicKey() {
    return useEnginePublicKey;
  }


  public void setUseEnginePublicKey(Boolean useEnginePublicKey) {
    this.useEnginePublicKey = useEnginePublicKey;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvironmentUserParams environmentUserParams = (EnvironmentUserParams) o;
    return Objects.equals(this.username, environmentUserParams.username) &&
        Objects.equals(this.password, environmentUserParams.password) &&
        Objects.equals(this.vault, environmentUserParams.vault) &&
        Objects.equals(this.vaultUsername, environmentUserParams.vaultUsername) &&
        Objects.equals(this.hashicorpVaultEngine, environmentUserParams.hashicorpVaultEngine) &&
        Objects.equals(this.hashicorpVaultSecretPath, environmentUserParams.hashicorpVaultSecretPath) &&
        Objects.equals(this.hashicorpVaultUsernameKey, environmentUserParams.hashicorpVaultUsernameKey) &&
        Objects.equals(this.hashicorpVaultSecretKey, environmentUserParams.hashicorpVaultSecretKey) &&
        Objects.equals(this.cyberarkVaultQueryString, environmentUserParams.cyberarkVaultQueryString) &&
        Objects.equals(this.useKerberosAuthentication, environmentUserParams.useKerberosAuthentication) &&
        Objects.equals(this.useEnginePublicKey, environmentUserParams.useEnginePublicKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, password, vault, vaultUsername, hashicorpVaultEngine, hashicorpVaultSecretPath, hashicorpVaultUsernameKey, hashicorpVaultSecretKey, cyberarkVaultQueryString, useKerberosAuthentication, useEnginePublicKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvironmentUserParams {\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    vault: ").append(toIndentedString(vault)).append("\n");
    sb.append("    vaultUsername: ").append(toIndentedString(vaultUsername)).append("\n");
    sb.append("    hashicorpVaultEngine: ").append(toIndentedString(hashicorpVaultEngine)).append("\n");
    sb.append("    hashicorpVaultSecretPath: ").append(toIndentedString(hashicorpVaultSecretPath)).append("\n");
    sb.append("    hashicorpVaultUsernameKey: ").append(toIndentedString(hashicorpVaultUsernameKey)).append("\n");
    sb.append("    hashicorpVaultSecretKey: ").append(toIndentedString(hashicorpVaultSecretKey)).append("\n");
    sb.append("    cyberarkVaultQueryString: ").append(toIndentedString(cyberarkVaultQueryString)).append("\n");
    sb.append("    useKerberosAuthentication: ").append(toIndentedString(useKerberosAuthentication)).append("\n");
    sb.append("    useEnginePublicKey: ").append(toIndentedString(useEnginePublicKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

