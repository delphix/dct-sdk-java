/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.10.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.delphix.dct.JSON;

/**
 * Parameters to Tests CommServe host and staging client connectivity on an environment.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-04T14:49:34.152994+05:30[Asia/Kolkata]", comments = "Generator version: 7.4.0")
public class CommvaultConnectivityCheckParameters {
  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "environment_id";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private String environmentId;

  public static final String SERIALIZED_NAME_ENVIRONMENT_USER_ID = "environment_user_id";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_USER_ID)
  private String environmentUserId;

  public static final String SERIALIZED_NAME_COMMSERVE_HOST_NAME = "commserve_host_name";
  @SerializedName(SERIALIZED_NAME_COMMSERVE_HOST_NAME)
  private String commserveHostName;

  public static final String SERIALIZED_NAME_SOURCE_CLIENT_NAME = "source_client_name";
  @SerializedName(SERIALIZED_NAME_SOURCE_CLIENT_NAME)
  private String sourceClientName;

  public static final String SERIALIZED_NAME_STAGING_CLIENT_NAME = "staging_client_name";
  @SerializedName(SERIALIZED_NAME_STAGING_CLIENT_NAME)
  private String stagingClientName;

  public CommvaultConnectivityCheckParameters() {
  }

  public CommvaultConnectivityCheckParameters environmentId(String environmentId) {
    this.environmentId = environmentId;
    return this;
  }

   /**
   * Id of the target environment to test Commvault connectivity from.
   * @return environmentId
  **/
  @javax.annotation.Nonnull
  public String getEnvironmentId() {
    return environmentId;
  }

  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  public CommvaultConnectivityCheckParameters environmentUserId(String environmentUserId) {
    this.environmentUserId = environmentUserId;
    return this;
  }

   /**
   * Id of the environment user.
   * @return environmentUserId
  **/
  @javax.annotation.Nonnull
  public String getEnvironmentUserId() {
    return environmentUserId;
  }

  public void setEnvironmentUserId(String environmentUserId) {
    this.environmentUserId = environmentUserId;
  }


  public CommvaultConnectivityCheckParameters commserveHostName(String commserveHostName) {
    this.commserveHostName = commserveHostName;
    return this;
  }

   /**
   * The hostname of the CommServe server to connect to.
   * @return commserveHostName
  **/
  @javax.annotation.Nonnull
  public String getCommserveHostName() {
    return commserveHostName;
  }

  public void setCommserveHostName(String commserveHostName) {
    this.commserveHostName = commserveHostName;
  }


  public CommvaultConnectivityCheckParameters sourceClientName(String sourceClientName) {
    this.sourceClientName = sourceClientName;
    return this;
  }

   /**
   * The name of the Source Client in CommServe.
   * @return sourceClientName
  **/
  @javax.annotation.Nonnull
  public String getSourceClientName() {
    return sourceClientName;
  }

  public void setSourceClientName(String sourceClientName) {
    this.sourceClientName = sourceClientName;
  }


  public CommvaultConnectivityCheckParameters stagingClientName(String stagingClientName) {
    this.stagingClientName = stagingClientName;
    return this;
  }

   /**
   * The name of the Staging Client in CommServe.
   * @return stagingClientName
  **/
  @javax.annotation.Nonnull
  public String getStagingClientName() {
    return stagingClientName;
  }

  public void setStagingClientName(String stagingClientName) {
    this.stagingClientName = stagingClientName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommvaultConnectivityCheckParameters commvaultConnectivityCheckParameters = (CommvaultConnectivityCheckParameters) o;
    return Objects.equals(this.environmentId, commvaultConnectivityCheckParameters.environmentId) &&
        Objects.equals(this.environmentUserId, commvaultConnectivityCheckParameters.environmentUserId) &&
        Objects.equals(this.commserveHostName, commvaultConnectivityCheckParameters.commserveHostName) &&
        Objects.equals(this.sourceClientName, commvaultConnectivityCheckParameters.sourceClientName) &&
        Objects.equals(this.stagingClientName, commvaultConnectivityCheckParameters.stagingClientName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environmentId, environmentUserId, commserveHostName, sourceClientName, stagingClientName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommvaultConnectivityCheckParameters {\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    environmentUserId: ").append(toIndentedString(environmentUserId)).append("\n");
    sb.append("    commserveHostName: ").append(toIndentedString(commserveHostName)).append("\n");
    sb.append("    sourceClientName: ").append(toIndentedString(sourceClientName)).append("\n");
    sb.append("    stagingClientName: ").append(toIndentedString(stagingClientName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("environment_id");
    openapiFields.add("environment_user_id");
    openapiFields.add("commserve_host_name");
    openapiFields.add("source_client_name");
    openapiFields.add("staging_client_name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("environment_id");
    openapiRequiredFields.add("environment_user_id");
    openapiRequiredFields.add("commserve_host_name");
    openapiRequiredFields.add("source_client_name");
    openapiRequiredFields.add("staging_client_name");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CommvaultConnectivityCheckParameters
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CommvaultConnectivityCheckParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommvaultConnectivityCheckParameters is not found in the empty JSON string", CommvaultConnectivityCheckParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CommvaultConnectivityCheckParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommvaultConnectivityCheckParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CommvaultConnectivityCheckParameters.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("environment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environment_id").toString()));
      }
      if (!jsonObj.get("environment_user_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environment_user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environment_user_id").toString()));
      }
      if (!jsonObj.get("commserve_host_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commserve_host_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commserve_host_name").toString()));
      }
      if (!jsonObj.get("source_client_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source_client_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source_client_name").toString()));
      }
      if (!jsonObj.get("staging_client_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `staging_client_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("staging_client_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommvaultConnectivityCheckParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommvaultConnectivityCheckParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommvaultConnectivityCheckParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommvaultConnectivityCheckParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<CommvaultConnectivityCheckParameters>() {
           @Override
           public void write(JsonWriter out, CommvaultConnectivityCheckParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommvaultConnectivityCheckParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommvaultConnectivityCheckParameters given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommvaultConnectivityCheckParameters
  * @throws IOException if the JSON string is invalid with respect to CommvaultConnectivityCheckParameters
  */
  public static CommvaultConnectivityCheckParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommvaultConnectivityCheckParameters.class);
  }

 /**
  * Convert an instance of CommvaultConnectivityCheckParameters to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

