/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.AccessGroupScope;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * An Access group is the DCT mechanism to grant roles to accounts. Each account has its own Access Group which can be used to manage permissions for that account, and an unlimited number of other Access groups can be created to manage permissions by groups of accounts.
 */
@ApiModel(description = "An Access group is the DCT mechanism to grant roles to accounts. Each account has its own Access Group which can be used to manage permissions for that account, and an unlimited number of other Access groups can be created to manage permissions by groups of accounts.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T17:08:49.349376+05:30[Asia/Kolkata]")
public class AccessGroup {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SINGLE_ACCOUNT = "single_account";
  @SerializedName(SERIALIZED_NAME_SINGLE_ACCOUNT)
  private Boolean singleAccount;

  public static final String SERIALIZED_NAME_ACCOUNT_IDS = "account_ids";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDS)
  private List<Long> accountIds = null;

  public static final String SERIALIZED_NAME_TAGGED_ACCOUNT_IDS = "tagged_account_ids";
  @SerializedName(SERIALIZED_NAME_TAGGED_ACCOUNT_IDS)
  private List<Long> taggedAccountIds = null;

  public static final String SERIALIZED_NAME_ACCOUNT_TAGS = "account_tags";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TAGS)
  private List<Tag> accountTags = null;

  public static final String SERIALIZED_NAME_SCOPES = "scopes";
  @SerializedName(SERIALIZED_NAME_SCOPES)
  private List<AccessGroupScope> scopes = null;


   /**
   * The Access group ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Access group ID.")

  public String getId() {
    return id;
  }




  public AccessGroup name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The Access group name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Access group name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public AccessGroup singleAccount(Boolean singleAccount) {
    
    this.singleAccount = singleAccount;
    return this;
  }

   /**
   * Indicates that this Access group defines the permissions of a single account, and thus account and account tags cannot be modified. Instead create a new Access group to manage permissions of multiple accounts.
   * @return singleAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates that this Access group defines the permissions of a single account, and thus account and account tags cannot be modified. Instead create a new Access group to manage permissions of multiple accounts.")

  public Boolean getSingleAccount() {
    return singleAccount;
  }


  public void setSingleAccount(Boolean singleAccount) {
    this.singleAccount = singleAccount;
  }


  public AccessGroup accountIds(List<Long> accountIds) {
    
    this.accountIds = accountIds;
    return this;
  }

  public AccessGroup addAccountIdsItem(Long accountIdsItem) {
    if (this.accountIds == null) {
      this.accountIds = new ArrayList<Long>();
    }
    this.accountIds.add(accountIdsItem);
    return this;
  }

   /**
   * List of accounts ids included individually (as opposed to added by tags) in the Access group.
   * @return accountIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of accounts ids included individually (as opposed to added by tags) in the Access group.")

  public List<Long> getAccountIds() {
    return accountIds;
  }


  public void setAccountIds(List<Long> accountIds) {
    this.accountIds = accountIds;
  }


   /**
   * List of accounts ids included by tags in the Access group.
   * @return taggedAccountIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of accounts ids included by tags in the Access group.")

  public List<Long> getTaggedAccountIds() {
    return taggedAccountIds;
  }




  public AccessGroup accountTags(List<Tag> accountTags) {
    
    this.accountTags = accountTags;
    return this;
  }

  public AccessGroup addAccountTagsItem(Tag accountTagsItem) {
    if (this.accountTags == null) {
      this.accountTags = new ArrayList<Tag>();
    }
    this.accountTags.add(accountTagsItem);
    return this;
  }

   /**
   * List of account tags. Accounts matching any of these tags will be automatically added to the Access group.
   * @return accountTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of account tags. Accounts matching any of these tags will be automatically added to the Access group.")

  public List<Tag> getAccountTags() {
    return accountTags;
  }


  public void setAccountTags(List<Tag> accountTags) {
    this.accountTags = accountTags;
  }


  public AccessGroup scopes(List<AccessGroupScope> scopes) {
    
    this.scopes = scopes;
    return this;
  }

  public AccessGroup addScopesItem(AccessGroupScope scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<AccessGroupScope>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * The Access group scopes.
   * @return scopes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Access group scopes.")

  public List<AccessGroupScope> getScopes() {
    return scopes;
  }


  public void setScopes(List<AccessGroupScope> scopes) {
    this.scopes = scopes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessGroup accessGroup = (AccessGroup) o;
    return Objects.equals(this.id, accessGroup.id) &&
        Objects.equals(this.name, accessGroup.name) &&
        Objects.equals(this.singleAccount, accessGroup.singleAccount) &&
        Objects.equals(this.accountIds, accessGroup.accountIds) &&
        Objects.equals(this.taggedAccountIds, accessGroup.taggedAccountIds) &&
        Objects.equals(this.accountTags, accessGroup.accountTags) &&
        Objects.equals(this.scopes, accessGroup.scopes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, singleAccount, accountIds, taggedAccountIds, accountTags, scopes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessGroup {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    singleAccount: ").append(toIndentedString(singleAccount)).append("\n");
    sb.append("    accountIds: ").append(toIndentedString(accountIds)).append("\n");
    sb.append("    taggedAccountIds: ").append(toIndentedString(taggedAccountIds)).append("\n");
    sb.append("    accountTags: ").append(toIndentedString(accountTags)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

