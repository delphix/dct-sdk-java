/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.AdditionalMountPoint;
import com.delphix.dct.models.ConfigSettingsStg;
import com.delphix.dct.models.OracleRacCustomEnvFile;
import com.delphix.dct.models.OracleRacCustomEnvVar;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * BaseProvisionVDBParametersAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T18:53:50.335381+05:30[Asia/Kolkata]")
public class BaseProvisionVDBParametersAllOf {
  public static final String SERIALIZED_NAME_TARGET_GROUP_ID = "target_group_id";
  @SerializedName(SERIALIZED_NAME_TARGET_GROUP_ID)
  private String targetGroupId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DATABASE_NAME = "database_name";
  @SerializedName(SERIALIZED_NAME_DATABASE_NAME)
  private String databaseName;

  public static final String SERIALIZED_NAME_CDB_ID = "cdb_id";
  @SerializedName(SERIALIZED_NAME_CDB_ID)
  private String cdbId;

  public static final String SERIALIZED_NAME_CLUSTER_NODE_IDS = "cluster_node_ids";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NODE_IDS)
  private List<String> clusterNodeIds = null;

  public static final String SERIALIZED_NAME_TRUNCATE_LOG_ON_CHECKPOINT = "truncate_log_on_checkpoint";
  @SerializedName(SERIALIZED_NAME_TRUNCATE_LOG_ON_CHECKPOINT)
  private Boolean truncateLogOnCheckpoint;

  public static final String SERIALIZED_NAME_OS_USERNAME = "os_username";
  @SerializedName(SERIALIZED_NAME_OS_USERNAME)
  private String osUsername;

  public static final String SERIALIZED_NAME_OS_PASSWORD = "os_password";
  @SerializedName(SERIALIZED_NAME_OS_PASSWORD)
  private String osPassword;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "environment_id";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private String environmentId;

  public static final String SERIALIZED_NAME_ENVIRONMENT_USER_ID = "environment_user_id";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_USER_ID)
  private String environmentUserId;

  public static final String SERIALIZED_NAME_REPOSITORY_ID = "repository_id";
  @SerializedName(SERIALIZED_NAME_REPOSITORY_ID)
  private String repositoryId;

  public static final String SERIALIZED_NAME_AUTO_SELECT_REPOSITORY = "auto_select_repository";
  @SerializedName(SERIALIZED_NAME_AUTO_SELECT_REPOSITORY)
  private Boolean autoSelectRepository;

  public static final String SERIALIZED_NAME_VDB_RESTART = "vdb_restart";
  @SerializedName(SERIALIZED_NAME_VDB_RESTART)
  private Boolean vdbRestart;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "template_id";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private String templateId;

  public static final String SERIALIZED_NAME_AUXILIARY_TEMPLATE_ID = "auxiliary_template_id";
  @SerializedName(SERIALIZED_NAME_AUXILIARY_TEMPLATE_ID)
  private String auxiliaryTemplateId;

  public static final String SERIALIZED_NAME_FILE_MAPPING_RULES = "file_mapping_rules";
  @SerializedName(SERIALIZED_NAME_FILE_MAPPING_RULES)
  private String fileMappingRules;

  public static final String SERIALIZED_NAME_ORACLE_INSTANCE_NAME = "oracle_instance_name";
  @SerializedName(SERIALIZED_NAME_ORACLE_INSTANCE_NAME)
  private String oracleInstanceName;

  public static final String SERIALIZED_NAME_UNIQUE_NAME = "unique_name";
  @SerializedName(SERIALIZED_NAME_UNIQUE_NAME)
  private String uniqueName;

  public static final String SERIALIZED_NAME_VCDB_NAME = "vcdb_name";
  @SerializedName(SERIALIZED_NAME_VCDB_NAME)
  private String vcdbName;

  public static final String SERIALIZED_NAME_VCDB_DATABASE_NAME = "vcdb_database_name";
  @SerializedName(SERIALIZED_NAME_VCDB_DATABASE_NAME)
  private String vcdbDatabaseName;

  public static final String SERIALIZED_NAME_MOUNT_POINT = "mount_point";
  @SerializedName(SERIALIZED_NAME_MOUNT_POINT)
  private String mountPoint;

  public static final String SERIALIZED_NAME_OPEN_RESET_LOGS = "open_reset_logs";
  @SerializedName(SERIALIZED_NAME_OPEN_RESET_LOGS)
  private Boolean openResetLogs;

  public static final String SERIALIZED_NAME_SNAPSHOT_POLICY_ID = "snapshot_policy_id";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_POLICY_ID)
  private String snapshotPolicyId;

  public static final String SERIALIZED_NAME_RETENTION_POLICY_ID = "retention_policy_id";
  @SerializedName(SERIALIZED_NAME_RETENTION_POLICY_ID)
  private String retentionPolicyId;

  /**
   * Recovery model of the source database (MSSql Only).
   */
  @JsonAdapter(RecoveryModelEnum.Adapter.class)
  public enum RecoveryModelEnum {
    FULL("FULL"),
    
    SIMPLE("SIMPLE"),
    
    BULK_LOGGED("BULK_LOGGED");

    private String value;

    RecoveryModelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecoveryModelEnum fromValue(String value) {
      for (RecoveryModelEnum b : RecoveryModelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RecoveryModelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecoveryModelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecoveryModelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RecoveryModelEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_RECOVERY_MODEL = "recovery_model";
  @SerializedName(SERIALIZED_NAME_RECOVERY_MODEL)
  private RecoveryModelEnum recoveryModel;

  public static final String SERIALIZED_NAME_PRE_SCRIPT = "pre_script";
  @SerializedName(SERIALIZED_NAME_PRE_SCRIPT)
  private String preScript;

  public static final String SERIALIZED_NAME_POST_SCRIPT = "post_script";
  @SerializedName(SERIALIZED_NAME_POST_SCRIPT)
  private String postScript;

  public static final String SERIALIZED_NAME_CDC_ON_PROVISION = "cdc_on_provision";
  @SerializedName(SERIALIZED_NAME_CDC_ON_PROVISION)
  private Boolean cdcOnProvision;

  public static final String SERIALIZED_NAME_ONLINE_LOG_SIZE = "online_log_size";
  @SerializedName(SERIALIZED_NAME_ONLINE_LOG_SIZE)
  private Integer onlineLogSize;

  public static final String SERIALIZED_NAME_ONLINE_LOG_GROUPS = "online_log_groups";
  @SerializedName(SERIALIZED_NAME_ONLINE_LOG_GROUPS)
  private Integer onlineLogGroups;

  public static final String SERIALIZED_NAME_ARCHIVE_LOG = "archive_log";
  @SerializedName(SERIALIZED_NAME_ARCHIVE_LOG)
  private Boolean archiveLog;

  public static final String SERIALIZED_NAME_NEW_DBID = "new_dbid";
  @SerializedName(SERIALIZED_NAME_NEW_DBID)
  private Boolean newDbid;

  public static final String SERIALIZED_NAME_LISTENER_IDS = "listener_ids";
  @SerializedName(SERIALIZED_NAME_LISTENER_IDS)
  private List<String> listenerIds = null;

  public static final String SERIALIZED_NAME_CUSTOM_ENV_VARS = "custom_env_vars";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ENV_VARS)
  private Map<String, String> customEnvVars = null;

  public static final String SERIALIZED_NAME_CUSTOM_ENV_FILES = "custom_env_files";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ENV_FILES)
  private List<String> customEnvFiles = null;

  public static final String SERIALIZED_NAME_ORACLE_RAC_CUSTOM_ENV_FILES = "oracle_rac_custom_env_files";
  @SerializedName(SERIALIZED_NAME_ORACLE_RAC_CUSTOM_ENV_FILES)
  private List<OracleRacCustomEnvFile> oracleRacCustomEnvFiles = null;

  public static final String SERIALIZED_NAME_ORACLE_RAC_CUSTOM_ENV_VARS = "oracle_rac_custom_env_vars";
  @SerializedName(SERIALIZED_NAME_ORACLE_RAC_CUSTOM_ENV_VARS)
  private List<OracleRacCustomEnvVar> oracleRacCustomEnvVars = null;

  public static final String SERIALIZED_NAME_PARENT_TDE_KEYSTORE_PATH = "parentTdeKeystorePath";
  @SerializedName(SERIALIZED_NAME_PARENT_TDE_KEYSTORE_PATH)
  private String parentTdeKeystorePath;

  public static final String SERIALIZED_NAME_PARENT_TDE_KEYSTORE_PASSWORD = "parent_tde_keystore_password";
  @SerializedName(SERIALIZED_NAME_PARENT_TDE_KEYSTORE_PASSWORD)
  private String parentTdeKeystorePassword;

  public static final String SERIALIZED_NAME_TDE_EXPORTED_KEY_FILE_SECRET = "tde_exported_key_file_secret";
  @SerializedName(SERIALIZED_NAME_TDE_EXPORTED_KEY_FILE_SECRET)
  private String tdeExportedKeyFileSecret;

  public static final String SERIALIZED_NAME_TDE_KEY_IDENTIFIER = "tde_key_identifier";
  @SerializedName(SERIALIZED_NAME_TDE_KEY_IDENTIFIER)
  private String tdeKeyIdentifier;

  public static final String SERIALIZED_NAME_TARGET_VCDB_TDE_KEYSTORE_PATH = "target_vcdb_tde_keystore_path";
  @SerializedName(SERIALIZED_NAME_TARGET_VCDB_TDE_KEYSTORE_PATH)
  private String targetVcdbTdeKeystorePath;

  public static final String SERIALIZED_NAME_CDB_TDE_KEYSTORE_PASSWORD = "cdb_tde_keystore_password";
  @SerializedName(SERIALIZED_NAME_CDB_TDE_KEYSTORE_PASSWORD)
  private String cdbTdeKeystorePassword;

  public static final String SERIALIZED_NAME_VCDB_TDE_KEY_IDENTIFIER = "vcdb_tde_key_identifier";
  @SerializedName(SERIALIZED_NAME_VCDB_TDE_KEY_IDENTIFIER)
  private String vcdbTdeKeyIdentifier;

  public static final String SERIALIZED_NAME_APPDATA_SOURCE_PARAMS = "appdata_source_params";
  @SerializedName(SERIALIZED_NAME_APPDATA_SOURCE_PARAMS)
  private Map<String, Object> appdataSourceParams = null;

  public static final String SERIALIZED_NAME_ADDITIONAL_MOUNT_POINTS = "additional_mount_points";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_MOUNT_POINTS)
  private List<AdditionalMountPoint> additionalMountPoints = null;

  public static final String SERIALIZED_NAME_APPDATA_CONFIG_PARAMS = "appdata_config_params";
  @SerializedName(SERIALIZED_NAME_APPDATA_CONFIG_PARAMS)
  private Map<String, Object> appdataConfigParams = null;

  public static final String SERIALIZED_NAME_CONFIG_PARAMS = "config_params";
  @SerializedName(SERIALIZED_NAME_CONFIG_PARAMS)
  private Map<String, Object> configParams = null;

  public static final String SERIALIZED_NAME_PRIVILEGED_OS_USER = "privileged_os_user";
  @SerializedName(SERIALIZED_NAME_PRIVILEGED_OS_USER)
  private String privilegedOsUser;

  public static final String SERIALIZED_NAME_POSTGRES_PORT = "postgres_port";
  @SerializedName(SERIALIZED_NAME_POSTGRES_PORT)
  private Integer postgresPort;

  public static final String SERIALIZED_NAME_CONFIG_SETTINGS_STG = "config_settings_stg";
  @SerializedName(SERIALIZED_NAME_CONFIG_SETTINGS_STG)
  private List<ConfigSettingsStg> configSettingsStg = null;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = null;


  public BaseProvisionVDBParametersAllOf targetGroupId(String targetGroupId) {
    
    this.targetGroupId = targetGroupId;
    return this;
  }

   /**
   * The ID of the group into which the VDB will be provisioned. If unset, a group is selected randomly on the Engine.
   * @return targetGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "group-123", value = "The ID of the group into which the VDB will be provisioned. If unset, a group is selected randomly on the Engine.")

  public String getTargetGroupId() {
    return targetGroupId;
  }


  public void setTargetGroupId(String targetGroupId) {
    this.targetGroupId = targetGroupId;
  }


  public BaseProvisionVDBParametersAllOf name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The unique name of the provisioned VDB within a group. If unset, a name is randomly generated.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "my-test-vdb", value = "The unique name of the provisioned VDB within a group. If unset, a name is randomly generated.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public BaseProvisionVDBParametersAllOf databaseName(String databaseName) {
    
    this.databaseName = databaseName;
    return this;
  }

   /**
   * The name of the database on the target environment. Defaults to the value of the name property.
   * @return databaseName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "my-test-database", value = "The name of the database on the target environment. Defaults to the value of the name property.")

  public String getDatabaseName() {
    return databaseName;
  }


  public void setDatabaseName(String databaseName) {
    this.databaseName = databaseName;
  }


  public BaseProvisionVDBParametersAllOf cdbId(String cdbId) {
    
    this.cdbId = cdbId;
    return this;
  }

   /**
   * The ID of the container database (CDB) to provision an Oracle Multitenant database into. This corresponds to a CDB or VCDB API object. When this is not set, a new vCDB will be provisioned.
   * @return cdbId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ORACLE_SINGLE_CONFIG-376", value = "The ID of the container database (CDB) to provision an Oracle Multitenant database into. This corresponds to a CDB or VCDB API object. When this is not set, a new vCDB will be provisioned.")

  public String getCdbId() {
    return cdbId;
  }


  public void setCdbId(String cdbId) {
    this.cdbId = cdbId;
  }


  public BaseProvisionVDBParametersAllOf clusterNodeIds(List<String> clusterNodeIds) {
    
    this.clusterNodeIds = clusterNodeIds;
    return this;
  }

  public BaseProvisionVDBParametersAllOf addClusterNodeIdsItem(String clusterNodeIdsItem) {
    if (this.clusterNodeIds == null) {
      this.clusterNodeIds = new ArrayList<String>();
    }
    this.clusterNodeIds.add(clusterNodeIdsItem);
    return this;
  }

   /**
   * The cluster node ids, name or addresses for this provision operation (Oracle RAC Only).
   * @return clusterNodeIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"ORACLE_CLUSTER_NODE-1\"]", value = "The cluster node ids, name or addresses for this provision operation (Oracle RAC Only).")

  public List<String> getClusterNodeIds() {
    return clusterNodeIds;
  }


  public void setClusterNodeIds(List<String> clusterNodeIds) {
    this.clusterNodeIds = clusterNodeIds;
  }


  public BaseProvisionVDBParametersAllOf truncateLogOnCheckpoint(Boolean truncateLogOnCheckpoint) {
    
    this.truncateLogOnCheckpoint = truncateLogOnCheckpoint;
    return this;
  }

   /**
   * Whether to truncate log on checkpoint (ASE only).
   * @return truncateLogOnCheckpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether to truncate log on checkpoint (ASE only).")

  public Boolean getTruncateLogOnCheckpoint() {
    return truncateLogOnCheckpoint;
  }


  public void setTruncateLogOnCheckpoint(Boolean truncateLogOnCheckpoint) {
    this.truncateLogOnCheckpoint = truncateLogOnCheckpoint;
  }


  public BaseProvisionVDBParametersAllOf osUsername(String osUsername) {
    
    this.osUsername = osUsername;
    return this;
  }

   /**
   * The name of the privileged user to run the provision operation (Oracle Only).
   * @return osUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "os-user-x", value = "The name of the privileged user to run the provision operation (Oracle Only).")

  public String getOsUsername() {
    return osUsername;
  }


  public void setOsUsername(String osUsername) {
    this.osUsername = osUsername;
  }


  public BaseProvisionVDBParametersAllOf osPassword(String osPassword) {
    
    this.osPassword = osPassword;
    return this;
  }

   /**
   * The password of the privileged user to run the provision operation (Oracle Only).
   * @return osPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "os-user-secret-password", value = "The password of the privileged user to run the provision operation (Oracle Only).")

  public String getOsPassword() {
    return osPassword;
  }


  public void setOsPassword(String osPassword) {
    this.osPassword = osPassword;
  }


  public BaseProvisionVDBParametersAllOf environmentId(String environmentId) {
    
    this.environmentId = environmentId;
    return this;
  }

   /**
   * The ID of the target environment where to provision the VDB. If repository_id unambigously identifies a repository, this is unnecessary and ignored. Otherwise, a compatible repository is randomly selected on the environment.
   * @return environmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "environment-123", value = "The ID of the target environment where to provision the VDB. If repository_id unambigously identifies a repository, this is unnecessary and ignored. Otherwise, a compatible repository is randomly selected on the environment.")

  public String getEnvironmentId() {
    return environmentId;
  }


  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  public BaseProvisionVDBParametersAllOf environmentUserId(String environmentUserId) {
    
    this.environmentUserId = environmentUserId;
    return this;
  }

   /**
   * The environment user ID to use to connect to the target environment.
   * @return environmentUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "environment-user-123", value = "The environment user ID to use to connect to the target environment.")

  public String getEnvironmentUserId() {
    return environmentUserId;
  }


  public void setEnvironmentUserId(String environmentUserId) {
    this.environmentUserId = environmentUserId;
  }


  public BaseProvisionVDBParametersAllOf repositoryId(String repositoryId) {
    
    this.repositoryId = repositoryId;
    return this;
  }

   /**
   * The ID of the target repository where to provision the VDB. A repository typically corresponds to a database installation (Oracle home, database instance, ...). Setting this attribute implicitly determines the environment where to provision the VDB.
   * @return repositoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "oracle-home-123", value = "The ID of the target repository where to provision the VDB. A repository typically corresponds to a database installation (Oracle home, database instance, ...). Setting this attribute implicitly determines the environment where to provision the VDB.")

  public String getRepositoryId() {
    return repositoryId;
  }


  public void setRepositoryId(String repositoryId) {
    this.repositoryId = repositoryId;
  }


  public BaseProvisionVDBParametersAllOf autoSelectRepository(Boolean autoSelectRepository) {
    
    this.autoSelectRepository = autoSelectRepository;
    return this;
  }

   /**
   * Option to automatically select a compatible environment and repository. Mutually exclusive with repository_id.
   * @return autoSelectRepository
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Option to automatically select a compatible environment and repository. Mutually exclusive with repository_id.")

  public Boolean getAutoSelectRepository() {
    return autoSelectRepository;
  }


  public void setAutoSelectRepository(Boolean autoSelectRepository) {
    this.autoSelectRepository = autoSelectRepository;
  }


  public BaseProvisionVDBParametersAllOf vdbRestart(Boolean vdbRestart) {
    
    this.vdbRestart = vdbRestart;
    return this;
  }

   /**
   * Indicates whether the Engine should automatically restart this virtual source when target host reboot is detected.
   * @return vdbRestart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates whether the Engine should automatically restart this virtual source when target host reboot is detected.")

  public Boolean getVdbRestart() {
    return vdbRestart;
  }


  public void setVdbRestart(Boolean vdbRestart) {
    this.vdbRestart = vdbRestart;
  }


  public BaseProvisionVDBParametersAllOf templateId(String templateId) {
    
    this.templateId = templateId;
    return this;
  }

   /**
   * The ID of the target VDB Template (Oracle Only).
   * @return templateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "template-123", value = "The ID of the target VDB Template (Oracle Only).")

  public String getTemplateId() {
    return templateId;
  }


  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }


  public BaseProvisionVDBParametersAllOf auxiliaryTemplateId(String auxiliaryTemplateId) {
    
    this.auxiliaryTemplateId = auxiliaryTemplateId;
    return this;
  }

   /**
   * The ID of the configuration template to apply to the auxiliary container database. This is only relevant when provisioning a Multitenant pluggable database into an existing CDB, i.e when the cdb_id property is set.(Oracle Only)
   * @return auxiliaryTemplateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "aux-template-123", value = "The ID of the configuration template to apply to the auxiliary container database. This is only relevant when provisioning a Multitenant pluggable database into an existing CDB, i.e when the cdb_id property is set.(Oracle Only)")

  public String getAuxiliaryTemplateId() {
    return auxiliaryTemplateId;
  }


  public void setAuxiliaryTemplateId(String auxiliaryTemplateId) {
    this.auxiliaryTemplateId = auxiliaryTemplateId;
  }


  public BaseProvisionVDBParametersAllOf fileMappingRules(String fileMappingRules) {
    
    this.fileMappingRules = fileMappingRules;
    return this;
  }

   /**
   * Target VDB file mapping rules (Oracle Only). Rules must be line separated (\\n or \\r) and each line must have the format \&quot;pattern:replacement\&quot;. Lines are applied in order.
   * @return fileMappingRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/datafile/dbdhcp3/oradata/dbdhcp3:/data /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf", value = "Target VDB file mapping rules (Oracle Only). Rules must be line separated (\\n or \\r) and each line must have the format \"pattern:replacement\". Lines are applied in order.")

  public String getFileMappingRules() {
    return fileMappingRules;
  }


  public void setFileMappingRules(String fileMappingRules) {
    this.fileMappingRules = fileMappingRules;
  }


  public BaseProvisionVDBParametersAllOf oracleInstanceName(String oracleInstanceName) {
    
    this.oracleInstanceName = oracleInstanceName;
    return this;
  }

   /**
   * Target VDB SID name (Oracle Only).
   * @return oracleInstanceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dbdhcp2", value = "Target VDB SID name (Oracle Only).")

  public String getOracleInstanceName() {
    return oracleInstanceName;
  }


  public void setOracleInstanceName(String oracleInstanceName) {
    this.oracleInstanceName = oracleInstanceName;
  }


  public BaseProvisionVDBParametersAllOf uniqueName(String uniqueName) {
    
    this.uniqueName = uniqueName;
    return this;
  }

   /**
   * Target VDB db_unique_name (Oracle Only).
   * @return uniqueName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dbdhcp2", value = "Target VDB db_unique_name (Oracle Only).")

  public String getUniqueName() {
    return uniqueName;
  }


  public void setUniqueName(String uniqueName) {
    this.uniqueName = uniqueName;
  }


  public BaseProvisionVDBParametersAllOf vcdbName(String vcdbName) {
    
    this.vcdbName = vcdbName;
    return this;
  }

   /**
   * When provisioning an Oracle Multitenant vCDB (when the cdb_id property is not set), the name of the provisioned vCDB (Oracle Multitenant Only).
   * @return vcdbName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "VCCD_6QQ", value = "When provisioning an Oracle Multitenant vCDB (when the cdb_id property is not set), the name of the provisioned vCDB (Oracle Multitenant Only).")

  public String getVcdbName() {
    return vcdbName;
  }


  public void setVcdbName(String vcdbName) {
    this.vcdbName = vcdbName;
  }


  public BaseProvisionVDBParametersAllOf vcdbDatabaseName(String vcdbDatabaseName) {
    
    this.vcdbDatabaseName = vcdbDatabaseName;
    return this;
  }

   /**
   * When provisioning an Oracle Multitenant vCDB (when the cdb_id property is not set), the database name of the provisioned vCDB. Defaults to the value of the vcdb_name property. (Oracle Multitenant Only).
   * @return vcdbDatabaseName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "VCCD_6QQ", value = "When provisioning an Oracle Multitenant vCDB (when the cdb_id property is not set), the database name of the provisioned vCDB. Defaults to the value of the vcdb_name property. (Oracle Multitenant Only).")

  public String getVcdbDatabaseName() {
    return vcdbDatabaseName;
  }


  public void setVcdbDatabaseName(String vcdbDatabaseName) {
    this.vcdbDatabaseName = vcdbDatabaseName;
  }


  public BaseProvisionVDBParametersAllOf mountPoint(String mountPoint) {
    
    this.mountPoint = mountPoint;
    return this;
  }

   /**
   * Mount point for the VDB (Oracle, ASE, AppData).
   * @return mountPoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/var/mnt", value = "Mount point for the VDB (Oracle, ASE, AppData).")

  public String getMountPoint() {
    return mountPoint;
  }


  public void setMountPoint(String mountPoint) {
    this.mountPoint = mountPoint;
  }


  public BaseProvisionVDBParametersAllOf openResetLogs(Boolean openResetLogs) {
    
    this.openResetLogs = openResetLogs;
    return this;
  }

   /**
   * Whether to open the database after provision (Oracle Only).
   * @return openResetLogs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether to open the database after provision (Oracle Only).")

  public Boolean getOpenResetLogs() {
    return openResetLogs;
  }


  public void setOpenResetLogs(Boolean openResetLogs) {
    this.openResetLogs = openResetLogs;
  }


  public BaseProvisionVDBParametersAllOf snapshotPolicyId(String snapshotPolicyId) {
    
    this.snapshotPolicyId = snapshotPolicyId;
    return this;
  }

   /**
   * The ID of the snapshot policy for the VDB.
   * @return snapshotPolicyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "snapshot-123", value = "The ID of the snapshot policy for the VDB.")

  public String getSnapshotPolicyId() {
    return snapshotPolicyId;
  }


  public void setSnapshotPolicyId(String snapshotPolicyId) {
    this.snapshotPolicyId = snapshotPolicyId;
  }


  public BaseProvisionVDBParametersAllOf retentionPolicyId(String retentionPolicyId) {
    
    this.retentionPolicyId = retentionPolicyId;
    return this;
  }

   /**
   * The ID of the retention policy for the VDB.
   * @return retentionPolicyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "retention-policy-123", value = "The ID of the retention policy for the VDB.")

  public String getRetentionPolicyId() {
    return retentionPolicyId;
  }


  public void setRetentionPolicyId(String retentionPolicyId) {
    this.retentionPolicyId = retentionPolicyId;
  }


  public BaseProvisionVDBParametersAllOf recoveryModel(RecoveryModelEnum recoveryModel) {
    
    this.recoveryModel = recoveryModel;
    return this;
  }

   /**
   * Recovery model of the source database (MSSql Only).
   * @return recoveryModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "FULL", value = "Recovery model of the source database (MSSql Only).")

  public RecoveryModelEnum getRecoveryModel() {
    return recoveryModel;
  }


  public void setRecoveryModel(RecoveryModelEnum recoveryModel) {
    this.recoveryModel = recoveryModel;
  }


  public BaseProvisionVDBParametersAllOf preScript(String preScript) {
    
    this.preScript = preScript;
    return this;
  }

   /**
   * PowerShell script or executable to run prior to provisioning (MSSql Only).
   * @return preScript
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "C:\\Program Files\\Delphix\\scripts\\myscript.ps1", value = "PowerShell script or executable to run prior to provisioning (MSSql Only).")

  public String getPreScript() {
    return preScript;
  }


  public void setPreScript(String preScript) {
    this.preScript = preScript;
  }


  public BaseProvisionVDBParametersAllOf postScript(String postScript) {
    
    this.postScript = postScript;
    return this;
  }

   /**
   * PowerShell script or executable to run after provisioning (MSSql Only).
   * @return postScript
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "C:\\Program Files\\Delphix\\scripts\\myscript.ps1", value = "PowerShell script or executable to run after provisioning (MSSql Only).")

  public String getPostScript() {
    return postScript;
  }


  public void setPostScript(String postScript) {
    this.postScript = postScript;
  }


  public BaseProvisionVDBParametersAllOf cdcOnProvision(Boolean cdcOnProvision) {
    
    this.cdcOnProvision = cdcOnProvision;
    return this;
  }

   /**
   * Option to enable change data capture (CDC) on both the provisioned VDB and subsequent snapshot-related operations (e.g. refresh, rewind) (MSSql Only).
   * @return cdcOnProvision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Option to enable change data capture (CDC) on both the provisioned VDB and subsequent snapshot-related operations (e.g. refresh, rewind) (MSSql Only).")

  public Boolean getCdcOnProvision() {
    return cdcOnProvision;
  }


  public void setCdcOnProvision(Boolean cdcOnProvision) {
    this.cdcOnProvision = cdcOnProvision;
  }


  public BaseProvisionVDBParametersAllOf onlineLogSize(Integer onlineLogSize) {
    
    this.onlineLogSize = onlineLogSize;
    return this;
  }

   /**
   * Online log size in MB (Oracle Only).
   * minimum: 4
   * @return onlineLogSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4", value = "Online log size in MB (Oracle Only).")

  public Integer getOnlineLogSize() {
    return onlineLogSize;
  }


  public void setOnlineLogSize(Integer onlineLogSize) {
    this.onlineLogSize = onlineLogSize;
  }


  public BaseProvisionVDBParametersAllOf onlineLogGroups(Integer onlineLogGroups) {
    
    this.onlineLogGroups = onlineLogGroups;
    return this;
  }

   /**
   * Number of online log groups (Oracle Only).
   * minimum: 2
   * @return onlineLogGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Number of online log groups (Oracle Only).")

  public Integer getOnlineLogGroups() {
    return onlineLogGroups;
  }


  public void setOnlineLogGroups(Integer onlineLogGroups) {
    this.onlineLogGroups = onlineLogGroups;
  }


  public BaseProvisionVDBParametersAllOf archiveLog(Boolean archiveLog) {
    
    this.archiveLog = archiveLog;
    return this;
  }

   /**
   * Option to create a VDB in archivelog mode (Oracle Only).
   * @return archiveLog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Option to create a VDB in archivelog mode (Oracle Only).")

  public Boolean getArchiveLog() {
    return archiveLog;
  }


  public void setArchiveLog(Boolean archiveLog) {
    this.archiveLog = archiveLog;
  }


  public BaseProvisionVDBParametersAllOf newDbid(Boolean newDbid) {
    
    this.newDbid = newDbid;
    return this;
  }

   /**
   * Option to generate a new DB ID for the created VDB (Oracle Only).
   * @return newDbid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Option to generate a new DB ID for the created VDB (Oracle Only).")

  public Boolean getNewDbid() {
    return newDbid;
  }


  public void setNewDbid(Boolean newDbid) {
    this.newDbid = newDbid;
  }


  public BaseProvisionVDBParametersAllOf listenerIds(List<String> listenerIds) {
    
    this.listenerIds = listenerIds;
    return this;
  }

  public BaseProvisionVDBParametersAllOf addListenerIdsItem(String listenerIdsItem) {
    if (this.listenerIds == null) {
      this.listenerIds = new ArrayList<String>();
    }
    this.listenerIds.add(listenerIdsItem);
    return this;
  }

   /**
   * The listener IDs for this provision operation (Oracle Only).
   * @return listenerIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"listener-123\",\"listener-456\"]", value = "The listener IDs for this provision operation (Oracle Only).")

  public List<String> getListenerIds() {
    return listenerIds;
  }


  public void setListenerIds(List<String> listenerIds) {
    this.listenerIds = listenerIds;
  }


  public BaseProvisionVDBParametersAllOf customEnvVars(Map<String, String> customEnvVars) {
    
    this.customEnvVars = customEnvVars;
    return this;
  }

  public BaseProvisionVDBParametersAllOf putCustomEnvVarsItem(String key, String customEnvVarsItem) {
    if (this.customEnvVars == null) {
      this.customEnvVars = new HashMap<String, String>();
    }
    this.customEnvVars.put(key, customEnvVarsItem);
    return this;
  }

   /**
   * Environment variable to be set when the engine creates a VDB. See the Engine documentation for the list of allowed/denied environment variables and rules about substitution.
   * @return customEnvVars
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"MY_ENV_VAR1\":\"$ORACLE_HOME\",\"MY_ENV_VAR2\":\"$CRS_HOME/after\"}", value = "Environment variable to be set when the engine creates a VDB. See the Engine documentation for the list of allowed/denied environment variables and rules about substitution.")

  public Map<String, String> getCustomEnvVars() {
    return customEnvVars;
  }


  public void setCustomEnvVars(Map<String, String> customEnvVars) {
    this.customEnvVars = customEnvVars;
  }


  public BaseProvisionVDBParametersAllOf customEnvFiles(List<String> customEnvFiles) {
    
    this.customEnvFiles = customEnvFiles;
    return this;
  }

  public BaseProvisionVDBParametersAllOf addCustomEnvFilesItem(String customEnvFilesItem) {
    if (this.customEnvFiles == null) {
      this.customEnvFiles = new ArrayList<String>();
    }
    this.customEnvFiles.add(customEnvFilesItem);
    return this;
  }

   /**
   * Environment files to be sourced when the Engine creates a VDB. This path can be followed by parameters. Paths and parameters are separated by spaces.
   * @return customEnvFiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"/export/home/env_file_1\",\"/export/home/env_file_2\"]", value = "Environment files to be sourced when the Engine creates a VDB. This path can be followed by parameters. Paths and parameters are separated by spaces.")

  public List<String> getCustomEnvFiles() {
    return customEnvFiles;
  }


  public void setCustomEnvFiles(List<String> customEnvFiles) {
    this.customEnvFiles = customEnvFiles;
  }


  public BaseProvisionVDBParametersAllOf oracleRacCustomEnvFiles(List<OracleRacCustomEnvFile> oracleRacCustomEnvFiles) {
    
    this.oracleRacCustomEnvFiles = oracleRacCustomEnvFiles;
    return this;
  }

  public BaseProvisionVDBParametersAllOf addOracleRacCustomEnvFilesItem(OracleRacCustomEnvFile oracleRacCustomEnvFilesItem) {
    if (this.oracleRacCustomEnvFiles == null) {
      this.oracleRacCustomEnvFiles = new ArrayList<OracleRacCustomEnvFile>();
    }
    this.oracleRacCustomEnvFiles.add(oracleRacCustomEnvFilesItem);
    return this;
  }

   /**
   * Environment files to be sourced when the Engine creates an Oracle RAC VDB. This path can be followed by parameters. Paths and parameters are separated by spaces.
   * @return oracleRacCustomEnvFiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"node_id\":\"ORACLE_CLUSTER_NODE-1\",\"path_parameters\":\"/export/home/env_file_1\"}]", value = "Environment files to be sourced when the Engine creates an Oracle RAC VDB. This path can be followed by parameters. Paths and parameters are separated by spaces.")

  public List<OracleRacCustomEnvFile> getOracleRacCustomEnvFiles() {
    return oracleRacCustomEnvFiles;
  }


  public void setOracleRacCustomEnvFiles(List<OracleRacCustomEnvFile> oracleRacCustomEnvFiles) {
    this.oracleRacCustomEnvFiles = oracleRacCustomEnvFiles;
  }


  public BaseProvisionVDBParametersAllOf oracleRacCustomEnvVars(List<OracleRacCustomEnvVar> oracleRacCustomEnvVars) {
    
    this.oracleRacCustomEnvVars = oracleRacCustomEnvVars;
    return this;
  }

  public BaseProvisionVDBParametersAllOf addOracleRacCustomEnvVarsItem(OracleRacCustomEnvVar oracleRacCustomEnvVarsItem) {
    if (this.oracleRacCustomEnvVars == null) {
      this.oracleRacCustomEnvVars = new ArrayList<OracleRacCustomEnvVar>();
    }
    this.oracleRacCustomEnvVars.add(oracleRacCustomEnvVarsItem);
    return this;
  }

   /**
   * Environment variable to be set when the engine creates an Oracle RAC VDB. See the Engine documentation for the list of allowed/denied environment variables and rules about substitution.
   * @return oracleRacCustomEnvVars
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"node_id\":\"ORACLE_CLUSTER_NODE-1\",\"name\":\"MY_ENV_VAR1\",\"value\":\"$CRS_HOME/after\"}]", value = "Environment variable to be set when the engine creates an Oracle RAC VDB. See the Engine documentation for the list of allowed/denied environment variables and rules about substitution.")

  public List<OracleRacCustomEnvVar> getOracleRacCustomEnvVars() {
    return oracleRacCustomEnvVars;
  }


  public void setOracleRacCustomEnvVars(List<OracleRacCustomEnvVar> oracleRacCustomEnvVars) {
    this.oracleRacCustomEnvVars = oracleRacCustomEnvVars;
  }


  public BaseProvisionVDBParametersAllOf parentTdeKeystorePath(String parentTdeKeystorePath) {
    
    this.parentTdeKeystorePath = parentTdeKeystorePath;
    return this;
  }

   /**
   * Path to a copy of the parent&#39;s Oracle transparent data encryption keystore on the target host. Required to provision from snapshots containing encrypted database files. (Oracle Multitenant Only)
   * @return parentTdeKeystorePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/foo/bar/tde", value = "Path to a copy of the parent's Oracle transparent data encryption keystore on the target host. Required to provision from snapshots containing encrypted database files. (Oracle Multitenant Only)")

  public String getParentTdeKeystorePath() {
    return parentTdeKeystorePath;
  }


  public void setParentTdeKeystorePath(String parentTdeKeystorePath) {
    this.parentTdeKeystorePath = parentTdeKeystorePath;
  }


  public BaseProvisionVDBParametersAllOf parentTdeKeystorePassword(String parentTdeKeystorePassword) {
    
    this.parentTdeKeystorePassword = parentTdeKeystorePassword;
    return this;
  }

   /**
   * The password of the keystore specified in parentTdeKeystorePath. (Oracle Multitenant Only)
   * @return parentTdeKeystorePassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "password", value = "The password of the keystore specified in parentTdeKeystorePath. (Oracle Multitenant Only)")

  public String getParentTdeKeystorePassword() {
    return parentTdeKeystorePassword;
  }


  public void setParentTdeKeystorePassword(String parentTdeKeystorePassword) {
    this.parentTdeKeystorePassword = parentTdeKeystorePassword;
  }


  public BaseProvisionVDBParametersAllOf tdeExportedKeyFileSecret(String tdeExportedKeyFileSecret) {
    
    this.tdeExportedKeyFileSecret = tdeExportedKeyFileSecret;
    return this;
  }

   /**
   * Secret to be used while exporting and importing vPDB encryption keys if Transparent Data Encryption is enabled on the vPDB. (Oracle Multitenant Only)
   * @return tdeExportedKeyFileSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "secret", value = "Secret to be used while exporting and importing vPDB encryption keys if Transparent Data Encryption is enabled on the vPDB. (Oracle Multitenant Only)")

  public String getTdeExportedKeyFileSecret() {
    return tdeExportedKeyFileSecret;
  }


  public void setTdeExportedKeyFileSecret(String tdeExportedKeyFileSecret) {
    this.tdeExportedKeyFileSecret = tdeExportedKeyFileSecret;
  }


  public BaseProvisionVDBParametersAllOf tdeKeyIdentifier(String tdeKeyIdentifier) {
    
    this.tdeKeyIdentifier = tdeKeyIdentifier;
    return this;
  }

   /**
   * ID of the key created by Delphix. (Oracle Multitenant Only)
   * @return tdeKeyIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "tde-indentifier", value = "ID of the key created by Delphix. (Oracle Multitenant Only)")

  public String getTdeKeyIdentifier() {
    return tdeKeyIdentifier;
  }


  public void setTdeKeyIdentifier(String tdeKeyIdentifier) {
    this.tdeKeyIdentifier = tdeKeyIdentifier;
  }


  public BaseProvisionVDBParametersAllOf targetVcdbTdeKeystorePath(String targetVcdbTdeKeystorePath) {
    
    this.targetVcdbTdeKeystorePath = targetVcdbTdeKeystorePath;
    return this;
  }

   /**
   * Path to the keystore of the target vCDB. (Oracle Multitenant Only)
   * @return targetVcdbTdeKeystorePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/foo/cdb/tde", value = "Path to the keystore of the target vCDB. (Oracle Multitenant Only)")

  public String getTargetVcdbTdeKeystorePath() {
    return targetVcdbTdeKeystorePath;
  }


  public void setTargetVcdbTdeKeystorePath(String targetVcdbTdeKeystorePath) {
    this.targetVcdbTdeKeystorePath = targetVcdbTdeKeystorePath;
  }


  public BaseProvisionVDBParametersAllOf cdbTdeKeystorePassword(String cdbTdeKeystorePassword) {
    
    this.cdbTdeKeystorePassword = cdbTdeKeystorePassword;
    return this;
  }

   /**
   * The password for the Transparent Data Encryption keystore associated with the CDB. (Oracle Multitenant Only)
   * @return cdbTdeKeystorePassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "cdb-password", value = "The password for the Transparent Data Encryption keystore associated with the CDB. (Oracle Multitenant Only)")

  public String getCdbTdeKeystorePassword() {
    return cdbTdeKeystorePassword;
  }


  public void setCdbTdeKeystorePassword(String cdbTdeKeystorePassword) {
    this.cdbTdeKeystorePassword = cdbTdeKeystorePassword;
  }


  public BaseProvisionVDBParametersAllOf vcdbTdeKeyIdentifier(String vcdbTdeKeyIdentifier) {
    
    this.vcdbTdeKeyIdentifier = vcdbTdeKeyIdentifier;
    return this;
  }

   /**
   * ID of the key created by Delphix. (Oracle Multitenant Only)
   * @return vcdbTdeKeyIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "vcdb-identifier", value = "ID of the key created by Delphix. (Oracle Multitenant Only)")

  public String getVcdbTdeKeyIdentifier() {
    return vcdbTdeKeyIdentifier;
  }


  public void setVcdbTdeKeyIdentifier(String vcdbTdeKeyIdentifier) {
    this.vcdbTdeKeyIdentifier = vcdbTdeKeyIdentifier;
  }


  public BaseProvisionVDBParametersAllOf appdataSourceParams(Map<String, Object> appdataSourceParams) {
    
    this.appdataSourceParams = appdataSourceParams;
    return this;
  }

  public BaseProvisionVDBParametersAllOf putAppdataSourceParamsItem(String key, Object appdataSourceParamsItem) {
    if (this.appdataSourceParams == null) {
      this.appdataSourceParams = new HashMap<String, Object>();
    }
    this.appdataSourceParams.put(key, appdataSourceParamsItem);
    return this;
  }

   /**
   * The JSON payload conforming to the DraftV4 schema based on the type of application data being manipulated.
   * @return appdataSourceParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"param\":\"value\"}", value = "The JSON payload conforming to the DraftV4 schema based on the type of application data being manipulated.")

  public Map<String, Object> getAppdataSourceParams() {
    return appdataSourceParams;
  }


  public void setAppdataSourceParams(Map<String, Object> appdataSourceParams) {
    this.appdataSourceParams = appdataSourceParams;
  }


  public BaseProvisionVDBParametersAllOf additionalMountPoints(List<AdditionalMountPoint> additionalMountPoints) {
    
    this.additionalMountPoints = additionalMountPoints;
    return this;
  }

  public BaseProvisionVDBParametersAllOf addAdditionalMountPointsItem(AdditionalMountPoint additionalMountPointsItem) {
    if (this.additionalMountPoints == null) {
      this.additionalMountPoints = new ArrayList<AdditionalMountPoint>();
    }
    this.additionalMountPoints.add(additionalMountPointsItem);
    return this;
  }

   /**
   * Specifies additional locations on which to mount a subdirectory of an AppData container.
   * @return additionalMountPoints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"shared_path\":\"/\",\"mount_path\":\"/work\",\"environment_id\":\"environment-123\"}]", value = "Specifies additional locations on which to mount a subdirectory of an AppData container.")

  public List<AdditionalMountPoint> getAdditionalMountPoints() {
    return additionalMountPoints;
  }


  public void setAdditionalMountPoints(List<AdditionalMountPoint> additionalMountPoints) {
    this.additionalMountPoints = additionalMountPoints;
  }


  public BaseProvisionVDBParametersAllOf appdataConfigParams(Map<String, Object> appdataConfigParams) {
    
    this.appdataConfigParams = appdataConfigParams;
    return this;
  }

  public BaseProvisionVDBParametersAllOf putAppdataConfigParamsItem(String key, Object appdataConfigParamsItem) {
    if (this.appdataConfigParams == null) {
      this.appdataConfigParams = new HashMap<String, Object>();
    }
    this.appdataConfigParams.put(key, appdataConfigParamsItem);
    return this;
  }

   /**
   * The list of parameters specified by the source config schema in the toolkit
   * @return appdataConfigParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"option\":\"value\"}", value = "The list of parameters specified by the source config schema in the toolkit")

  public Map<String, Object> getAppdataConfigParams() {
    return appdataConfigParams;
  }


  public void setAppdataConfigParams(Map<String, Object> appdataConfigParams) {
    this.appdataConfigParams = appdataConfigParams;
  }


  public BaseProvisionVDBParametersAllOf configParams(Map<String, Object> configParams) {
    
    this.configParams = configParams;
    return this;
  }

  public BaseProvisionVDBParametersAllOf putConfigParamsItem(String key, Object configParamsItem) {
    if (this.configParams == null) {
      this.configParams = new HashMap<String, Object>();
    }
    this.configParams.put(key, configParamsItem);
    return this;
  }

   /**
   * Database configuration parameter overrides.
   * @return configParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"processes\":150}", value = "Database configuration parameter overrides.")

  public Map<String, Object> getConfigParams() {
    return configParams;
  }


  public void setConfigParams(Map<String, Object> configParams) {
    this.configParams = configParams;
  }


  public BaseProvisionVDBParametersAllOf privilegedOsUser(String privilegedOsUser) {
    
    this.privilegedOsUser = privilegedOsUser;
    return this;
  }

   /**
   * This privileged unix username will be used to create the VDB. Leave this field blank if you do not want to use privilege elevation. The unix privileged username should begin with a letter or an underscore, followed by letters, digits, underscores, or dashes. They can end with a dollar sign (postgres only).
   * @return privilegedOsUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This privileged unix username will be used to create the VDB. Leave this field blank if you do not want to use privilege elevation. The unix privileged username should begin with a letter or an underscore, followed by letters, digits, underscores, or dashes. They can end with a dollar sign (postgres only).")

  public String getPrivilegedOsUser() {
    return privilegedOsUser;
  }


  public void setPrivilegedOsUser(String privilegedOsUser) {
    this.privilegedOsUser = privilegedOsUser;
  }


  public BaseProvisionVDBParametersAllOf postgresPort(Integer postgresPort) {
    
    this.postgresPort = postgresPort;
    return this;
  }

   /**
   * Port number for Postgres target database (postgres only).
   * minimum: 1
   * maximum: 65536
   * @return postgresPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Port number for Postgres target database (postgres only).")

  public Integer getPostgresPort() {
    return postgresPort;
  }


  public void setPostgresPort(Integer postgresPort) {
    this.postgresPort = postgresPort;
  }


  public BaseProvisionVDBParametersAllOf configSettingsStg(List<ConfigSettingsStg> configSettingsStg) {
    
    this.configSettingsStg = configSettingsStg;
    return this;
  }

  public BaseProvisionVDBParametersAllOf addConfigSettingsStgItem(ConfigSettingsStg configSettingsStgItem) {
    if (this.configSettingsStg == null) {
      this.configSettingsStg = new ArrayList<ConfigSettingsStg>();
    }
    this.configSettingsStg.add(configSettingsStgItem);
    return this;
  }

   /**
   * Custom Database-Level config settings (postgres only).
   * @return configSettingsStg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom Database-Level config settings (postgres only).")

  public List<ConfigSettingsStg> getConfigSettingsStg() {
    return configSettingsStg;
  }


  public void setConfigSettingsStg(List<ConfigSettingsStg> configSettingsStg) {
    this.configSettingsStg = configSettingsStg;
  }


  public BaseProvisionVDBParametersAllOf tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public BaseProvisionVDBParametersAllOf addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The tags to be created for VDB.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tags to be created for VDB.")

  public List<Tag> getTags() {
    return tags;
  }


  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseProvisionVDBParametersAllOf baseProvisionVDBParametersAllOf = (BaseProvisionVDBParametersAllOf) o;
    return Objects.equals(this.targetGroupId, baseProvisionVDBParametersAllOf.targetGroupId) &&
        Objects.equals(this.name, baseProvisionVDBParametersAllOf.name) &&
        Objects.equals(this.databaseName, baseProvisionVDBParametersAllOf.databaseName) &&
        Objects.equals(this.cdbId, baseProvisionVDBParametersAllOf.cdbId) &&
        Objects.equals(this.clusterNodeIds, baseProvisionVDBParametersAllOf.clusterNodeIds) &&
        Objects.equals(this.truncateLogOnCheckpoint, baseProvisionVDBParametersAllOf.truncateLogOnCheckpoint) &&
        Objects.equals(this.osUsername, baseProvisionVDBParametersAllOf.osUsername) &&
        Objects.equals(this.osPassword, baseProvisionVDBParametersAllOf.osPassword) &&
        Objects.equals(this.environmentId, baseProvisionVDBParametersAllOf.environmentId) &&
        Objects.equals(this.environmentUserId, baseProvisionVDBParametersAllOf.environmentUserId) &&
        Objects.equals(this.repositoryId, baseProvisionVDBParametersAllOf.repositoryId) &&
        Objects.equals(this.autoSelectRepository, baseProvisionVDBParametersAllOf.autoSelectRepository) &&
        Objects.equals(this.vdbRestart, baseProvisionVDBParametersAllOf.vdbRestart) &&
        Objects.equals(this.templateId, baseProvisionVDBParametersAllOf.templateId) &&
        Objects.equals(this.auxiliaryTemplateId, baseProvisionVDBParametersAllOf.auxiliaryTemplateId) &&
        Objects.equals(this.fileMappingRules, baseProvisionVDBParametersAllOf.fileMappingRules) &&
        Objects.equals(this.oracleInstanceName, baseProvisionVDBParametersAllOf.oracleInstanceName) &&
        Objects.equals(this.uniqueName, baseProvisionVDBParametersAllOf.uniqueName) &&
        Objects.equals(this.vcdbName, baseProvisionVDBParametersAllOf.vcdbName) &&
        Objects.equals(this.vcdbDatabaseName, baseProvisionVDBParametersAllOf.vcdbDatabaseName) &&
        Objects.equals(this.mountPoint, baseProvisionVDBParametersAllOf.mountPoint) &&
        Objects.equals(this.openResetLogs, baseProvisionVDBParametersAllOf.openResetLogs) &&
        Objects.equals(this.snapshotPolicyId, baseProvisionVDBParametersAllOf.snapshotPolicyId) &&
        Objects.equals(this.retentionPolicyId, baseProvisionVDBParametersAllOf.retentionPolicyId) &&
        Objects.equals(this.recoveryModel, baseProvisionVDBParametersAllOf.recoveryModel) &&
        Objects.equals(this.preScript, baseProvisionVDBParametersAllOf.preScript) &&
        Objects.equals(this.postScript, baseProvisionVDBParametersAllOf.postScript) &&
        Objects.equals(this.cdcOnProvision, baseProvisionVDBParametersAllOf.cdcOnProvision) &&
        Objects.equals(this.onlineLogSize, baseProvisionVDBParametersAllOf.onlineLogSize) &&
        Objects.equals(this.onlineLogGroups, baseProvisionVDBParametersAllOf.onlineLogGroups) &&
        Objects.equals(this.archiveLog, baseProvisionVDBParametersAllOf.archiveLog) &&
        Objects.equals(this.newDbid, baseProvisionVDBParametersAllOf.newDbid) &&
        Objects.equals(this.listenerIds, baseProvisionVDBParametersAllOf.listenerIds) &&
        Objects.equals(this.customEnvVars, baseProvisionVDBParametersAllOf.customEnvVars) &&
        Objects.equals(this.customEnvFiles, baseProvisionVDBParametersAllOf.customEnvFiles) &&
        Objects.equals(this.oracleRacCustomEnvFiles, baseProvisionVDBParametersAllOf.oracleRacCustomEnvFiles) &&
        Objects.equals(this.oracleRacCustomEnvVars, baseProvisionVDBParametersAllOf.oracleRacCustomEnvVars) &&
        Objects.equals(this.parentTdeKeystorePath, baseProvisionVDBParametersAllOf.parentTdeKeystorePath) &&
        Objects.equals(this.parentTdeKeystorePassword, baseProvisionVDBParametersAllOf.parentTdeKeystorePassword) &&
        Objects.equals(this.tdeExportedKeyFileSecret, baseProvisionVDBParametersAllOf.tdeExportedKeyFileSecret) &&
        Objects.equals(this.tdeKeyIdentifier, baseProvisionVDBParametersAllOf.tdeKeyIdentifier) &&
        Objects.equals(this.targetVcdbTdeKeystorePath, baseProvisionVDBParametersAllOf.targetVcdbTdeKeystorePath) &&
        Objects.equals(this.cdbTdeKeystorePassword, baseProvisionVDBParametersAllOf.cdbTdeKeystorePassword) &&
        Objects.equals(this.vcdbTdeKeyIdentifier, baseProvisionVDBParametersAllOf.vcdbTdeKeyIdentifier) &&
        Objects.equals(this.appdataSourceParams, baseProvisionVDBParametersAllOf.appdataSourceParams) &&
        Objects.equals(this.additionalMountPoints, baseProvisionVDBParametersAllOf.additionalMountPoints) &&
        Objects.equals(this.appdataConfigParams, baseProvisionVDBParametersAllOf.appdataConfigParams) &&
        Objects.equals(this.configParams, baseProvisionVDBParametersAllOf.configParams) &&
        Objects.equals(this.privilegedOsUser, baseProvisionVDBParametersAllOf.privilegedOsUser) &&
        Objects.equals(this.postgresPort, baseProvisionVDBParametersAllOf.postgresPort) &&
        Objects.equals(this.configSettingsStg, baseProvisionVDBParametersAllOf.configSettingsStg) &&
        Objects.equals(this.tags, baseProvisionVDBParametersAllOf.tags);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(targetGroupId, name, databaseName, cdbId, clusterNodeIds, truncateLogOnCheckpoint, osUsername, osPassword, environmentId, environmentUserId, repositoryId, autoSelectRepository, vdbRestart, templateId, auxiliaryTemplateId, fileMappingRules, oracleInstanceName, uniqueName, vcdbName, vcdbDatabaseName, mountPoint, openResetLogs, snapshotPolicyId, retentionPolicyId, recoveryModel, preScript, postScript, cdcOnProvision, onlineLogSize, onlineLogGroups, archiveLog, newDbid, listenerIds, customEnvVars, customEnvFiles, oracleRacCustomEnvFiles, oracleRacCustomEnvVars, parentTdeKeystorePath, parentTdeKeystorePassword, tdeExportedKeyFileSecret, tdeKeyIdentifier, targetVcdbTdeKeystorePath, cdbTdeKeystorePassword, vcdbTdeKeyIdentifier, appdataSourceParams, additionalMountPoints, appdataConfigParams, configParams, privilegedOsUser, postgresPort, configSettingsStg, tags);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseProvisionVDBParametersAllOf {\n");
    sb.append("    targetGroupId: ").append(toIndentedString(targetGroupId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    databaseName: ").append(toIndentedString(databaseName)).append("\n");
    sb.append("    cdbId: ").append(toIndentedString(cdbId)).append("\n");
    sb.append("    clusterNodeIds: ").append(toIndentedString(clusterNodeIds)).append("\n");
    sb.append("    truncateLogOnCheckpoint: ").append(toIndentedString(truncateLogOnCheckpoint)).append("\n");
    sb.append("    osUsername: ").append(toIndentedString(osUsername)).append("\n");
    sb.append("    osPassword: ").append(toIndentedString(osPassword)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    environmentUserId: ").append(toIndentedString(environmentUserId)).append("\n");
    sb.append("    repositoryId: ").append(toIndentedString(repositoryId)).append("\n");
    sb.append("    autoSelectRepository: ").append(toIndentedString(autoSelectRepository)).append("\n");
    sb.append("    vdbRestart: ").append(toIndentedString(vdbRestart)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    auxiliaryTemplateId: ").append(toIndentedString(auxiliaryTemplateId)).append("\n");
    sb.append("    fileMappingRules: ").append(toIndentedString(fileMappingRules)).append("\n");
    sb.append("    oracleInstanceName: ").append(toIndentedString(oracleInstanceName)).append("\n");
    sb.append("    uniqueName: ").append(toIndentedString(uniqueName)).append("\n");
    sb.append("    vcdbName: ").append(toIndentedString(vcdbName)).append("\n");
    sb.append("    vcdbDatabaseName: ").append(toIndentedString(vcdbDatabaseName)).append("\n");
    sb.append("    mountPoint: ").append(toIndentedString(mountPoint)).append("\n");
    sb.append("    openResetLogs: ").append(toIndentedString(openResetLogs)).append("\n");
    sb.append("    snapshotPolicyId: ").append(toIndentedString(snapshotPolicyId)).append("\n");
    sb.append("    retentionPolicyId: ").append(toIndentedString(retentionPolicyId)).append("\n");
    sb.append("    recoveryModel: ").append(toIndentedString(recoveryModel)).append("\n");
    sb.append("    preScript: ").append(toIndentedString(preScript)).append("\n");
    sb.append("    postScript: ").append(toIndentedString(postScript)).append("\n");
    sb.append("    cdcOnProvision: ").append(toIndentedString(cdcOnProvision)).append("\n");
    sb.append("    onlineLogSize: ").append(toIndentedString(onlineLogSize)).append("\n");
    sb.append("    onlineLogGroups: ").append(toIndentedString(onlineLogGroups)).append("\n");
    sb.append("    archiveLog: ").append(toIndentedString(archiveLog)).append("\n");
    sb.append("    newDbid: ").append(toIndentedString(newDbid)).append("\n");
    sb.append("    listenerIds: ").append(toIndentedString(listenerIds)).append("\n");
    sb.append("    customEnvVars: ").append(toIndentedString(customEnvVars)).append("\n");
    sb.append("    customEnvFiles: ").append(toIndentedString(customEnvFiles)).append("\n");
    sb.append("    oracleRacCustomEnvFiles: ").append(toIndentedString(oracleRacCustomEnvFiles)).append("\n");
    sb.append("    oracleRacCustomEnvVars: ").append(toIndentedString(oracleRacCustomEnvVars)).append("\n");
    sb.append("    parentTdeKeystorePath: ").append(toIndentedString(parentTdeKeystorePath)).append("\n");
    sb.append("    parentTdeKeystorePassword: ").append(toIndentedString(parentTdeKeystorePassword)).append("\n");
    sb.append("    tdeExportedKeyFileSecret: ").append(toIndentedString(tdeExportedKeyFileSecret)).append("\n");
    sb.append("    tdeKeyIdentifier: ").append(toIndentedString(tdeKeyIdentifier)).append("\n");
    sb.append("    targetVcdbTdeKeystorePath: ").append(toIndentedString(targetVcdbTdeKeystorePath)).append("\n");
    sb.append("    cdbTdeKeystorePassword: ").append(toIndentedString(cdbTdeKeystorePassword)).append("\n");
    sb.append("    vcdbTdeKeyIdentifier: ").append(toIndentedString(vcdbTdeKeyIdentifier)).append("\n");
    sb.append("    appdataSourceParams: ").append(toIndentedString(appdataSourceParams)).append("\n");
    sb.append("    additionalMountPoints: ").append(toIndentedString(additionalMountPoints)).append("\n");
    sb.append("    appdataConfigParams: ").append(toIndentedString(appdataConfigParams)).append("\n");
    sb.append("    configParams: ").append(toIndentedString(configParams)).append("\n");
    sb.append("    privilegedOsUser: ").append(toIndentedString(privilegedOsUser)).append("\n");
    sb.append("    postgresPort: ").append(toIndentedString(postgresPort)).append("\n");
    sb.append("    configSettingsStg: ").append(toIndentedString(configSettingsStg)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

