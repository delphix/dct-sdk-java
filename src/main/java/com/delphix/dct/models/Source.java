/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * The Delphix representation of the source database (not typically managed by Delphix).
 */
@ApiModel(description = "The Delphix representation of the source database (not typically managed by Delphix).")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T18:53:50.335381+05:30[Asia/Kolkata]")
public class Source {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DATABASE_TYPE = "database_type";
  @SerializedName(SERIALIZED_NAME_DATABASE_TYPE)
  private String databaseType;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DATABASE_VERSION = "database_version";
  @SerializedName(SERIALIZED_NAME_DATABASE_VERSION)
  private String databaseVersion;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "environment_id";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private String environmentId;

  public static final String SERIALIZED_NAME_DATA_UUID = "data_uuid";
  @SerializedName(SERIALIZED_NAME_DATA_UUID)
  private String dataUuid;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ip_address";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_FQDN = "fqdn";
  @SerializedName(SERIALIZED_NAME_FQDN)
  private String fqdn;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Long size;

  public static final String SERIALIZED_NAME_JDBC_CONNECTION_STRING = "jdbc_connection_string";
  @SerializedName(SERIALIZED_NAME_JDBC_CONNECTION_STRING)
  private String jdbcConnectionString;

  public static final String SERIALIZED_NAME_PLUGIN_VERSION = "plugin_version";
  @SerializedName(SERIALIZED_NAME_PLUGIN_VERSION)
  private String pluginVersion;

  public static final String SERIALIZED_NAME_IS_DSOURCE = "is_dsource";
  @SerializedName(SERIALIZED_NAME_IS_DSOURCE)
  private Boolean isDsource;

  public static final String SERIALIZED_NAME_REPOSITORY = "repository";
  @SerializedName(SERIALIZED_NAME_REPOSITORY)
  private String repository;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = null;


  public Source id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The Source object entity ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Source object entity ID.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Source databaseType(String databaseType) {
    
    this.databaseType = databaseType;
    return this;
  }

   /**
   * The type of this source database.
   * @return databaseType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of this source database.")

  public String getDatabaseType() {
    return databaseType;
  }


  public void setDatabaseType(String databaseType) {
    this.databaseType = databaseType;
  }


  public Source name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of this source database.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of this source database.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Source databaseVersion(String databaseVersion) {
    
    this.databaseVersion = databaseVersion;
    return this;
  }

   /**
   * The version of this source database.
   * @return databaseVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of this source database.")

  public String getDatabaseVersion() {
    return databaseVersion;
  }


  public void setDatabaseVersion(String databaseVersion) {
    this.databaseVersion = databaseVersion;
  }


  public Source environmentId(String environmentId) {
    
    this.environmentId = environmentId;
    return this;
  }

   /**
   * A reference to the Environment that hosts this source database.
   * @return environmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A reference to the Environment that hosts this source database.")

  public String getEnvironmentId() {
    return environmentId;
  }


  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  public Source dataUuid(String dataUuid) {
    
    this.dataUuid = dataUuid;
    return this;
  }

   /**
   * A universal ID that uniquely identifies this source database.
   * @return dataUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A universal ID that uniquely identifies this source database.")

  public String getDataUuid() {
    return dataUuid;
  }


  public void setDataUuid(String dataUuid) {
    this.dataUuid = dataUuid;
  }


  public Source ipAddress(String ipAddress) {
    
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * The IP address of the source&#39;s host.
   * @return ipAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IP address of the source's host.")

  public String getIpAddress() {
    return ipAddress;
  }


  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public Source fqdn(String fqdn) {
    
    this.fqdn = fqdn;
    return this;
  }

   /**
   * The FQDN of the source&#39;s host.
   * @return fqdn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The FQDN of the source's host.")

  public String getFqdn() {
    return fqdn;
  }


  public void setFqdn(String fqdn) {
    this.fqdn = fqdn;
  }


  public Source size(Long size) {
    
    this.size = size;
    return this;
  }

   /**
   * The total size of this source database, in bytes.
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total size of this source database, in bytes.")

  public Long getSize() {
    return size;
  }


  public void setSize(Long size) {
    this.size = size;
  }


  public Source jdbcConnectionString(String jdbcConnectionString) {
    
    this.jdbcConnectionString = jdbcConnectionString;
    return this;
  }

   /**
   * The JDBC connection URL for this source database.
   * @return jdbcConnectionString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The JDBC connection URL for this source database.")

  public String getJdbcConnectionString() {
    return jdbcConnectionString;
  }


  public void setJdbcConnectionString(String jdbcConnectionString) {
    this.jdbcConnectionString = jdbcConnectionString;
  }


  public Source pluginVersion(String pluginVersion) {
    
    this.pluginVersion = pluginVersion;
    return this;
  }

   /**
   * The version of the plugin associated with this source database.
   * @return pluginVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of the plugin associated with this source database.")

  public String getPluginVersion() {
    return pluginVersion;
  }


  public void setPluginVersion(String pluginVersion) {
    this.pluginVersion = pluginVersion;
  }


  public Source isDsource(Boolean isDsource) {
    
    this.isDsource = isDsource;
    return this;
  }

   /**
   * Get isDsource
   * @return isDsource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDsource() {
    return isDsource;
  }


  public void setIsDsource(Boolean isDsource) {
    this.isDsource = isDsource;
  }


  public Source repository(String repository) {
    
    this.repository = repository;
    return this;
  }

   /**
   * The repository reference for this source
   * @return repository
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The repository reference for this source")

  public String getRepository() {
    return repository;
  }


  public void setRepository(String repository) {
    this.repository = repository;
  }


  public Source tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public Source addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Tag> getTags() {
    return tags;
  }


  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Source source = (Source) o;
    return Objects.equals(this.id, source.id) &&
        Objects.equals(this.databaseType, source.databaseType) &&
        Objects.equals(this.name, source.name) &&
        Objects.equals(this.databaseVersion, source.databaseVersion) &&
        Objects.equals(this.environmentId, source.environmentId) &&
        Objects.equals(this.dataUuid, source.dataUuid) &&
        Objects.equals(this.ipAddress, source.ipAddress) &&
        Objects.equals(this.fqdn, source.fqdn) &&
        Objects.equals(this.size, source.size) &&
        Objects.equals(this.jdbcConnectionString, source.jdbcConnectionString) &&
        Objects.equals(this.pluginVersion, source.pluginVersion) &&
        Objects.equals(this.isDsource, source.isDsource) &&
        Objects.equals(this.repository, source.repository) &&
        Objects.equals(this.tags, source.tags);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, databaseType, name, databaseVersion, environmentId, dataUuid, ipAddress, fqdn, size, jdbcConnectionString, pluginVersion, isDsource, repository, tags);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Source {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    databaseType: ").append(toIndentedString(databaseType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    databaseVersion: ").append(toIndentedString(databaseVersion)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    dataUuid: ").append(toIndentedString(dataUuid)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    fqdn: ").append(toIndentedString(fqdn)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    jdbcConnectionString: ").append(toIndentedString(jdbcConnectionString)).append("\n");
    sb.append("    pluginVersion: ").append(toIndentedString(pluginVersion)).append("\n");
    sb.append("    isDsource: ").append(toIndentedString(isDsource)).append("\n");
    sb.append("    repository: ").append(toIndentedString(repository)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

