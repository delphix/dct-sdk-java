/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * OracleListener
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T17:08:49.349376+05:30[Asia/Kolkata]")
public class OracleListener {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Type of this listener.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    NODE("NODE"),
    
    SCAN("SCAN");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_PROTOCOL_ADDRESSES = "protocol_addresses";
  @SerializedName(SERIALIZED_NAME_PROTOCOL_ADDRESSES)
  private List<String> protocolAddresses = null;

  public static final String SERIALIZED_NAME_CLIENT_ENDPOINTS = "client_endpoints";
  @SerializedName(SERIALIZED_NAME_CLIENT_ENDPOINTS)
  private List<String> clientEndpoints = null;

  public static final String SERIALIZED_NAME_IS_DISCOVERED = "is_discovered";
  @SerializedName(SERIALIZED_NAME_IS_DISCOVERED)
  private Boolean isDiscovered;

  public static final String SERIALIZED_NAME_HOST_ID = "host_id";
  @SerializedName(SERIALIZED_NAME_HOST_ID)
  private String hostId;


  public OracleListener id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Id of this listener.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1-ORACLE_NODE_LISTENER-11", value = "Id of this listener.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public OracleListener name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of this listener.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "my-listener", value = "Name of this listener.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public OracleListener type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of this listener.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NODE", value = "Type of this listener.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public OracleListener protocolAddresses(List<String> protocolAddresses) {
    
    this.protocolAddresses = protocolAddresses;
    return this;
  }

  public OracleListener addProtocolAddressesItem(String protocolAddressesItem) {
    if (this.protocolAddresses == null) {
      this.protocolAddresses = new ArrayList<String>();
    }
    this.protocolAddresses.add(protocolAddressesItem);
    return this;
  }

   /**
   * The list of protocol addresses for this listener.
   * @return protocolAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"(ADDRESS=(PROTOCOL=tcp)(HOST=10.75.59.184)(PORT=4567))\",\"(ADDRESS=(PROTOCOL=ipc)(KEY=LISTENER))\"]", value = "The list of protocol addresses for this listener.")

  public List<String> getProtocolAddresses() {
    return protocolAddresses;
  }


  public void setProtocolAddresses(List<String> protocolAddresses) {
    this.protocolAddresses = protocolAddresses;
  }


  public OracleListener clientEndpoints(List<String> clientEndpoints) {
    
    this.clientEndpoints = clientEndpoints;
    return this;
  }

  public OracleListener addClientEndpointsItem(String clientEndpointsItem) {
    if (this.clientEndpoints == null) {
      this.clientEndpoints = new ArrayList<String>();
    }
    this.clientEndpoints.add(clientEndpointsItem);
    return this;
  }

   /**
   * The list of client endpoints for this listener.
   * @return clientEndpoints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"(ADDRESS=(PROTOCOL=tcp)(HOST=10.75.59.184)(PORT=4567))\"]", value = "The list of client endpoints for this listener.")

  public List<String> getClientEndpoints() {
    return clientEndpoints;
  }


  public void setClientEndpoints(List<String> clientEndpoints) {
    this.clientEndpoints = clientEndpoints;
  }


  public OracleListener isDiscovered(Boolean isDiscovered) {
    
    this.isDiscovered = isDiscovered;
    return this;
  }

   /**
   * Whether this listener was automatically discovered or not.
   * @return isDiscovered
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether this listener was automatically discovered or not.")

  public Boolean getIsDiscovered() {
    return isDiscovered;
  }


  public void setIsDiscovered(Boolean isDiscovered) {
    this.isDiscovered = isDiscovered;
  }


  public OracleListener hostId(String hostId) {
    
    this.hostId = hostId;
    return this;
  }

   /**
   * Id to the host this listener is associated with.
   * @return hostId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1-UNIX_HOST-14", value = "Id to the host this listener is associated with.")

  public String getHostId() {
    return hostId;
  }


  public void setHostId(String hostId) {
    this.hostId = hostId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OracleListener oracleListener = (OracleListener) o;
    return Objects.equals(this.id, oracleListener.id) &&
        Objects.equals(this.name, oracleListener.name) &&
        Objects.equals(this.type, oracleListener.type) &&
        Objects.equals(this.protocolAddresses, oracleListener.protocolAddresses) &&
        Objects.equals(this.clientEndpoints, oracleListener.clientEndpoints) &&
        Objects.equals(this.isDiscovered, oracleListener.isDiscovered) &&
        Objects.equals(this.hostId, oracleListener.hostId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, type, protocolAddresses, clientEndpoints, isDiscovered, hostId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OracleListener {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    protocolAddresses: ").append(toIndentedString(protocolAddresses)).append("\n");
    sb.append("    clientEndpoints: ").append(toIndentedString(clientEndpoints)).append("\n");
    sb.append("    isDiscovered: ").append(toIndentedString(isDiscovered)).append("\n");
    sb.append("    hostId: ").append(toIndentedString(hostId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

