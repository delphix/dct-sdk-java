/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.AdditionalMountPoint;
import com.delphix.dct.models.OracleRacCustomEnvFile;
import com.delphix.dct.models.OracleRacCustomEnvVar;
import com.delphix.dct.models.VirtualDatasetHooks;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Parameters to update a VDB.
 */
@ApiModel(description = "Parameters to update a VDB.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T18:53:50.335381+05:30[Asia/Kolkata]")
public class UpdateVDBParameters {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DB_USERNAME = "db_username";
  @SerializedName(SERIALIZED_NAME_DB_USERNAME)
  private String dbUsername;

  public static final String SERIALIZED_NAME_DB_PASSWORD = "db_password";
  @SerializedName(SERIALIZED_NAME_DB_PASSWORD)
  private String dbPassword;

  public static final String SERIALIZED_NAME_VALIDATE_DB_CREDENTIALS = "validate_db_credentials";
  @SerializedName(SERIALIZED_NAME_VALIDATE_DB_CREDENTIALS)
  private Boolean validateDbCredentials = true;

  public static final String SERIALIZED_NAME_AUTO_RESTART = "auto_restart";
  @SerializedName(SERIALIZED_NAME_AUTO_RESTART)
  private Boolean autoRestart;

  public static final String SERIALIZED_NAME_ENVIRONMENT_USER_ID = "environment_user_id";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_USER_ID)
  private String environmentUserId;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "template_id";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private String templateId;

  public static final String SERIALIZED_NAME_LISTENER_IDS = "listener_ids";
  @SerializedName(SERIALIZED_NAME_LISTENER_IDS)
  private List<String> listenerIds = null;

  public static final String SERIALIZED_NAME_NEW_DBID = "new_dbid";
  @SerializedName(SERIALIZED_NAME_NEW_DBID)
  private Boolean newDbid;

  public static final String SERIALIZED_NAME_CDC_ON_PROVISION = "cdc_on_provision";
  @SerializedName(SERIALIZED_NAME_CDC_ON_PROVISION)
  private Boolean cdcOnProvision;

  public static final String SERIALIZED_NAME_PRE_SCRIPT = "pre_script";
  @SerializedName(SERIALIZED_NAME_PRE_SCRIPT)
  private String preScript;

  public static final String SERIALIZED_NAME_POST_SCRIPT = "post_script";
  @SerializedName(SERIALIZED_NAME_POST_SCRIPT)
  private String postScript;

  public static final String SERIALIZED_NAME_HOOKS = "hooks";
  @SerializedName(SERIALIZED_NAME_HOOKS)
  private VirtualDatasetHooks hooks;

  public static final String SERIALIZED_NAME_CUSTOM_ENV_VARS = "custom_env_vars";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ENV_VARS)
  private Map<String, String> customEnvVars = null;

  public static final String SERIALIZED_NAME_CUSTOM_ENV_FILES = "custom_env_files";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ENV_FILES)
  private List<String> customEnvFiles = null;

  public static final String SERIALIZED_NAME_ORACLE_RAC_CUSTOM_ENV_FILES = "oracle_rac_custom_env_files";
  @SerializedName(SERIALIZED_NAME_ORACLE_RAC_CUSTOM_ENV_FILES)
  private List<OracleRacCustomEnvFile> oracleRacCustomEnvFiles = null;

  public static final String SERIALIZED_NAME_ORACLE_RAC_CUSTOM_ENV_VARS = "oracle_rac_custom_env_vars";
  @SerializedName(SERIALIZED_NAME_ORACLE_RAC_CUSTOM_ENV_VARS)
  private List<OracleRacCustomEnvVar> oracleRacCustomEnvVars = null;

  public static final String SERIALIZED_NAME_PARENT_TDE_KEYSTORE_PATH = "parent_tde_keystore_path";
  @SerializedName(SERIALIZED_NAME_PARENT_TDE_KEYSTORE_PATH)
  private String parentTdeKeystorePath;

  public static final String SERIALIZED_NAME_PARENT_TDE_KEYSTORE_PASSWORD = "parent_tde_keystore_password";
  @SerializedName(SERIALIZED_NAME_PARENT_TDE_KEYSTORE_PASSWORD)
  private String parentTdeKeystorePassword;

  public static final String SERIALIZED_NAME_TDE_KEY_IDENTIFIER = "tde_key_identifier";
  @SerializedName(SERIALIZED_NAME_TDE_KEY_IDENTIFIER)
  private String tdeKeyIdentifier;

  public static final String SERIALIZED_NAME_TARGET_VCDB_TDE_KEYSTORE_PATH = "target_vcdb_tde_keystore_path";
  @SerializedName(SERIALIZED_NAME_TARGET_VCDB_TDE_KEYSTORE_PATH)
  private String targetVcdbTdeKeystorePath;

  public static final String SERIALIZED_NAME_CDB_TDE_KEYSTORE_PASSWORD = "cdb_tde_keystore_password";
  @SerializedName(SERIALIZED_NAME_CDB_TDE_KEYSTORE_PASSWORD)
  private String cdbTdeKeystorePassword;

  public static final String SERIALIZED_NAME_APPDATA_SOURCE_PARAMS = "appdata_source_params";
  @SerializedName(SERIALIZED_NAME_APPDATA_SOURCE_PARAMS)
  private Map<String, Object> appdataSourceParams = null;

  public static final String SERIALIZED_NAME_ADDITIONAL_MOUNT_POINTS = "additional_mount_points";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_MOUNT_POINTS)
  private List<AdditionalMountPoint> additionalMountPoints = null;

  public static final String SERIALIZED_NAME_APPDATA_CONFIG_PARAMS = "appdata_config_params";
  @SerializedName(SERIALIZED_NAME_APPDATA_CONFIG_PARAMS)
  private Map<String, Object> appdataConfigParams = null;

  public static final String SERIALIZED_NAME_CONFIG_PARAMS = "config_params";
  @SerializedName(SERIALIZED_NAME_CONFIG_PARAMS)
  private Map<String, Object> configParams = null;

  public static final String SERIALIZED_NAME_MOUNT_POINT = "mount_point";
  @SerializedName(SERIALIZED_NAME_MOUNT_POINT)
  private String mountPoint;


  public UpdateVDBParameters name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The unique name of the VDB within a group.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "my-vdb", value = "The unique name of the VDB within a group.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public UpdateVDBParameters dbUsername(String dbUsername) {
    
    this.dbUsername = dbUsername;
    return this;
  }

   /**
   * The username of the database user (Oracle, ASE Only).
   * @return dbUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "db-username", value = "The username of the database user (Oracle, ASE Only).")

  public String getDbUsername() {
    return dbUsername;
  }


  public void setDbUsername(String dbUsername) {
    this.dbUsername = dbUsername;
  }


  public UpdateVDBParameters dbPassword(String dbPassword) {
    
    this.dbPassword = dbPassword;
    return this;
  }

   /**
   * The password of the database user (Oracle, ASE Only).
   * @return dbPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "db-password", value = "The password of the database user (Oracle, ASE Only).")

  public String getDbPassword() {
    return dbPassword;
  }


  public void setDbPassword(String dbPassword) {
    this.dbPassword = dbPassword;
  }


  public UpdateVDBParameters validateDbCredentials(Boolean validateDbCredentials) {
    
    this.validateDbCredentials = validateDbCredentials;
    return this;
  }

   /**
   * Whether db_username and db_password must be validated, if present, against the VDB. This must be set to false when credentials validation is not possible, for instance if the VDB is known to be disabled.
   * @return validateDbCredentials
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether db_username and db_password must be validated, if present, against the VDB. This must be set to false when credentials validation is not possible, for instance if the VDB is known to be disabled.")

  public Boolean getValidateDbCredentials() {
    return validateDbCredentials;
  }


  public void setValidateDbCredentials(Boolean validateDbCredentials) {
    this.validateDbCredentials = validateDbCredentials;
  }


  public UpdateVDBParameters autoRestart(Boolean autoRestart) {
    
    this.autoRestart = autoRestart;
    return this;
  }

   /**
   * Whether to enable VDB restart.
   * @return autoRestart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to enable VDB restart.")

  public Boolean getAutoRestart() {
    return autoRestart;
  }


  public void setAutoRestart(Boolean autoRestart) {
    this.autoRestart = autoRestart;
  }


  public UpdateVDBParameters environmentUserId(String environmentUserId) {
    
    this.environmentUserId = environmentUserId;
    return this;
  }

   /**
   * The environment user ID to use to connect to the target environment.
   * @return environmentUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "environment-user-123", value = "The environment user ID to use to connect to the target environment.")

  public String getEnvironmentUserId() {
    return environmentUserId;
  }


  public void setEnvironmentUserId(String environmentUserId) {
    this.environmentUserId = environmentUserId;
  }


  public UpdateVDBParameters templateId(String templateId) {
    
    this.templateId = templateId;
    return this;
  }

   /**
   * The ID of the target VDB Template (Oracle Only).
   * @return templateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "template-123", value = "The ID of the target VDB Template (Oracle Only).")

  public String getTemplateId() {
    return templateId;
  }


  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }


  public UpdateVDBParameters listenerIds(List<String> listenerIds) {
    
    this.listenerIds = listenerIds;
    return this;
  }

  public UpdateVDBParameters addListenerIdsItem(String listenerIdsItem) {
    if (this.listenerIds == null) {
      this.listenerIds = new ArrayList<String>();
    }
    this.listenerIds.add(listenerIdsItem);
    return this;
  }

   /**
   * The listener IDs for this provision operation (Oracle Only).
   * @return listenerIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"listener-123\",\"listener-456\"]", value = "The listener IDs for this provision operation (Oracle Only).")

  public List<String> getListenerIds() {
    return listenerIds;
  }


  public void setListenerIds(List<String> listenerIds) {
    this.listenerIds = listenerIds;
  }


  public UpdateVDBParameters newDbid(Boolean newDbid) {
    
    this.newDbid = newDbid;
    return this;
  }

   /**
   * Whether to enable new DBID for Oracle
   * @return newDbid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to enable new DBID for Oracle")

  public Boolean getNewDbid() {
    return newDbid;
  }


  public void setNewDbid(Boolean newDbid) {
    this.newDbid = newDbid;
  }


  public UpdateVDBParameters cdcOnProvision(Boolean cdcOnProvision) {
    
    this.cdcOnProvision = cdcOnProvision;
    return this;
  }

   /**
   * Whether to enable CDC on provision for MSSql
   * @return cdcOnProvision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to enable CDC on provision for MSSql")

  public Boolean getCdcOnProvision() {
    return cdcOnProvision;
  }


  public void setCdcOnProvision(Boolean cdcOnProvision) {
    this.cdcOnProvision = cdcOnProvision;
  }


  public UpdateVDBParameters preScript(String preScript) {
    
    this.preScript = preScript;
    return this;
  }

   /**
   * Pre script for MSSql.
   * @return preScript
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pre script for MSSql.")

  public String getPreScript() {
    return preScript;
  }


  public void setPreScript(String preScript) {
    this.preScript = preScript;
  }


  public UpdateVDBParameters postScript(String postScript) {
    
    this.postScript = postScript;
    return this;
  }

   /**
   * Post script for MSSql.
   * @return postScript
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Post script for MSSql.")

  public String getPostScript() {
    return postScript;
  }


  public void setPostScript(String postScript) {
    this.postScript = postScript;
  }


  public UpdateVDBParameters hooks(VirtualDatasetHooks hooks) {
    
    this.hooks = hooks;
    return this;
  }

   /**
   * Get hooks
   * @return hooks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VirtualDatasetHooks getHooks() {
    return hooks;
  }


  public void setHooks(VirtualDatasetHooks hooks) {
    this.hooks = hooks;
  }


  public UpdateVDBParameters customEnvVars(Map<String, String> customEnvVars) {
    
    this.customEnvVars = customEnvVars;
    return this;
  }

  public UpdateVDBParameters putCustomEnvVarsItem(String key, String customEnvVarsItem) {
    if (this.customEnvVars == null) {
      this.customEnvVars = new HashMap<String, String>();
    }
    this.customEnvVars.put(key, customEnvVarsItem);
    return this;
  }

   /**
   * Environment variable to be set when the engine administers a VDB. See the Engine documentation for the list of allowed/denied environment variables and rules about substitution. Custom environment variables can only be updated while the VDB is disabled.
   * @return customEnvVars
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"MY_ENV_VAR1\":\"$ORACLE_HOME\",\"MY_ENV_VAR2\":\"$CRS_HOME/after\"}", value = "Environment variable to be set when the engine administers a VDB. See the Engine documentation for the list of allowed/denied environment variables and rules about substitution. Custom environment variables can only be updated while the VDB is disabled.")

  public Map<String, String> getCustomEnvVars() {
    return customEnvVars;
  }


  public void setCustomEnvVars(Map<String, String> customEnvVars) {
    this.customEnvVars = customEnvVars;
  }


  public UpdateVDBParameters customEnvFiles(List<String> customEnvFiles) {
    
    this.customEnvFiles = customEnvFiles;
    return this;
  }

  public UpdateVDBParameters addCustomEnvFilesItem(String customEnvFilesItem) {
    if (this.customEnvFiles == null) {
      this.customEnvFiles = new ArrayList<String>();
    }
    this.customEnvFiles.add(customEnvFilesItem);
    return this;
  }

   /**
   * Environment files to be sourced when the Engine administers a VDB. This path can be followed by parameters. Paths and parameters are separated by spaces. Custom environment variables can only be updated while the VDB is disabled.
   * @return customEnvFiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"/export/home/env_file_1\",\"/export/home/env_file_2\"]", value = "Environment files to be sourced when the Engine administers a VDB. This path can be followed by parameters. Paths and parameters are separated by spaces. Custom environment variables can only be updated while the VDB is disabled.")

  public List<String> getCustomEnvFiles() {
    return customEnvFiles;
  }


  public void setCustomEnvFiles(List<String> customEnvFiles) {
    this.customEnvFiles = customEnvFiles;
  }


  public UpdateVDBParameters oracleRacCustomEnvFiles(List<OracleRacCustomEnvFile> oracleRacCustomEnvFiles) {
    
    this.oracleRacCustomEnvFiles = oracleRacCustomEnvFiles;
    return this;
  }

  public UpdateVDBParameters addOracleRacCustomEnvFilesItem(OracleRacCustomEnvFile oracleRacCustomEnvFilesItem) {
    if (this.oracleRacCustomEnvFiles == null) {
      this.oracleRacCustomEnvFiles = new ArrayList<OracleRacCustomEnvFile>();
    }
    this.oracleRacCustomEnvFiles.add(oracleRacCustomEnvFilesItem);
    return this;
  }

   /**
   * Environment files to be sourced when the Engine administers an Oracle RAC VDB. This path can be followed by parameters. Paths and parameters are separated by spaces. Custom environment variables can only be updated while the VDB is disabled.
   * @return oracleRacCustomEnvFiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"node_id\":\"ORACLE_CLUSTER_NODE-1\",\"path_parameters\":\"/export/home/env_file_1\"}]", value = "Environment files to be sourced when the Engine administers an Oracle RAC VDB. This path can be followed by parameters. Paths and parameters are separated by spaces. Custom environment variables can only be updated while the VDB is disabled.")

  public List<OracleRacCustomEnvFile> getOracleRacCustomEnvFiles() {
    return oracleRacCustomEnvFiles;
  }


  public void setOracleRacCustomEnvFiles(List<OracleRacCustomEnvFile> oracleRacCustomEnvFiles) {
    this.oracleRacCustomEnvFiles = oracleRacCustomEnvFiles;
  }


  public UpdateVDBParameters oracleRacCustomEnvVars(List<OracleRacCustomEnvVar> oracleRacCustomEnvVars) {
    
    this.oracleRacCustomEnvVars = oracleRacCustomEnvVars;
    return this;
  }

  public UpdateVDBParameters addOracleRacCustomEnvVarsItem(OracleRacCustomEnvVar oracleRacCustomEnvVarsItem) {
    if (this.oracleRacCustomEnvVars == null) {
      this.oracleRacCustomEnvVars = new ArrayList<OracleRacCustomEnvVar>();
    }
    this.oracleRacCustomEnvVars.add(oracleRacCustomEnvVarsItem);
    return this;
  }

   /**
   * Environment variable to be set when the engine administers an Oracle RAC VDB. See the Engine documentation for the list of allowed/denied environment variables and rules about substitution. Custom environment variables can only be updated while the VDB is disabled.
   * @return oracleRacCustomEnvVars
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"node_id\":\"ORACLE_CLUSTER_NODE-1\",\"name\":\"MY_ENV_VAR1\",\"value\":\"$CRS_HOME/after\"}]", value = "Environment variable to be set when the engine administers an Oracle RAC VDB. See the Engine documentation for the list of allowed/denied environment variables and rules about substitution. Custom environment variables can only be updated while the VDB is disabled.")

  public List<OracleRacCustomEnvVar> getOracleRacCustomEnvVars() {
    return oracleRacCustomEnvVars;
  }


  public void setOracleRacCustomEnvVars(List<OracleRacCustomEnvVar> oracleRacCustomEnvVars) {
    this.oracleRacCustomEnvVars = oracleRacCustomEnvVars;
  }


  public UpdateVDBParameters parentTdeKeystorePath(String parentTdeKeystorePath) {
    
    this.parentTdeKeystorePath = parentTdeKeystorePath;
    return this;
  }

   /**
   * Path to a copy of the parent&#39;s Oracle transparent data encryption keystore on the target host. Required to provision from snapshots containing encrypted database files. (Oracle Multitenant Only)
   * @return parentTdeKeystorePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/foo/bar/tde", value = "Path to a copy of the parent's Oracle transparent data encryption keystore on the target host. Required to provision from snapshots containing encrypted database files. (Oracle Multitenant Only)")

  public String getParentTdeKeystorePath() {
    return parentTdeKeystorePath;
  }


  public void setParentTdeKeystorePath(String parentTdeKeystorePath) {
    this.parentTdeKeystorePath = parentTdeKeystorePath;
  }


  public UpdateVDBParameters parentTdeKeystorePassword(String parentTdeKeystorePassword) {
    
    this.parentTdeKeystorePassword = parentTdeKeystorePassword;
    return this;
  }

   /**
   * The password of the keystore specified in parentTdeKeystorePath. (Oracle Multitenant Only)
   * @return parentTdeKeystorePassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "password", value = "The password of the keystore specified in parentTdeKeystorePath. (Oracle Multitenant Only)")

  public String getParentTdeKeystorePassword() {
    return parentTdeKeystorePassword;
  }


  public void setParentTdeKeystorePassword(String parentTdeKeystorePassword) {
    this.parentTdeKeystorePassword = parentTdeKeystorePassword;
  }


  public UpdateVDBParameters tdeKeyIdentifier(String tdeKeyIdentifier) {
    
    this.tdeKeyIdentifier = tdeKeyIdentifier;
    return this;
  }

   /**
   * ID of the key created by Delphix. (Oracle Multitenant Only)
   * @return tdeKeyIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "tde-indentifier", value = "ID of the key created by Delphix. (Oracle Multitenant Only)")

  public String getTdeKeyIdentifier() {
    return tdeKeyIdentifier;
  }


  public void setTdeKeyIdentifier(String tdeKeyIdentifier) {
    this.tdeKeyIdentifier = tdeKeyIdentifier;
  }


  public UpdateVDBParameters targetVcdbTdeKeystorePath(String targetVcdbTdeKeystorePath) {
    
    this.targetVcdbTdeKeystorePath = targetVcdbTdeKeystorePath;
    return this;
  }

   /**
   * Path to the keystore of the target vCDB. (Oracle Multitenant Only)
   * @return targetVcdbTdeKeystorePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/foo/cdb/tde", value = "Path to the keystore of the target vCDB. (Oracle Multitenant Only)")

  public String getTargetVcdbTdeKeystorePath() {
    return targetVcdbTdeKeystorePath;
  }


  public void setTargetVcdbTdeKeystorePath(String targetVcdbTdeKeystorePath) {
    this.targetVcdbTdeKeystorePath = targetVcdbTdeKeystorePath;
  }


  public UpdateVDBParameters cdbTdeKeystorePassword(String cdbTdeKeystorePassword) {
    
    this.cdbTdeKeystorePassword = cdbTdeKeystorePassword;
    return this;
  }

   /**
   * The password for the Transparent Data Encryption keystore associated with the CDB. (Oracle Multitenant Only)
   * @return cdbTdeKeystorePassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "cdb-password", value = "The password for the Transparent Data Encryption keystore associated with the CDB. (Oracle Multitenant Only)")

  public String getCdbTdeKeystorePassword() {
    return cdbTdeKeystorePassword;
  }


  public void setCdbTdeKeystorePassword(String cdbTdeKeystorePassword) {
    this.cdbTdeKeystorePassword = cdbTdeKeystorePassword;
  }


  public UpdateVDBParameters appdataSourceParams(Map<String, Object> appdataSourceParams) {
    
    this.appdataSourceParams = appdataSourceParams;
    return this;
  }

  public UpdateVDBParameters putAppdataSourceParamsItem(String key, Object appdataSourceParamsItem) {
    if (this.appdataSourceParams == null) {
      this.appdataSourceParams = new HashMap<String, Object>();
    }
    this.appdataSourceParams.put(key, appdataSourceParamsItem);
    return this;
  }

   /**
   * The JSON payload conforming to the DraftV4 schema based on the type of application data being manipulated.
   * @return appdataSourceParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"param\":\"value\"}", value = "The JSON payload conforming to the DraftV4 schema based on the type of application data being manipulated.")

  public Map<String, Object> getAppdataSourceParams() {
    return appdataSourceParams;
  }


  public void setAppdataSourceParams(Map<String, Object> appdataSourceParams) {
    this.appdataSourceParams = appdataSourceParams;
  }


  public UpdateVDBParameters additionalMountPoints(List<AdditionalMountPoint> additionalMountPoints) {
    
    this.additionalMountPoints = additionalMountPoints;
    return this;
  }

  public UpdateVDBParameters addAdditionalMountPointsItem(AdditionalMountPoint additionalMountPointsItem) {
    if (this.additionalMountPoints == null) {
      this.additionalMountPoints = new ArrayList<AdditionalMountPoint>();
    }
    this.additionalMountPoints.add(additionalMountPointsItem);
    return this;
  }

   /**
   * Specifies additional locations on which to mount a subdirectory of an AppData container. Can only be updated while the VDB is disabled.
   * @return additionalMountPoints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"shared_path\":\"/\",\"mount_path\":\"/work\",\"environment_id\":\"environment-123\"}]", value = "Specifies additional locations on which to mount a subdirectory of an AppData container. Can only be updated while the VDB is disabled.")

  public List<AdditionalMountPoint> getAdditionalMountPoints() {
    return additionalMountPoints;
  }


  public void setAdditionalMountPoints(List<AdditionalMountPoint> additionalMountPoints) {
    this.additionalMountPoints = additionalMountPoints;
  }


  public UpdateVDBParameters appdataConfigParams(Map<String, Object> appdataConfigParams) {
    
    this.appdataConfigParams = appdataConfigParams;
    return this;
  }

  public UpdateVDBParameters putAppdataConfigParamsItem(String key, Object appdataConfigParamsItem) {
    if (this.appdataConfigParams == null) {
      this.appdataConfigParams = new HashMap<String, Object>();
    }
    this.appdataConfigParams.put(key, appdataConfigParamsItem);
    return this;
  }

   /**
   * The parameters specified by the source config schema in the toolkit
   * @return appdataConfigParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"option\":\"value\"}", value = "The parameters specified by the source config schema in the toolkit")

  public Map<String, Object> getAppdataConfigParams() {
    return appdataConfigParams;
  }


  public void setAppdataConfigParams(Map<String, Object> appdataConfigParams) {
    this.appdataConfigParams = appdataConfigParams;
  }


  public UpdateVDBParameters configParams(Map<String, Object> configParams) {
    
    this.configParams = configParams;
    return this;
  }

  public UpdateVDBParameters putConfigParamsItem(String key, Object configParamsItem) {
    if (this.configParams == null) {
      this.configParams = new HashMap<String, Object>();
    }
    this.configParams.put(key, configParamsItem);
    return this;
  }

   /**
   * Database configuration parameter overrides.
   * @return configParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"processes\":150}", value = "Database configuration parameter overrides.")

  public Map<String, Object> getConfigParams() {
    return configParams;
  }


  public void setConfigParams(Map<String, Object> configParams) {
    this.configParams = configParams;
  }


  public UpdateVDBParameters mountPoint(String mountPoint) {
    
    this.mountPoint = mountPoint;
    return this;
  }

   /**
   * Mount point for the VDB (AppData only), can only be updated while the VDB is disabled.
   * @return mountPoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/var/mnt", value = "Mount point for the VDB (AppData only), can only be updated while the VDB is disabled.")

  public String getMountPoint() {
    return mountPoint;
  }


  public void setMountPoint(String mountPoint) {
    this.mountPoint = mountPoint;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateVDBParameters updateVDBParameters = (UpdateVDBParameters) o;
    return Objects.equals(this.name, updateVDBParameters.name) &&
        Objects.equals(this.dbUsername, updateVDBParameters.dbUsername) &&
        Objects.equals(this.dbPassword, updateVDBParameters.dbPassword) &&
        Objects.equals(this.validateDbCredentials, updateVDBParameters.validateDbCredentials) &&
        Objects.equals(this.autoRestart, updateVDBParameters.autoRestart) &&
        Objects.equals(this.environmentUserId, updateVDBParameters.environmentUserId) &&
        Objects.equals(this.templateId, updateVDBParameters.templateId) &&
        Objects.equals(this.listenerIds, updateVDBParameters.listenerIds) &&
        Objects.equals(this.newDbid, updateVDBParameters.newDbid) &&
        Objects.equals(this.cdcOnProvision, updateVDBParameters.cdcOnProvision) &&
        Objects.equals(this.preScript, updateVDBParameters.preScript) &&
        Objects.equals(this.postScript, updateVDBParameters.postScript) &&
        Objects.equals(this.hooks, updateVDBParameters.hooks) &&
        Objects.equals(this.customEnvVars, updateVDBParameters.customEnvVars) &&
        Objects.equals(this.customEnvFiles, updateVDBParameters.customEnvFiles) &&
        Objects.equals(this.oracleRacCustomEnvFiles, updateVDBParameters.oracleRacCustomEnvFiles) &&
        Objects.equals(this.oracleRacCustomEnvVars, updateVDBParameters.oracleRacCustomEnvVars) &&
        Objects.equals(this.parentTdeKeystorePath, updateVDBParameters.parentTdeKeystorePath) &&
        Objects.equals(this.parentTdeKeystorePassword, updateVDBParameters.parentTdeKeystorePassword) &&
        Objects.equals(this.tdeKeyIdentifier, updateVDBParameters.tdeKeyIdentifier) &&
        Objects.equals(this.targetVcdbTdeKeystorePath, updateVDBParameters.targetVcdbTdeKeystorePath) &&
        Objects.equals(this.cdbTdeKeystorePassword, updateVDBParameters.cdbTdeKeystorePassword) &&
        Objects.equals(this.appdataSourceParams, updateVDBParameters.appdataSourceParams) &&
        Objects.equals(this.additionalMountPoints, updateVDBParameters.additionalMountPoints) &&
        Objects.equals(this.appdataConfigParams, updateVDBParameters.appdataConfigParams) &&
        Objects.equals(this.configParams, updateVDBParameters.configParams) &&
        Objects.equals(this.mountPoint, updateVDBParameters.mountPoint);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, dbUsername, dbPassword, validateDbCredentials, autoRestart, environmentUserId, templateId, listenerIds, newDbid, cdcOnProvision, preScript, postScript, hooks, customEnvVars, customEnvFiles, oracleRacCustomEnvFiles, oracleRacCustomEnvVars, parentTdeKeystorePath, parentTdeKeystorePassword, tdeKeyIdentifier, targetVcdbTdeKeystorePath, cdbTdeKeystorePassword, appdataSourceParams, additionalMountPoints, appdataConfigParams, configParams, mountPoint);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateVDBParameters {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    dbUsername: ").append(toIndentedString(dbUsername)).append("\n");
    sb.append("    dbPassword: ").append(toIndentedString(dbPassword)).append("\n");
    sb.append("    validateDbCredentials: ").append(toIndentedString(validateDbCredentials)).append("\n");
    sb.append("    autoRestart: ").append(toIndentedString(autoRestart)).append("\n");
    sb.append("    environmentUserId: ").append(toIndentedString(environmentUserId)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    listenerIds: ").append(toIndentedString(listenerIds)).append("\n");
    sb.append("    newDbid: ").append(toIndentedString(newDbid)).append("\n");
    sb.append("    cdcOnProvision: ").append(toIndentedString(cdcOnProvision)).append("\n");
    sb.append("    preScript: ").append(toIndentedString(preScript)).append("\n");
    sb.append("    postScript: ").append(toIndentedString(postScript)).append("\n");
    sb.append("    hooks: ").append(toIndentedString(hooks)).append("\n");
    sb.append("    customEnvVars: ").append(toIndentedString(customEnvVars)).append("\n");
    sb.append("    customEnvFiles: ").append(toIndentedString(customEnvFiles)).append("\n");
    sb.append("    oracleRacCustomEnvFiles: ").append(toIndentedString(oracleRacCustomEnvFiles)).append("\n");
    sb.append("    oracleRacCustomEnvVars: ").append(toIndentedString(oracleRacCustomEnvVars)).append("\n");
    sb.append("    parentTdeKeystorePath: ").append(toIndentedString(parentTdeKeystorePath)).append("\n");
    sb.append("    parentTdeKeystorePassword: ").append(toIndentedString(parentTdeKeystorePassword)).append("\n");
    sb.append("    tdeKeyIdentifier: ").append(toIndentedString(tdeKeyIdentifier)).append("\n");
    sb.append("    targetVcdbTdeKeystorePath: ").append(toIndentedString(targetVcdbTdeKeystorePath)).append("\n");
    sb.append("    cdbTdeKeystorePassword: ").append(toIndentedString(cdbTdeKeystorePassword)).append("\n");
    sb.append("    appdataSourceParams: ").append(toIndentedString(appdataSourceParams)).append("\n");
    sb.append("    additionalMountPoints: ").append(toIndentedString(additionalMountPoints)).append("\n");
    sb.append("    appdataConfigParams: ").append(toIndentedString(appdataConfigParams)).append("\n");
    sb.append("    configParams: ").append(toIndentedString(configParams)).append("\n");
    sb.append("    mountPoint: ").append(toIndentedString(mountPoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

