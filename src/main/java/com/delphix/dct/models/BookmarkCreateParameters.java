/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.threeten.bp.LocalDate;

/**
 * A Data Control Tower object that references points in time for one or more datasets.
 */
@ApiModel(description = "A Data Control Tower object that references points in time for one or more datasets.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T17:08:49.349376+05:30[Asia/Kolkata]")
public class BookmarkCreateParameters {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_VDB_IDS = "vdb_ids";
  @SerializedName(SERIALIZED_NAME_VDB_IDS)
  private Set<String> vdbIds = null;

  public static final String SERIALIZED_NAME_SNAPSHOT_IDS = "snapshot_ids";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_IDS)
  private Set<String> snapshotIds = null;

  public static final String SERIALIZED_NAME_RETENTION = "retention";
  @SerializedName(SERIALIZED_NAME_RETENTION)
  private Long retention;

  public static final String SERIALIZED_NAME_EXPIRATION = "expiration";
  @SerializedName(SERIALIZED_NAME_EXPIRATION)
  private LocalDate expiration;

  public static final String SERIALIZED_NAME_RETAIN_FOREVER = "retain_forever";
  @SerializedName(SERIALIZED_NAME_RETAIN_FOREVER)
  private Boolean retainForever;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = null;

  public static final String SERIALIZED_NAME_MAKE_CURRENT_ACCOUNT_OWNER = "make_current_account_owner";
  @SerializedName(SERIALIZED_NAME_MAKE_CURRENT_ACCOUNT_OWNER)
  private Boolean makeCurrentAccountOwner = true;


  public BookmarkCreateParameters name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The user-defined name of this bookmark.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "my-bookmark-123", required = true, value = "The user-defined name of this bookmark.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public BookmarkCreateParameters vdbIds(Set<String> vdbIds) {
    
    this.vdbIds = vdbIds;
    return this;
  }

  public BookmarkCreateParameters addVdbIdsItem(String vdbIdsItem) {
    if (this.vdbIds == null) {
      this.vdbIds = new LinkedHashSet<String>();
    }
    this.vdbIds.add(vdbIdsItem);
    return this;
  }

   /**
   * The IDs of the VDBs to create the Bookmark on. This parameter is mutually exclusive with snapshot_ids.
   * @return vdbIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"vdb-123\",\"vdb-456\"]", value = "The IDs of the VDBs to create the Bookmark on. This parameter is mutually exclusive with snapshot_ids.")

  public Set<String> getVdbIds() {
    return vdbIds;
  }


  public void setVdbIds(Set<String> vdbIds) {
    this.vdbIds = vdbIds;
  }


  public BookmarkCreateParameters snapshotIds(Set<String> snapshotIds) {
    
    this.snapshotIds = snapshotIds;
    return this;
  }

  public BookmarkCreateParameters addSnapshotIdsItem(String snapshotIdsItem) {
    if (this.snapshotIds == null) {
      this.snapshotIds = new LinkedHashSet<String>();
    }
    this.snapshotIds.add(snapshotIdsItem);
    return this;
  }

   /**
   * The IDs of the snapshots that will be part of the Bookmark. This parameter is mutually exclusive with vdb_ids. 
   * @return snapshotIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"snapshot-1\",\"snapshot-2\"]", value = "The IDs of the snapshots that will be part of the Bookmark. This parameter is mutually exclusive with vdb_ids. ")

  public Set<String> getSnapshotIds() {
    return snapshotIds;
  }


  public void setSnapshotIds(Set<String> snapshotIds) {
    this.snapshotIds = snapshotIds;
  }


  public BookmarkCreateParameters retention(Long retention) {
    
    this.retention = retention;
    return this;
  }

   /**
   * The retention policy for this bookmark, in days. A value of -1 indicates the bookmark should be kept forever. Deprecated in favor of expiration and retain_forever.
   * @return retention
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "365", value = "The retention policy for this bookmark, in days. A value of -1 indicates the bookmark should be kept forever. Deprecated in favor of expiration and retain_forever.")

  public Long getRetention() {
    return retention;
  }


  public void setRetention(Long retention) {
    this.retention = retention;
  }


  public BookmarkCreateParameters expiration(LocalDate expiration) {
    
    this.expiration = expiration;
    return this;
  }

   /**
   * The expiration for this bookmark. Mutually exclusive with retention and retain_forever.
   * @return expiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sun Jul 04 05:30:00 IST 2021", value = "The expiration for this bookmark. Mutually exclusive with retention and retain_forever.")

  public LocalDate getExpiration() {
    return expiration;
  }


  public void setExpiration(LocalDate expiration) {
    this.expiration = expiration;
  }


  public BookmarkCreateParameters retainForever(Boolean retainForever) {
    
    this.retainForever = retainForever;
    return this;
  }

   /**
   * Indicates that the bookmark should be retained forever.
   * @return retainForever
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Indicates that the bookmark should be retained forever.")

  public Boolean getRetainForever() {
    return retainForever;
  }


  public void setRetainForever(Boolean retainForever) {
    this.retainForever = retainForever;
  }


  public BookmarkCreateParameters tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public BookmarkCreateParameters addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The tags to be created for this Bookmark.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"key\":\"key-1\",\"value\":\"value-1\"},{\"key\":\"key-2\",\"value\":\"value-2\"}]", value = "The tags to be created for this Bookmark.")

  public List<Tag> getTags() {
    return tags;
  }


  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  public BookmarkCreateParameters makeCurrentAccountOwner(Boolean makeCurrentAccountOwner) {
    
    this.makeCurrentAccountOwner = makeCurrentAccountOwner;
    return this;
  }

   /**
   * Whether the account creating this bookmark must be configured as owner of the bookmark.
   * @return makeCurrentAccountOwner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the account creating this bookmark must be configured as owner of the bookmark.")

  public Boolean getMakeCurrentAccountOwner() {
    return makeCurrentAccountOwner;
  }


  public void setMakeCurrentAccountOwner(Boolean makeCurrentAccountOwner) {
    this.makeCurrentAccountOwner = makeCurrentAccountOwner;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookmarkCreateParameters bookmarkCreateParameters = (BookmarkCreateParameters) o;
    return Objects.equals(this.name, bookmarkCreateParameters.name) &&
        Objects.equals(this.vdbIds, bookmarkCreateParameters.vdbIds) &&
        Objects.equals(this.snapshotIds, bookmarkCreateParameters.snapshotIds) &&
        Objects.equals(this.retention, bookmarkCreateParameters.retention) &&
        Objects.equals(this.expiration, bookmarkCreateParameters.expiration) &&
        Objects.equals(this.retainForever, bookmarkCreateParameters.retainForever) &&
        Objects.equals(this.tags, bookmarkCreateParameters.tags) &&
        Objects.equals(this.makeCurrentAccountOwner, bookmarkCreateParameters.makeCurrentAccountOwner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, vdbIds, snapshotIds, retention, expiration, retainForever, tags, makeCurrentAccountOwner);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookmarkCreateParameters {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    vdbIds: ").append(toIndentedString(vdbIds)).append("\n");
    sb.append("    snapshotIds: ").append(toIndentedString(snapshotIds)).append("\n");
    sb.append("    retention: ").append(toIndentedString(retention)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    retainForever: ").append(toIndentedString(retainForever)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    makeCurrentAccountOwner: ").append(toIndentedString(makeCurrentAccountOwner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

