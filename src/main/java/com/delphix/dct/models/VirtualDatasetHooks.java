/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.Hook;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * VDB operation hooks.
 */
@ApiModel(description = "VDB operation hooks.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T18:53:50.335381+05:30[Asia/Kolkata]")
public class VirtualDatasetHooks {
  public static final String SERIALIZED_NAME_PRE_REFRESH = "pre_refresh";
  @SerializedName(SERIALIZED_NAME_PRE_REFRESH)
  private List<Hook> preRefresh = null;

  public static final String SERIALIZED_NAME_POST_REFRESH = "post_refresh";
  @SerializedName(SERIALIZED_NAME_POST_REFRESH)
  private List<Hook> postRefresh = null;

  public static final String SERIALIZED_NAME_PRE_SELF_REFRESH = "pre_self_refresh";
  @SerializedName(SERIALIZED_NAME_PRE_SELF_REFRESH)
  private List<Hook> preSelfRefresh = null;

  public static final String SERIALIZED_NAME_POST_SELF_REFRESH = "post_self_refresh";
  @SerializedName(SERIALIZED_NAME_POST_SELF_REFRESH)
  private List<Hook> postSelfRefresh = null;

  public static final String SERIALIZED_NAME_PRE_ROLLBACK = "pre_rollback";
  @SerializedName(SERIALIZED_NAME_PRE_ROLLBACK)
  private List<Hook> preRollback = null;

  public static final String SERIALIZED_NAME_POST_ROLLBACK = "post_rollback";
  @SerializedName(SERIALIZED_NAME_POST_ROLLBACK)
  private List<Hook> postRollback = null;

  public static final String SERIALIZED_NAME_CONFIGURE_CLONE = "configure_clone";
  @SerializedName(SERIALIZED_NAME_CONFIGURE_CLONE)
  private List<Hook> configureClone = null;

  public static final String SERIALIZED_NAME_PRE_SNAPSHOT = "pre_snapshot";
  @SerializedName(SERIALIZED_NAME_PRE_SNAPSHOT)
  private List<Hook> preSnapshot = null;

  public static final String SERIALIZED_NAME_POST_SNAPSHOT = "post_snapshot";
  @SerializedName(SERIALIZED_NAME_POST_SNAPSHOT)
  private List<Hook> postSnapshot = null;

  public static final String SERIALIZED_NAME_PRE_START = "pre_start";
  @SerializedName(SERIALIZED_NAME_PRE_START)
  private List<Hook> preStart = null;

  public static final String SERIALIZED_NAME_POST_START = "post_start";
  @SerializedName(SERIALIZED_NAME_POST_START)
  private List<Hook> postStart = null;

  public static final String SERIALIZED_NAME_PRE_STOP = "pre_stop";
  @SerializedName(SERIALIZED_NAME_PRE_STOP)
  private List<Hook> preStop = null;

  public static final String SERIALIZED_NAME_POST_STOP = "post_stop";
  @SerializedName(SERIALIZED_NAME_POST_STOP)
  private List<Hook> postStop = null;


  public VirtualDatasetHooks preRefresh(List<Hook> preRefresh) {
    
    this.preRefresh = preRefresh;
    return this;
  }

  public VirtualDatasetHooks addPreRefreshItem(Hook preRefreshItem) {
    if (this.preRefresh == null) {
      this.preRefresh = new ArrayList<Hook>();
    }
    this.preRefresh.add(preRefreshItem);
    return this;
  }

   /**
   * The commands to execute on the target environment before refreshing the VDB.
   * @return preRefresh
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment before refreshing the VDB.")

  public List<Hook> getPreRefresh() {
    return preRefresh;
  }


  public void setPreRefresh(List<Hook> preRefresh) {
    this.preRefresh = preRefresh;
  }


  public VirtualDatasetHooks postRefresh(List<Hook> postRefresh) {
    
    this.postRefresh = postRefresh;
    return this;
  }

  public VirtualDatasetHooks addPostRefreshItem(Hook postRefreshItem) {
    if (this.postRefresh == null) {
      this.postRefresh = new ArrayList<Hook>();
    }
    this.postRefresh.add(postRefreshItem);
    return this;
  }

   /**
   * The commands to execute on the target environment after refreshing the VDB.
   * @return postRefresh
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment after refreshing the VDB.")

  public List<Hook> getPostRefresh() {
    return postRefresh;
  }


  public void setPostRefresh(List<Hook> postRefresh) {
    this.postRefresh = postRefresh;
  }


  public VirtualDatasetHooks preSelfRefresh(List<Hook> preSelfRefresh) {
    
    this.preSelfRefresh = preSelfRefresh;
    return this;
  }

  public VirtualDatasetHooks addPreSelfRefreshItem(Hook preSelfRefreshItem) {
    if (this.preSelfRefresh == null) {
      this.preSelfRefresh = new ArrayList<Hook>();
    }
    this.preSelfRefresh.add(preSelfRefreshItem);
    return this;
  }

   /**
   * The commands to execute on the target environment before refreshing the VDB with data from itself.
   * @return preSelfRefresh
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment before refreshing the VDB with data from itself.")

  public List<Hook> getPreSelfRefresh() {
    return preSelfRefresh;
  }


  public void setPreSelfRefresh(List<Hook> preSelfRefresh) {
    this.preSelfRefresh = preSelfRefresh;
  }


  public VirtualDatasetHooks postSelfRefresh(List<Hook> postSelfRefresh) {
    
    this.postSelfRefresh = postSelfRefresh;
    return this;
  }

  public VirtualDatasetHooks addPostSelfRefreshItem(Hook postSelfRefreshItem) {
    if (this.postSelfRefresh == null) {
      this.postSelfRefresh = new ArrayList<Hook>();
    }
    this.postSelfRefresh.add(postSelfRefreshItem);
    return this;
  }

   /**
   * The commands to execute on the target environment after refreshing the VDB with data from itself.
   * @return postSelfRefresh
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment after refreshing the VDB with data from itself.")

  public List<Hook> getPostSelfRefresh() {
    return postSelfRefresh;
  }


  public void setPostSelfRefresh(List<Hook> postSelfRefresh) {
    this.postSelfRefresh = postSelfRefresh;
  }


  public VirtualDatasetHooks preRollback(List<Hook> preRollback) {
    
    this.preRollback = preRollback;
    return this;
  }

  public VirtualDatasetHooks addPreRollbackItem(Hook preRollbackItem) {
    if (this.preRollback == null) {
      this.preRollback = new ArrayList<Hook>();
    }
    this.preRollback.add(preRollbackItem);
    return this;
  }

   /**
   * The commands to execute on the target environment before rewinding the VDB.
   * @return preRollback
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment before rewinding the VDB.")

  public List<Hook> getPreRollback() {
    return preRollback;
  }


  public void setPreRollback(List<Hook> preRollback) {
    this.preRollback = preRollback;
  }


  public VirtualDatasetHooks postRollback(List<Hook> postRollback) {
    
    this.postRollback = postRollback;
    return this;
  }

  public VirtualDatasetHooks addPostRollbackItem(Hook postRollbackItem) {
    if (this.postRollback == null) {
      this.postRollback = new ArrayList<Hook>();
    }
    this.postRollback.add(postRollbackItem);
    return this;
  }

   /**
   * The commands to execute on the target environment after rewinding the VDB.
   * @return postRollback
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment after rewinding the VDB.")

  public List<Hook> getPostRollback() {
    return postRollback;
  }


  public void setPostRollback(List<Hook> postRollback) {
    this.postRollback = postRollback;
  }


  public VirtualDatasetHooks configureClone(List<Hook> configureClone) {
    
    this.configureClone = configureClone;
    return this;
  }

  public VirtualDatasetHooks addConfigureCloneItem(Hook configureCloneItem) {
    if (this.configureClone == null) {
      this.configureClone = new ArrayList<Hook>();
    }
    this.configureClone.add(configureCloneItem);
    return this;
  }

   /**
   * The commands to execute on the target environment when the VDB is created or refreshed.
   * @return configureClone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment when the VDB is created or refreshed.")

  public List<Hook> getConfigureClone() {
    return configureClone;
  }


  public void setConfigureClone(List<Hook> configureClone) {
    this.configureClone = configureClone;
  }


  public VirtualDatasetHooks preSnapshot(List<Hook> preSnapshot) {
    
    this.preSnapshot = preSnapshot;
    return this;
  }

  public VirtualDatasetHooks addPreSnapshotItem(Hook preSnapshotItem) {
    if (this.preSnapshot == null) {
      this.preSnapshot = new ArrayList<Hook>();
    }
    this.preSnapshot.add(preSnapshotItem);
    return this;
  }

   /**
   * The commands to execute on the target environment before snapshotting a virtual source. These commands can quiesce any data prior to snapshotting.
   * @return preSnapshot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment before snapshotting a virtual source. These commands can quiesce any data prior to snapshotting.")

  public List<Hook> getPreSnapshot() {
    return preSnapshot;
  }


  public void setPreSnapshot(List<Hook> preSnapshot) {
    this.preSnapshot = preSnapshot;
  }


  public VirtualDatasetHooks postSnapshot(List<Hook> postSnapshot) {
    
    this.postSnapshot = postSnapshot;
    return this;
  }

  public VirtualDatasetHooks addPostSnapshotItem(Hook postSnapshotItem) {
    if (this.postSnapshot == null) {
      this.postSnapshot = new ArrayList<Hook>();
    }
    this.postSnapshot.add(postSnapshotItem);
    return this;
  }

   /**
   * The commands to execute on the target environment after snapshotting a virtual source.
   * @return postSnapshot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment after snapshotting a virtual source.")

  public List<Hook> getPostSnapshot() {
    return postSnapshot;
  }


  public void setPostSnapshot(List<Hook> postSnapshot) {
    this.postSnapshot = postSnapshot;
  }


  public VirtualDatasetHooks preStart(List<Hook> preStart) {
    
    this.preStart = preStart;
    return this;
  }

  public VirtualDatasetHooks addPreStartItem(Hook preStartItem) {
    if (this.preStart == null) {
      this.preStart = new ArrayList<Hook>();
    }
    this.preStart.add(preStartItem);
    return this;
  }

   /**
   * The commands to execute on the target environment before starting a virtual source.
   * @return preStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment before starting a virtual source.")

  public List<Hook> getPreStart() {
    return preStart;
  }


  public void setPreStart(List<Hook> preStart) {
    this.preStart = preStart;
  }


  public VirtualDatasetHooks postStart(List<Hook> postStart) {
    
    this.postStart = postStart;
    return this;
  }

  public VirtualDatasetHooks addPostStartItem(Hook postStartItem) {
    if (this.postStart == null) {
      this.postStart = new ArrayList<Hook>();
    }
    this.postStart.add(postStartItem);
    return this;
  }

   /**
   * The commands to execute on the target environment after starting a virtual source.
   * @return postStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment after starting a virtual source.")

  public List<Hook> getPostStart() {
    return postStart;
  }


  public void setPostStart(List<Hook> postStart) {
    this.postStart = postStart;
  }


  public VirtualDatasetHooks preStop(List<Hook> preStop) {
    
    this.preStop = preStop;
    return this;
  }

  public VirtualDatasetHooks addPreStopItem(Hook preStopItem) {
    if (this.preStop == null) {
      this.preStop = new ArrayList<Hook>();
    }
    this.preStop.add(preStopItem);
    return this;
  }

   /**
   * The commands to execute on the target environment before stopping a virtual source.
   * @return preStop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment before stopping a virtual source.")

  public List<Hook> getPreStop() {
    return preStop;
  }


  public void setPreStop(List<Hook> preStop) {
    this.preStop = preStop;
  }


  public VirtualDatasetHooks postStop(List<Hook> postStop) {
    
    this.postStop = postStop;
    return this;
  }

  public VirtualDatasetHooks addPostStopItem(Hook postStopItem) {
    if (this.postStop == null) {
      this.postStop = new ArrayList<Hook>();
    }
    this.postStop.add(postStopItem);
    return this;
  }

   /**
   * The commands to execute on the target environment after stopping a virtual source.
   * @return postStop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute on the target environment after stopping a virtual source.")

  public List<Hook> getPostStop() {
    return postStop;
  }


  public void setPostStop(List<Hook> postStop) {
    this.postStop = postStop;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualDatasetHooks virtualDatasetHooks = (VirtualDatasetHooks) o;
    return Objects.equals(this.preRefresh, virtualDatasetHooks.preRefresh) &&
        Objects.equals(this.postRefresh, virtualDatasetHooks.postRefresh) &&
        Objects.equals(this.preSelfRefresh, virtualDatasetHooks.preSelfRefresh) &&
        Objects.equals(this.postSelfRefresh, virtualDatasetHooks.postSelfRefresh) &&
        Objects.equals(this.preRollback, virtualDatasetHooks.preRollback) &&
        Objects.equals(this.postRollback, virtualDatasetHooks.postRollback) &&
        Objects.equals(this.configureClone, virtualDatasetHooks.configureClone) &&
        Objects.equals(this.preSnapshot, virtualDatasetHooks.preSnapshot) &&
        Objects.equals(this.postSnapshot, virtualDatasetHooks.postSnapshot) &&
        Objects.equals(this.preStart, virtualDatasetHooks.preStart) &&
        Objects.equals(this.postStart, virtualDatasetHooks.postStart) &&
        Objects.equals(this.preStop, virtualDatasetHooks.preStop) &&
        Objects.equals(this.postStop, virtualDatasetHooks.postStop);
  }

  @Override
  public int hashCode() {
    return Objects.hash(preRefresh, postRefresh, preSelfRefresh, postSelfRefresh, preRollback, postRollback, configureClone, preSnapshot, postSnapshot, preStart, postStart, preStop, postStop);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualDatasetHooks {\n");
    sb.append("    preRefresh: ").append(toIndentedString(preRefresh)).append("\n");
    sb.append("    postRefresh: ").append(toIndentedString(postRefresh)).append("\n");
    sb.append("    preSelfRefresh: ").append(toIndentedString(preSelfRefresh)).append("\n");
    sb.append("    postSelfRefresh: ").append(toIndentedString(postSelfRefresh)).append("\n");
    sb.append("    preRollback: ").append(toIndentedString(preRollback)).append("\n");
    sb.append("    postRollback: ").append(toIndentedString(postRollback)).append("\n");
    sb.append("    configureClone: ").append(toIndentedString(configureClone)).append("\n");
    sb.append("    preSnapshot: ").append(toIndentedString(preSnapshot)).append("\n");
    sb.append("    postSnapshot: ").append(toIndentedString(postSnapshot)).append("\n");
    sb.append("    preStart: ").append(toIndentedString(preStart)).append("\n");
    sb.append("    postStart: ").append(toIndentedString(postStart)).append("\n");
    sb.append("    preStop: ").append(toIndentedString(preStop)).append("\n");
    sb.append("    postStop: ").append(toIndentedString(postStop)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

