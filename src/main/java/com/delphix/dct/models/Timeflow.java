/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * Virtualization Engine Timeflow of a dSource or VDB.
 */
@ApiModel(description = "Virtualization Engine Timeflow of a dSource or VDB.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T17:08:49.349376+05:30[Asia/Kolkata]")
public class Timeflow {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ENGINE_ID = "engine_id";
  @SerializedName(SERIALIZED_NAME_ENGINE_ID)
  private String engineId;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DATASET_ID = "dataset_id";
  @SerializedName(SERIALIZED_NAME_DATASET_ID)
  private String datasetId;

  /**
   * The source action that created the timeflow.
   */
  @JsonAdapter(CreationTypeEnum.Adapter.class)
  public enum CreationTypeEnum {
    INITIAL("INITIAL"),
    
    INDETERMINATE("INDETERMINATE"),
    
    REFRESH("REFRESH"),
    
    ROLLBACK("ROLLBACK"),
    
    TEMPORARY("TEMPORARY"),
    
    TRANSFORMATION("TRANSFORMATION"),
    
    V2P("V2P"),
    
    PDB_PLUG("PDB_PLUG"),
    
    ORACLE_LIVE_SOURCE_RESYNC("ORACLE_LIVE_SOURCE_RESYNC"),
    
    SOURCE_CONTINUITY("SOURCE_CONTINUITY");

    private String value;

    CreationTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CreationTypeEnum fromValue(String value) {
      for (CreationTypeEnum b : CreationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CreationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CreationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CreationTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CreationTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CREATION_TYPE = "creation_type";
  @SerializedName(SERIALIZED_NAME_CREATION_TYPE)
  private CreationTypeEnum creationType;

  public static final String SERIALIZED_NAME_PARENT_SNAPSHOT_ID = "parent_snapshot_id";
  @SerializedName(SERIALIZED_NAME_PARENT_SNAPSHOT_ID)
  private String parentSnapshotId;

  public static final String SERIALIZED_NAME_PARENT_POINT_LOCATION = "parent_point_location";
  @SerializedName(SERIALIZED_NAME_PARENT_POINT_LOCATION)
  private String parentPointLocation;

  public static final String SERIALIZED_NAME_PARENT_POINT_TIMESTAMP = "parent_point_timestamp";
  @SerializedName(SERIALIZED_NAME_PARENT_POINT_TIMESTAMP)
  private OffsetDateTime parentPointTimestamp;

  public static final String SERIALIZED_NAME_PARENT_POINT_TIMEFLOW_ID = "parent_point_timeflow_id";
  @SerializedName(SERIALIZED_NAME_PARENT_POINT_TIMEFLOW_ID)
  private String parentPointTimeflowId;

  public static final String SERIALIZED_NAME_SOURCE_DATA_TIMESTAMP = "source_data_timestamp";
  @SerializedName(SERIALIZED_NAME_SOURCE_DATA_TIMESTAMP)
  private OffsetDateTime sourceDataTimestamp;

  public static final String SERIALIZED_NAME_ORACLE_INCARNATION_ID = "oracle_incarnation_id";
  @SerializedName(SERIALIZED_NAME_ORACLE_INCARNATION_ID)
  private String oracleIncarnationId;

  public static final String SERIALIZED_NAME_ORACLE_CDB_TIMEFLOW_ID = "oracle_cdb_timeflow_id";
  @SerializedName(SERIALIZED_NAME_ORACLE_CDB_TIMEFLOW_ID)
  private String oracleCdbTimeflowId;

  public static final String SERIALIZED_NAME_ORACLE_TDE_UUID = "oracle_tde_uuid";
  @SerializedName(SERIALIZED_NAME_ORACLE_TDE_UUID)
  private String oracleTdeUuid;

  public static final String SERIALIZED_NAME_MSSQL_DATABASE_GUID = "mssql_database_guid";
  @SerializedName(SERIALIZED_NAME_MSSQL_DATABASE_GUID)
  private String mssqlDatabaseGuid;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = null;


  public Timeflow id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The Timeflow ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "timeflow-123", value = "The Timeflow ID.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Timeflow engineId(String engineId) {
    
    this.engineId = engineId;
    return this;
  }

   /**
   * The ID of the engine the timeflow belongs to.
   * @return engineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The ID of the engine the timeflow belongs to.")

  public String getEngineId() {
    return engineId;
  }


  public void setEngineId(String engineId) {
    this.engineId = engineId;
  }


  public Timeflow namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * Alternate namespace for this object, for replicated and restored timeflows.
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NAMESPACE-1", value = "Alternate namespace for this object, for replicated and restored timeflows.")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public Timeflow name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The timeflow&#39;s name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "DB_PROVISION@2023-01-25T09:00:30", value = "The timeflow's name.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Timeflow datasetId(String datasetId) {
    
    this.datasetId = datasetId;
    return this;
  }

   /**
   * The ID of the timeflow&#39;s dSource or VDB.
   * @return datasetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dataset-123", value = "The ID of the timeflow's dSource or VDB.")

  public String getDatasetId() {
    return datasetId;
  }


  public void setDatasetId(String datasetId) {
    this.datasetId = datasetId;
  }


  public Timeflow creationType(CreationTypeEnum creationType) {
    
    this.creationType = creationType;
    return this;
  }

   /**
   * The source action that created the timeflow.
   * @return creationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "REFRESH", value = "The source action that created the timeflow.")

  public CreationTypeEnum getCreationType() {
    return creationType;
  }


  public void setCreationType(CreationTypeEnum creationType) {
    this.creationType = creationType;
  }


  public Timeflow parentSnapshotId(String parentSnapshotId) {
    
    this.parentSnapshotId = parentSnapshotId;
    return this;
  }

   /**
   * The ID of the timeflow&#39;s parent snapshot.
   * @return parentSnapshotId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "snapshot-123", value = "The ID of the timeflow's parent snapshot.")

  public String getParentSnapshotId() {
    return parentSnapshotId;
  }


  public void setParentSnapshotId(String parentSnapshotId) {
    this.parentSnapshotId = parentSnapshotId;
  }


  public Timeflow parentPointLocation(String parentPointLocation) {
    
    this.parentPointLocation = parentPointLocation;
    return this;
  }

   /**
   * The location on the parent timeflow from which this timeflow was provisioned. This will not be present for timeflows derived from linked sources.
   * @return parentPointLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1178883", value = "The location on the parent timeflow from which this timeflow was provisioned. This will not be present for timeflows derived from linked sources.")

  public String getParentPointLocation() {
    return parentPointLocation;
  }


  public void setParentPointLocation(String parentPointLocation) {
    this.parentPointLocation = parentPointLocation;
  }


  public Timeflow parentPointTimestamp(OffsetDateTime parentPointTimestamp) {
    
    this.parentPointTimestamp = parentPointTimestamp;
    return this;
  }

   /**
   * The timestamp on the parent timeflow from which this timeflow was provisioned. This will not be present for timeflows derived from linked sources.
   * @return parentPointTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-05-01T08:51:34.148Z", value = "The timestamp on the parent timeflow from which this timeflow was provisioned. This will not be present for timeflows derived from linked sources.")

  public OffsetDateTime getParentPointTimestamp() {
    return parentPointTimestamp;
  }


  public void setParentPointTimestamp(OffsetDateTime parentPointTimestamp) {
    this.parentPointTimestamp = parentPointTimestamp;
  }


  public Timeflow parentPointTimeflowId(String parentPointTimeflowId) {
    
    this.parentPointTimeflowId = parentPointTimeflowId;
    return this;
  }

   /**
   * A reference to the parent timeflow from which this timeflow was provisioned. This will not be present for timeflows derived from linked sources.
   * @return parentPointTimeflowId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "timeflow-123", value = "A reference to the parent timeflow from which this timeflow was provisioned. This will not be present for timeflows derived from linked sources.")

  public String getParentPointTimeflowId() {
    return parentPointTimeflowId;
  }


  public void setParentPointTimeflowId(String parentPointTimeflowId) {
    this.parentPointTimeflowId = parentPointTimeflowId;
  }


  public Timeflow sourceDataTimestamp(OffsetDateTime sourceDataTimestamp) {
    
    this.sourceDataTimestamp = sourceDataTimestamp;
    return this;
  }

   /**
   * The timestamp on the root ancestor timeflow from which this timeflow originated. This logical time acts as reference to the origin source data.
   * @return sourceDataTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-05-01T08:51:34.148Z", value = "The timestamp on the root ancestor timeflow from which this timeflow originated. This logical time acts as reference to the origin source data.")

  public OffsetDateTime getSourceDataTimestamp() {
    return sourceDataTimestamp;
  }


  public void setSourceDataTimestamp(OffsetDateTime sourceDataTimestamp) {
    this.sourceDataTimestamp = sourceDataTimestamp;
  }


  public Timeflow oracleIncarnationId(String oracleIncarnationId) {
    
    this.oracleIncarnationId = oracleIncarnationId;
    return this;
  }

   /**
   * Oracle-specific incarnation identifier for this timeflow.
   * @return oracleIncarnationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123", value = "Oracle-specific incarnation identifier for this timeflow.")

  public String getOracleIncarnationId() {
    return oracleIncarnationId;
  }


  public void setOracleIncarnationId(String oracleIncarnationId) {
    this.oracleIncarnationId = oracleIncarnationId;
  }


  public Timeflow oracleCdbTimeflowId(String oracleCdbTimeflowId) {
    
    this.oracleCdbTimeflowId = oracleCdbTimeflowId;
    return this;
  }

   /**
   * A reference to the mirror CDB timeflow if this is a timeflow for a PDB.
   * @return oracleCdbTimeflowId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "cdb-123", value = "A reference to the mirror CDB timeflow if this is a timeflow for a PDB.")

  public String getOracleCdbTimeflowId() {
    return oracleCdbTimeflowId;
  }


  public void setOracleCdbTimeflowId(String oracleCdbTimeflowId) {
    this.oracleCdbTimeflowId = oracleCdbTimeflowId;
  }


  public Timeflow oracleTdeUuid(String oracleTdeUuid) {
    
    this.oracleTdeUuid = oracleTdeUuid;
    return this;
  }

   /**
   * The unique identifier for timeflow-specific TDE objects that reside outside of Delphix storage.
   * @return oracleTdeUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "tde-indentifier", value = "The unique identifier for timeflow-specific TDE objects that reside outside of Delphix storage.")

  public String getOracleTdeUuid() {
    return oracleTdeUuid;
  }


  public void setOracleTdeUuid(String oracleTdeUuid) {
    this.oracleTdeUuid = oracleTdeUuid;
  }


  public Timeflow mssqlDatabaseGuid(String mssqlDatabaseGuid) {
    
    this.mssqlDatabaseGuid = mssqlDatabaseGuid;
    return this;
  }

   /**
   * MSSQL-specific recovery branch identifier for this timeflow.
   * @return mssqlDatabaseGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "DATABASE-1", value = "MSSQL-specific recovery branch identifier for this timeflow.")

  public String getMssqlDatabaseGuid() {
    return mssqlDatabaseGuid;
  }


  public void setMssqlDatabaseGuid(String mssqlDatabaseGuid) {
    this.mssqlDatabaseGuid = mssqlDatabaseGuid;
  }


  public Timeflow tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public Timeflow addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Tag> getTags() {
    return tags;
  }


  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Timeflow timeflow = (Timeflow) o;
    return Objects.equals(this.id, timeflow.id) &&
        Objects.equals(this.engineId, timeflow.engineId) &&
        Objects.equals(this.namespace, timeflow.namespace) &&
        Objects.equals(this.name, timeflow.name) &&
        Objects.equals(this.datasetId, timeflow.datasetId) &&
        Objects.equals(this.creationType, timeflow.creationType) &&
        Objects.equals(this.parentSnapshotId, timeflow.parentSnapshotId) &&
        Objects.equals(this.parentPointLocation, timeflow.parentPointLocation) &&
        Objects.equals(this.parentPointTimestamp, timeflow.parentPointTimestamp) &&
        Objects.equals(this.parentPointTimeflowId, timeflow.parentPointTimeflowId) &&
        Objects.equals(this.sourceDataTimestamp, timeflow.sourceDataTimestamp) &&
        Objects.equals(this.oracleIncarnationId, timeflow.oracleIncarnationId) &&
        Objects.equals(this.oracleCdbTimeflowId, timeflow.oracleCdbTimeflowId) &&
        Objects.equals(this.oracleTdeUuid, timeflow.oracleTdeUuid) &&
        Objects.equals(this.mssqlDatabaseGuid, timeflow.mssqlDatabaseGuid) &&
        Objects.equals(this.tags, timeflow.tags);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, engineId, namespace, name, datasetId, creationType, parentSnapshotId, parentPointLocation, parentPointTimestamp, parentPointTimeflowId, sourceDataTimestamp, oracleIncarnationId, oracleCdbTimeflowId, oracleTdeUuid, mssqlDatabaseGuid, tags);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Timeflow {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    engineId: ").append(toIndentedString(engineId)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("    creationType: ").append(toIndentedString(creationType)).append("\n");
    sb.append("    parentSnapshotId: ").append(toIndentedString(parentSnapshotId)).append("\n");
    sb.append("    parentPointLocation: ").append(toIndentedString(parentPointLocation)).append("\n");
    sb.append("    parentPointTimestamp: ").append(toIndentedString(parentPointTimestamp)).append("\n");
    sb.append("    parentPointTimeflowId: ").append(toIndentedString(parentPointTimeflowId)).append("\n");
    sb.append("    sourceDataTimestamp: ").append(toIndentedString(sourceDataTimestamp)).append("\n");
    sb.append("    oracleIncarnationId: ").append(toIndentedString(oracleIncarnationId)).append("\n");
    sb.append("    oracleCdbTimeflowId: ").append(toIndentedString(oracleCdbTimeflowId)).append("\n");
    sb.append("    oracleTdeUuid: ").append(toIndentedString(oracleTdeUuid)).append("\n");
    sb.append("    mssqlDatabaseGuid: ").append(toIndentedString(mssqlDatabaseGuid)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

