/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.ASEDSourceLinkSourceParametersAllOf;
import com.delphix.dct.models.BaseDSourceLinkSourceParameters;
import com.delphix.dct.models.SourceOperation;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ASEDSourceLinkSourceParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T18:53:50.335381+05:30[Asia/Kolkata]")
public class ASEDSourceLinkSourceParameters {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SOURCE_ID = "source_id";
  @SerializedName(SERIALIZED_NAME_SOURCE_ID)
  private String sourceId;

  public static final String SERIALIZED_NAME_GROUP_ID = "group_id";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  private String groupId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LOG_SYNC_ENABLED = "log_sync_enabled";
  @SerializedName(SERIALIZED_NAME_LOG_SYNC_ENABLED)
  private Boolean logSyncEnabled = false;

  public static final String SERIALIZED_NAME_EXTERNAL_FILE_PATH = "external_file_path";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_FILE_PATH)
  private String externalFilePath;

  public static final String SERIALIZED_NAME_MAKE_CURRENT_ACCOUNT_OWNER = "make_current_account_owner";
  @SerializedName(SERIALIZED_NAME_MAKE_CURRENT_ACCOUNT_OWNER)
  private Boolean makeCurrentAccountOwner = true;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = null;

  public static final String SERIALIZED_NAME_OPS_PRE_SYNC = "ops_pre_sync";
  @SerializedName(SERIALIZED_NAME_OPS_PRE_SYNC)
  private List<SourceOperation> opsPreSync = null;

  public static final String SERIALIZED_NAME_OPS_POST_SYNC = "ops_post_sync";
  @SerializedName(SERIALIZED_NAME_OPS_POST_SYNC)
  private List<SourceOperation> opsPostSync = null;

  public static final String SERIALIZED_NAME_MOUNT_BASE = "mount_base";
  @SerializedName(SERIALIZED_NAME_MOUNT_BASE)
  private String mountBase;

  public static final String SERIALIZED_NAME_LOAD_BACKUP_PATH = "load_backup_path";
  @SerializedName(SERIALIZED_NAME_LOAD_BACKUP_PATH)
  private String loadBackupPath;

  public static final String SERIALIZED_NAME_BACKUP_SERVER_NAME = "backup_server_name";
  @SerializedName(SERIALIZED_NAME_BACKUP_SERVER_NAME)
  private String backupServerName;

  public static final String SERIALIZED_NAME_BACKUP_HOST_USER = "backup_host_user";
  @SerializedName(SERIALIZED_NAME_BACKUP_HOST_USER)
  private String backupHostUser;

  public static final String SERIALIZED_NAME_BACKUP_HOST = "backup_host";
  @SerializedName(SERIALIZED_NAME_BACKUP_HOST)
  private String backupHost;

  public static final String SERIALIZED_NAME_DUMP_CREDENTIALS = "dump_credentials";
  @SerializedName(SERIALIZED_NAME_DUMP_CREDENTIALS)
  private String dumpCredentials;

  public static final String SERIALIZED_NAME_SOURCE_HOST_USER = "source_host_user";
  @SerializedName(SERIALIZED_NAME_SOURCE_HOST_USER)
  private String sourceHostUser;

  public static final String SERIALIZED_NAME_DB_USER = "db_user";
  @SerializedName(SERIALIZED_NAME_DB_USER)
  private String dbUser;

  public static final String SERIALIZED_NAME_DB_PASSWORD = "db_password";
  @SerializedName(SERIALIZED_NAME_DB_PASSWORD)
  private String dbPassword;

  public static final String SERIALIZED_NAME_DB_VAULT = "db_vault";
  @SerializedName(SERIALIZED_NAME_DB_VAULT)
  private String dbVault;

  public static final String SERIALIZED_NAME_DB_HASHICORP_VAULT_ENGINE = "db_hashicorp_vault_engine";
  @SerializedName(SERIALIZED_NAME_DB_HASHICORP_VAULT_ENGINE)
  private String dbHashicorpVaultEngine;

  public static final String SERIALIZED_NAME_DB_HASHICORP_VAULT_SECRET_PATH = "db_hashicorp_vault_secret_path";
  @SerializedName(SERIALIZED_NAME_DB_HASHICORP_VAULT_SECRET_PATH)
  private String dbHashicorpVaultSecretPath;

  public static final String SERIALIZED_NAME_DB_HASHICORP_VAULT_USERNAME_KEY = "db_hashicorp_vault_username_key";
  @SerializedName(SERIALIZED_NAME_DB_HASHICORP_VAULT_USERNAME_KEY)
  private String dbHashicorpVaultUsernameKey;

  public static final String SERIALIZED_NAME_DB_HASHICORP_VAULT_SECRET_KEY = "db_hashicorp_vault_secret_key";
  @SerializedName(SERIALIZED_NAME_DB_HASHICORP_VAULT_SECRET_KEY)
  private String dbHashicorpVaultSecretKey;

  public static final String SERIALIZED_NAME_DB_AZURE_VAULT_NAME = "db_azure_vault_name";
  @SerializedName(SERIALIZED_NAME_DB_AZURE_VAULT_NAME)
  private String dbAzureVaultName;

  public static final String SERIALIZED_NAME_DB_AZURE_VAULT_USERNAME_KEY = "db_azure_vault_username_key";
  @SerializedName(SERIALIZED_NAME_DB_AZURE_VAULT_USERNAME_KEY)
  private String dbAzureVaultUsernameKey;

  public static final String SERIALIZED_NAME_DB_AZURE_VAULT_SECRET_KEY = "db_azure_vault_secret_key";
  @SerializedName(SERIALIZED_NAME_DB_AZURE_VAULT_SECRET_KEY)
  private String dbAzureVaultSecretKey;

  public static final String SERIALIZED_NAME_DB_CYBERARK_VAULT_QUERY_STRING = "db_cyberark_vault_query_string";
  @SerializedName(SERIALIZED_NAME_DB_CYBERARK_VAULT_QUERY_STRING)
  private String dbCyberarkVaultQueryString;

  public static final String SERIALIZED_NAME_STAGING_REPOSITORY = "staging_repository";
  @SerializedName(SERIALIZED_NAME_STAGING_REPOSITORY)
  private String stagingRepository;

  public static final String SERIALIZED_NAME_STAGING_HOST_USER = "staging_host_user";
  @SerializedName(SERIALIZED_NAME_STAGING_HOST_USER)
  private String stagingHostUser;

  /**
   * Information about the host OS user on the staging environment to use for linking.
   */
  @JsonAdapter(ValidatedSyncModeEnum.Adapter.class)
  public enum ValidatedSyncModeEnum {
    ENABLED("ENABLED"),
    
    DISABLED("DISABLED");

    private String value;

    ValidatedSyncModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ValidatedSyncModeEnum fromValue(String value) {
      for (ValidatedSyncModeEnum b : ValidatedSyncModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ValidatedSyncModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ValidatedSyncModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ValidatedSyncModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ValidatedSyncModeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VALIDATED_SYNC_MODE = "validated_sync_mode";
  @SerializedName(SERIALIZED_NAME_VALIDATED_SYNC_MODE)
  private ValidatedSyncModeEnum validatedSyncMode = ValidatedSyncModeEnum.ENABLED;

  public static final String SERIALIZED_NAME_DUMP_HISTORY_FILE_ENABLED = "dump_history_file_enabled";
  @SerializedName(SERIALIZED_NAME_DUMP_HISTORY_FILE_ENABLED)
  private Boolean dumpHistoryFileEnabled = false;

  public static final String SERIALIZED_NAME_DROP_AND_RECREATE_DEVICES = "drop_and_recreate_devices";
  @SerializedName(SERIALIZED_NAME_DROP_AND_RECREATE_DEVICES)
  private Boolean dropAndRecreateDevices = false;

  /**
   * Determines how the Delphix Engine will take a backup: * &#x60;latest_backup&#x60; - Use the most recent backup. * &#x60;new_backup&#x60; - Delphix will take a new backup of your source database. * &#x60;specific_backup&#x60; - Use a specific backup. Using this option requires setting &#x60;ase_backup_files&#x60;. Default is &#x60;new_backup&#x60;. 
   */
  @JsonAdapter(SyncStrategyEnum.Adapter.class)
  public enum SyncStrategyEnum {
    LATEST_BACKUP("latest_backup"),
    
    NEW_BACKUP("new_backup"),
    
    SPECIFIC_BACKUP("specific_backup");

    private String value;

    SyncStrategyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SyncStrategyEnum fromValue(String value) {
      for (SyncStrategyEnum b : SyncStrategyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SyncStrategyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SyncStrategyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SyncStrategyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SyncStrategyEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SYNC_STRATEGY = "sync_strategy";
  @SerializedName(SERIALIZED_NAME_SYNC_STRATEGY)
  private SyncStrategyEnum syncStrategy = SyncStrategyEnum.NEW_BACKUP;

  public static final String SERIALIZED_NAME_ASE_BACKUP_FILES = "ase_backup_files";
  @SerializedName(SERIALIZED_NAME_ASE_BACKUP_FILES)
  private List<String> aseBackupFiles = null;

  public static final String SERIALIZED_NAME_PRE_VALIDATED_SYNC = "pre_validated_sync";
  @SerializedName(SERIALIZED_NAME_PRE_VALIDATED_SYNC)
  private List<SourceOperation> preValidatedSync = null;

  public static final String SERIALIZED_NAME_POST_VALIDATED_SYNC = "post_validated_sync";
  @SerializedName(SERIALIZED_NAME_POST_VALIDATED_SYNC)
  private List<SourceOperation> postValidatedSync = null;


  public ASEDSourceLinkSourceParameters name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the dSource to be created.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the dSource to be created.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ASEDSourceLinkSourceParameters sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Id of the source to link.
   * @return sourceId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Id of the source to link.")

  public String getSourceId() {
    return sourceId;
  }


  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public ASEDSourceLinkSourceParameters groupId(String groupId) {
    
    this.groupId = groupId;
    return this;
  }

   /**
   * Id of the dataset group where this dSource should belong to.
   * @return groupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Id of the dataset group where this dSource should belong to.")

  public String getGroupId() {
    return groupId;
  }


  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }


  public ASEDSourceLinkSourceParameters description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The notes/description for the dSource.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The notes/description for the dSource.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ASEDSourceLinkSourceParameters logSyncEnabled(Boolean logSyncEnabled) {
    
    this.logSyncEnabled = logSyncEnabled;
    return this;
  }

   /**
   * True if LogSync should run for this database.
   * @return logSyncEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if LogSync should run for this database.")

  public Boolean getLogSyncEnabled() {
    return logSyncEnabled;
  }


  public void setLogSyncEnabled(Boolean logSyncEnabled) {
    this.logSyncEnabled = logSyncEnabled;
  }


  public ASEDSourceLinkSourceParameters externalFilePath(String externalFilePath) {
    
    this.externalFilePath = externalFilePath;
    return this;
  }

   /**
   * External file path.
   * @return externalFilePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "External file path.")

  public String getExternalFilePath() {
    return externalFilePath;
  }


  public void setExternalFilePath(String externalFilePath) {
    this.externalFilePath = externalFilePath;
  }


  public ASEDSourceLinkSourceParameters makeCurrentAccountOwner(Boolean makeCurrentAccountOwner) {
    
    this.makeCurrentAccountOwner = makeCurrentAccountOwner;
    return this;
  }

   /**
   * Whether the account creating this reporting schedule must be configured as owner of the reporting schedule.
   * @return makeCurrentAccountOwner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the account creating this reporting schedule must be configured as owner of the reporting schedule.")

  public Boolean getMakeCurrentAccountOwner() {
    return makeCurrentAccountOwner;
  }


  public void setMakeCurrentAccountOwner(Boolean makeCurrentAccountOwner) {
    this.makeCurrentAccountOwner = makeCurrentAccountOwner;
  }


  public ASEDSourceLinkSourceParameters tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public ASEDSourceLinkSourceParameters addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The tags to be created for dSource.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tags to be created for dSource.")

  public List<Tag> getTags() {
    return tags;
  }


  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  public ASEDSourceLinkSourceParameters opsPreSync(List<SourceOperation> opsPreSync) {
    
    this.opsPreSync = opsPreSync;
    return this;
  }

  public ASEDSourceLinkSourceParameters addOpsPreSyncItem(SourceOperation opsPreSyncItem) {
    if (this.opsPreSync == null) {
      this.opsPreSync = new ArrayList<SourceOperation>();
    }
    this.opsPreSync.add(opsPreSyncItem);
    return this;
  }

   /**
   * Operations to perform before syncing the created dSource. These operations can quiesce any data prior to syncing.
   * @return opsPreSync
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Operations to perform before syncing the created dSource. These operations can quiesce any data prior to syncing.")

  public List<SourceOperation> getOpsPreSync() {
    return opsPreSync;
  }


  public void setOpsPreSync(List<SourceOperation> opsPreSync) {
    this.opsPreSync = opsPreSync;
  }


  public ASEDSourceLinkSourceParameters opsPostSync(List<SourceOperation> opsPostSync) {
    
    this.opsPostSync = opsPostSync;
    return this;
  }

  public ASEDSourceLinkSourceParameters addOpsPostSyncItem(SourceOperation opsPostSyncItem) {
    if (this.opsPostSync == null) {
      this.opsPostSync = new ArrayList<SourceOperation>();
    }
    this.opsPostSync.add(opsPostSyncItem);
    return this;
  }

   /**
   * Operations to perform after syncing a created dSource.
   * @return opsPostSync
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Operations to perform after syncing a created dSource.")

  public List<SourceOperation> getOpsPostSync() {
    return opsPostSync;
  }


  public void setOpsPostSync(List<SourceOperation> opsPostSync) {
    this.opsPostSync = opsPostSync;
  }


  public ASEDSourceLinkSourceParameters mountBase(String mountBase) {
    
    this.mountBase = mountBase;
    return this;
  }

   /**
   * The base mount point to use for the NFS mounts.
   * @return mountBase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The base mount point to use for the NFS mounts.")

  public String getMountBase() {
    return mountBase;
  }


  public void setMountBase(String mountBase) {
    this.mountBase = mountBase;
  }


  public ASEDSourceLinkSourceParameters loadBackupPath(String loadBackupPath) {
    
    this.loadBackupPath = loadBackupPath;
    return this;
  }

   /**
   * Source database backup location.
   * @return loadBackupPath
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Source database backup location.")

  public String getLoadBackupPath() {
    return loadBackupPath;
  }


  public void setLoadBackupPath(String loadBackupPath) {
    this.loadBackupPath = loadBackupPath;
  }


  public ASEDSourceLinkSourceParameters backupServerName(String backupServerName) {
    
    this.backupServerName = backupServerName;
    return this;
  }

   /**
   * Name of the backup server instance.
   * @return backupServerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the backup server instance.")

  public String getBackupServerName() {
    return backupServerName;
  }


  public void setBackupServerName(String backupServerName) {
    this.backupServerName = backupServerName;
  }


  public ASEDSourceLinkSourceParameters backupHostUser(String backupHostUser) {
    
    this.backupHostUser = backupHostUser;
    return this;
  }

   /**
   * OS user for the host where the backup server is located.
   * @return backupHostUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "OS user for the host where the backup server is located.")

  public String getBackupHostUser() {
    return backupHostUser;
  }


  public void setBackupHostUser(String backupHostUser) {
    this.backupHostUser = backupHostUser;
  }


  public ASEDSourceLinkSourceParameters backupHost(String backupHost) {
    
    this.backupHost = backupHost;
    return this;
  }

   /**
   * Host environment where the backup server is located.
   * @return backupHost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Host environment where the backup server is located.")

  public String getBackupHost() {
    return backupHost;
  }


  public void setBackupHost(String backupHost) {
    this.backupHost = backupHost;
  }


  public ASEDSourceLinkSourceParameters dumpCredentials(String dumpCredentials) {
    
    this.dumpCredentials = dumpCredentials;
    return this;
  }

   /**
   * The password credential for the source DB user.
   * @return dumpCredentials
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The password credential for the source DB user.")

  public String getDumpCredentials() {
    return dumpCredentials;
  }


  public void setDumpCredentials(String dumpCredentials) {
    this.dumpCredentials = dumpCredentials;
  }


  public ASEDSourceLinkSourceParameters sourceHostUser(String sourceHostUser) {
    
    this.sourceHostUser = sourceHostUser;
    return this;
  }

   /**
   * ID or user reference of the host OS user to use for linking.
   * @return sourceHostUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID or user reference of the host OS user to use for linking.")

  public String getSourceHostUser() {
    return sourceHostUser;
  }


  public void setSourceHostUser(String sourceHostUser) {
    this.sourceHostUser = sourceHostUser;
  }


  public ASEDSourceLinkSourceParameters dbUser(String dbUser) {
    
    this.dbUser = dbUser;
    return this;
  }

   /**
   * The user name for the source DB user.
   * @return dbUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user name for the source DB user.")

  public String getDbUser() {
    return dbUser;
  }


  public void setDbUser(String dbUser) {
    this.dbUser = dbUser;
  }


  public ASEDSourceLinkSourceParameters dbPassword(String dbPassword) {
    
    this.dbPassword = dbPassword;
    return this;
  }

   /**
   * Password for the database user.
   * @return dbPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Password for the database user.")

  public String getDbPassword() {
    return dbPassword;
  }


  public void setDbPassword(String dbPassword) {
    this.dbPassword = dbPassword;
  }


  public ASEDSourceLinkSourceParameters dbVault(String dbVault) {
    
    this.dbVault = dbVault;
    return this;
  }

   /**
   * The name or reference of the vault from which to read the database credentials.
   * @return dbVault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name or reference of the vault from which to read the database credentials.")

  public String getDbVault() {
    return dbVault;
  }


  public void setDbVault(String dbVault) {
    this.dbVault = dbVault;
  }


  public ASEDSourceLinkSourceParameters dbHashicorpVaultEngine(String dbHashicorpVaultEngine) {
    
    this.dbHashicorpVaultEngine = dbHashicorpVaultEngine;
    return this;
  }

   /**
   * Vault engine name where the credential is stored.
   * @return dbHashicorpVaultEngine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Vault engine name where the credential is stored.")

  public String getDbHashicorpVaultEngine() {
    return dbHashicorpVaultEngine;
  }


  public void setDbHashicorpVaultEngine(String dbHashicorpVaultEngine) {
    this.dbHashicorpVaultEngine = dbHashicorpVaultEngine;
  }


  public ASEDSourceLinkSourceParameters dbHashicorpVaultSecretPath(String dbHashicorpVaultSecretPath) {
    
    this.dbHashicorpVaultSecretPath = dbHashicorpVaultSecretPath;
    return this;
  }

   /**
   * Path in the vault engine where the credential is stored.
   * @return dbHashicorpVaultSecretPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Path in the vault engine where the credential is stored.")

  public String getDbHashicorpVaultSecretPath() {
    return dbHashicorpVaultSecretPath;
  }


  public void setDbHashicorpVaultSecretPath(String dbHashicorpVaultSecretPath) {
    this.dbHashicorpVaultSecretPath = dbHashicorpVaultSecretPath;
  }


  public ASEDSourceLinkSourceParameters dbHashicorpVaultUsernameKey(String dbHashicorpVaultUsernameKey) {
    
    this.dbHashicorpVaultUsernameKey = dbHashicorpVaultUsernameKey;
    return this;
  }

   /**
   * Hashicorp vault key for the username in the key-value store.
   * @return dbHashicorpVaultUsernameKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Hashicorp vault key for the username in the key-value store.")

  public String getDbHashicorpVaultUsernameKey() {
    return dbHashicorpVaultUsernameKey;
  }


  public void setDbHashicorpVaultUsernameKey(String dbHashicorpVaultUsernameKey) {
    this.dbHashicorpVaultUsernameKey = dbHashicorpVaultUsernameKey;
  }


  public ASEDSourceLinkSourceParameters dbHashicorpVaultSecretKey(String dbHashicorpVaultSecretKey) {
    
    this.dbHashicorpVaultSecretKey = dbHashicorpVaultSecretKey;
    return this;
  }

   /**
   * Hashicorp vault key for the password in the key-value store.
   * @return dbHashicorpVaultSecretKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Hashicorp vault key for the password in the key-value store.")

  public String getDbHashicorpVaultSecretKey() {
    return dbHashicorpVaultSecretKey;
  }


  public void setDbHashicorpVaultSecretKey(String dbHashicorpVaultSecretKey) {
    this.dbHashicorpVaultSecretKey = dbHashicorpVaultSecretKey;
  }


  public ASEDSourceLinkSourceParameters dbAzureVaultName(String dbAzureVaultName) {
    
    this.dbAzureVaultName = dbAzureVaultName;
    return this;
  }

   /**
   * Azure key vault name.
   * @return dbAzureVaultName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Azure key vault name.")

  public String getDbAzureVaultName() {
    return dbAzureVaultName;
  }


  public void setDbAzureVaultName(String dbAzureVaultName) {
    this.dbAzureVaultName = dbAzureVaultName;
  }


  public ASEDSourceLinkSourceParameters dbAzureVaultUsernameKey(String dbAzureVaultUsernameKey) {
    
    this.dbAzureVaultUsernameKey = dbAzureVaultUsernameKey;
    return this;
  }

   /**
   * Azure vault key for the username in the key-value store.
   * @return dbAzureVaultUsernameKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Azure vault key for the username in the key-value store.")

  public String getDbAzureVaultUsernameKey() {
    return dbAzureVaultUsernameKey;
  }


  public void setDbAzureVaultUsernameKey(String dbAzureVaultUsernameKey) {
    this.dbAzureVaultUsernameKey = dbAzureVaultUsernameKey;
  }


  public ASEDSourceLinkSourceParameters dbAzureVaultSecretKey(String dbAzureVaultSecretKey) {
    
    this.dbAzureVaultSecretKey = dbAzureVaultSecretKey;
    return this;
  }

   /**
   * Azure vault key for the password in the key-value store.
   * @return dbAzureVaultSecretKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Azure vault key for the password in the key-value store.")

  public String getDbAzureVaultSecretKey() {
    return dbAzureVaultSecretKey;
  }


  public void setDbAzureVaultSecretKey(String dbAzureVaultSecretKey) {
    this.dbAzureVaultSecretKey = dbAzureVaultSecretKey;
  }


  public ASEDSourceLinkSourceParameters dbCyberarkVaultQueryString(String dbCyberarkVaultQueryString) {
    
    this.dbCyberarkVaultQueryString = dbCyberarkVaultQueryString;
    return this;
  }

   /**
   * Query to find a credential in the CyberArk vault.
   * @return dbCyberarkVaultQueryString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Query to find a credential in the CyberArk vault.")

  public String getDbCyberarkVaultQueryString() {
    return dbCyberarkVaultQueryString;
  }


  public void setDbCyberarkVaultQueryString(String dbCyberarkVaultQueryString) {
    this.dbCyberarkVaultQueryString = dbCyberarkVaultQueryString;
  }


  public ASEDSourceLinkSourceParameters stagingRepository(String stagingRepository) {
    
    this.stagingRepository = stagingRepository;
    return this;
  }

   /**
   * The SAP ASE instance on the staging environment that we want to use for validated sync.
   * @return stagingRepository
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The SAP ASE instance on the staging environment that we want to use for validated sync.")

  public String getStagingRepository() {
    return stagingRepository;
  }


  public void setStagingRepository(String stagingRepository) {
    this.stagingRepository = stagingRepository;
  }


  public ASEDSourceLinkSourceParameters stagingHostUser(String stagingHostUser) {
    
    this.stagingHostUser = stagingHostUser;
    return this;
  }

   /**
   * Information about the host OS user on the staging environment to use for linking.
   * @return stagingHostUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information about the host OS user on the staging environment to use for linking.")

  public String getStagingHostUser() {
    return stagingHostUser;
  }


  public void setStagingHostUser(String stagingHostUser) {
    this.stagingHostUser = stagingHostUser;
  }


  public ASEDSourceLinkSourceParameters validatedSyncMode(ValidatedSyncModeEnum validatedSyncMode) {
    
    this.validatedSyncMode = validatedSyncMode;
    return this;
  }

   /**
   * Information about the host OS user on the staging environment to use for linking.
   * @return validatedSyncMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information about the host OS user on the staging environment to use for linking.")

  public ValidatedSyncModeEnum getValidatedSyncMode() {
    return validatedSyncMode;
  }


  public void setValidatedSyncMode(ValidatedSyncModeEnum validatedSyncMode) {
    this.validatedSyncMode = validatedSyncMode;
  }


  public ASEDSourceLinkSourceParameters dumpHistoryFileEnabled(Boolean dumpHistoryFileEnabled) {
    
    this.dumpHistoryFileEnabled = dumpHistoryFileEnabled;
    return this;
  }

   /**
   * Specifies if Dump History File is enabled for backup history detection.
   * @return dumpHistoryFileEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies if Dump History File is enabled for backup history detection.")

  public Boolean getDumpHistoryFileEnabled() {
    return dumpHistoryFileEnabled;
  }


  public void setDumpHistoryFileEnabled(Boolean dumpHistoryFileEnabled) {
    this.dumpHistoryFileEnabled = dumpHistoryFileEnabled;
  }


  public ASEDSourceLinkSourceParameters dropAndRecreateDevices(Boolean dropAndRecreateDevices) {
    
    this.dropAndRecreateDevices = dropAndRecreateDevices;
    return this;
  }

   /**
   * If this parameter is set to true, it will drop the older devices and create new devices during manual sync operations instead of trying to remap the devices. This might increase the space utilization on Delphix Engine.
   * @return dropAndRecreateDevices
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this parameter is set to true, it will drop the older devices and create new devices during manual sync operations instead of trying to remap the devices. This might increase the space utilization on Delphix Engine.")

  public Boolean getDropAndRecreateDevices() {
    return dropAndRecreateDevices;
  }


  public void setDropAndRecreateDevices(Boolean dropAndRecreateDevices) {
    this.dropAndRecreateDevices = dropAndRecreateDevices;
  }


  public ASEDSourceLinkSourceParameters syncStrategy(SyncStrategyEnum syncStrategy) {
    
    this.syncStrategy = syncStrategy;
    return this;
  }

   /**
   * Determines how the Delphix Engine will take a backup: * &#x60;latest_backup&#x60; - Use the most recent backup. * &#x60;new_backup&#x60; - Delphix will take a new backup of your source database. * &#x60;specific_backup&#x60; - Use a specific backup. Using this option requires setting &#x60;ase_backup_files&#x60;. Default is &#x60;new_backup&#x60;. 
   * @return syncStrategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines how the Delphix Engine will take a backup: * `latest_backup` - Use the most recent backup. * `new_backup` - Delphix will take a new backup of your source database. * `specific_backup` - Use a specific backup. Using this option requires setting `ase_backup_files`. Default is `new_backup`. ")

  public SyncStrategyEnum getSyncStrategy() {
    return syncStrategy;
  }


  public void setSyncStrategy(SyncStrategyEnum syncStrategy) {
    this.syncStrategy = syncStrategy;
  }


  public ASEDSourceLinkSourceParameters aseBackupFiles(List<String> aseBackupFiles) {
    
    this.aseBackupFiles = aseBackupFiles;
    return this;
  }

  public ASEDSourceLinkSourceParameters addAseBackupFilesItem(String aseBackupFilesItem) {
    if (this.aseBackupFiles == null) {
      this.aseBackupFiles = new ArrayList<String>();
    }
    this.aseBackupFiles.add(aseBackupFilesItem);
    return this;
  }

   /**
   * The location of the full backup of the source database to restore from. The backup should be present in the shared backup location for the source database.
   * @return aseBackupFiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The location of the full backup of the source database to restore from. The backup should be present in the shared backup location for the source database.")

  public List<String> getAseBackupFiles() {
    return aseBackupFiles;
  }


  public void setAseBackupFiles(List<String> aseBackupFiles) {
    this.aseBackupFiles = aseBackupFiles;
  }


  public ASEDSourceLinkSourceParameters preValidatedSync(List<SourceOperation> preValidatedSync) {
    
    this.preValidatedSync = preValidatedSync;
    return this;
  }

  public ASEDSourceLinkSourceParameters addPreValidatedSyncItem(SourceOperation preValidatedSyncItem) {
    if (this.preValidatedSync == null) {
      this.preValidatedSync = new ArrayList<SourceOperation>();
    }
    this.preValidatedSync.add(preValidatedSyncItem);
    return this;
  }

   /**
   * Operations to perform on the staging source before performing a validated sync.
   * @return preValidatedSync
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Operations to perform on the staging source before performing a validated sync.")

  public List<SourceOperation> getPreValidatedSync() {
    return preValidatedSync;
  }


  public void setPreValidatedSync(List<SourceOperation> preValidatedSync) {
    this.preValidatedSync = preValidatedSync;
  }


  public ASEDSourceLinkSourceParameters postValidatedSync(List<SourceOperation> postValidatedSync) {
    
    this.postValidatedSync = postValidatedSync;
    return this;
  }

  public ASEDSourceLinkSourceParameters addPostValidatedSyncItem(SourceOperation postValidatedSyncItem) {
    if (this.postValidatedSync == null) {
      this.postValidatedSync = new ArrayList<SourceOperation>();
    }
    this.postValidatedSync.add(postValidatedSyncItem);
    return this;
  }

   /**
   * Operations to perform on the staging source after performing a validated sync.
   * @return postValidatedSync
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Operations to perform on the staging source after performing a validated sync.")

  public List<SourceOperation> getPostValidatedSync() {
    return postValidatedSync;
  }


  public void setPostValidatedSync(List<SourceOperation> postValidatedSync) {
    this.postValidatedSync = postValidatedSync;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ASEDSourceLinkSourceParameters asEDSourceLinkSourceParameters = (ASEDSourceLinkSourceParameters) o;
    return Objects.equals(this.name, asEDSourceLinkSourceParameters.name) &&
        Objects.equals(this.sourceId, asEDSourceLinkSourceParameters.sourceId) &&
        Objects.equals(this.groupId, asEDSourceLinkSourceParameters.groupId) &&
        Objects.equals(this.description, asEDSourceLinkSourceParameters.description) &&
        Objects.equals(this.logSyncEnabled, asEDSourceLinkSourceParameters.logSyncEnabled) &&
        Objects.equals(this.externalFilePath, asEDSourceLinkSourceParameters.externalFilePath) &&
        Objects.equals(this.makeCurrentAccountOwner, asEDSourceLinkSourceParameters.makeCurrentAccountOwner) &&
        Objects.equals(this.tags, asEDSourceLinkSourceParameters.tags) &&
        Objects.equals(this.opsPreSync, asEDSourceLinkSourceParameters.opsPreSync) &&
        Objects.equals(this.opsPostSync, asEDSourceLinkSourceParameters.opsPostSync) &&
        Objects.equals(this.mountBase, asEDSourceLinkSourceParameters.mountBase) &&
        Objects.equals(this.loadBackupPath, asEDSourceLinkSourceParameters.loadBackupPath) &&
        Objects.equals(this.backupServerName, asEDSourceLinkSourceParameters.backupServerName) &&
        Objects.equals(this.backupHostUser, asEDSourceLinkSourceParameters.backupHostUser) &&
        Objects.equals(this.backupHost, asEDSourceLinkSourceParameters.backupHost) &&
        Objects.equals(this.dumpCredentials, asEDSourceLinkSourceParameters.dumpCredentials) &&
        Objects.equals(this.sourceHostUser, asEDSourceLinkSourceParameters.sourceHostUser) &&
        Objects.equals(this.dbUser, asEDSourceLinkSourceParameters.dbUser) &&
        Objects.equals(this.dbPassword, asEDSourceLinkSourceParameters.dbPassword) &&
        Objects.equals(this.dbVault, asEDSourceLinkSourceParameters.dbVault) &&
        Objects.equals(this.dbHashicorpVaultEngine, asEDSourceLinkSourceParameters.dbHashicorpVaultEngine) &&
        Objects.equals(this.dbHashicorpVaultSecretPath, asEDSourceLinkSourceParameters.dbHashicorpVaultSecretPath) &&
        Objects.equals(this.dbHashicorpVaultUsernameKey, asEDSourceLinkSourceParameters.dbHashicorpVaultUsernameKey) &&
        Objects.equals(this.dbHashicorpVaultSecretKey, asEDSourceLinkSourceParameters.dbHashicorpVaultSecretKey) &&
        Objects.equals(this.dbAzureVaultName, asEDSourceLinkSourceParameters.dbAzureVaultName) &&
        Objects.equals(this.dbAzureVaultUsernameKey, asEDSourceLinkSourceParameters.dbAzureVaultUsernameKey) &&
        Objects.equals(this.dbAzureVaultSecretKey, asEDSourceLinkSourceParameters.dbAzureVaultSecretKey) &&
        Objects.equals(this.dbCyberarkVaultQueryString, asEDSourceLinkSourceParameters.dbCyberarkVaultQueryString) &&
        Objects.equals(this.stagingRepository, asEDSourceLinkSourceParameters.stagingRepository) &&
        Objects.equals(this.stagingHostUser, asEDSourceLinkSourceParameters.stagingHostUser) &&
        Objects.equals(this.validatedSyncMode, asEDSourceLinkSourceParameters.validatedSyncMode) &&
        Objects.equals(this.dumpHistoryFileEnabled, asEDSourceLinkSourceParameters.dumpHistoryFileEnabled) &&
        Objects.equals(this.dropAndRecreateDevices, asEDSourceLinkSourceParameters.dropAndRecreateDevices) &&
        Objects.equals(this.syncStrategy, asEDSourceLinkSourceParameters.syncStrategy) &&
        Objects.equals(this.aseBackupFiles, asEDSourceLinkSourceParameters.aseBackupFiles) &&
        Objects.equals(this.preValidatedSync, asEDSourceLinkSourceParameters.preValidatedSync) &&
        Objects.equals(this.postValidatedSync, asEDSourceLinkSourceParameters.postValidatedSync);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, sourceId, groupId, description, logSyncEnabled, externalFilePath, makeCurrentAccountOwner, tags, opsPreSync, opsPostSync, mountBase, loadBackupPath, backupServerName, backupHostUser, backupHost, dumpCredentials, sourceHostUser, dbUser, dbPassword, dbVault, dbHashicorpVaultEngine, dbHashicorpVaultSecretPath, dbHashicorpVaultUsernameKey, dbHashicorpVaultSecretKey, dbAzureVaultName, dbAzureVaultUsernameKey, dbAzureVaultSecretKey, dbCyberarkVaultQueryString, stagingRepository, stagingHostUser, validatedSyncMode, dumpHistoryFileEnabled, dropAndRecreateDevices, syncStrategy, aseBackupFiles, preValidatedSync, postValidatedSync);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ASEDSourceLinkSourceParameters {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    logSyncEnabled: ").append(toIndentedString(logSyncEnabled)).append("\n");
    sb.append("    externalFilePath: ").append(toIndentedString(externalFilePath)).append("\n");
    sb.append("    makeCurrentAccountOwner: ").append(toIndentedString(makeCurrentAccountOwner)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    opsPreSync: ").append(toIndentedString(opsPreSync)).append("\n");
    sb.append("    opsPostSync: ").append(toIndentedString(opsPostSync)).append("\n");
    sb.append("    mountBase: ").append(toIndentedString(mountBase)).append("\n");
    sb.append("    loadBackupPath: ").append(toIndentedString(loadBackupPath)).append("\n");
    sb.append("    backupServerName: ").append(toIndentedString(backupServerName)).append("\n");
    sb.append("    backupHostUser: ").append(toIndentedString(backupHostUser)).append("\n");
    sb.append("    backupHost: ").append(toIndentedString(backupHost)).append("\n");
    sb.append("    dumpCredentials: ").append(toIndentedString(dumpCredentials)).append("\n");
    sb.append("    sourceHostUser: ").append(toIndentedString(sourceHostUser)).append("\n");
    sb.append("    dbUser: ").append(toIndentedString(dbUser)).append("\n");
    sb.append("    dbPassword: ").append(toIndentedString(dbPassword)).append("\n");
    sb.append("    dbVault: ").append(toIndentedString(dbVault)).append("\n");
    sb.append("    dbHashicorpVaultEngine: ").append(toIndentedString(dbHashicorpVaultEngine)).append("\n");
    sb.append("    dbHashicorpVaultSecretPath: ").append(toIndentedString(dbHashicorpVaultSecretPath)).append("\n");
    sb.append("    dbHashicorpVaultUsernameKey: ").append(toIndentedString(dbHashicorpVaultUsernameKey)).append("\n");
    sb.append("    dbHashicorpVaultSecretKey: ").append(toIndentedString(dbHashicorpVaultSecretKey)).append("\n");
    sb.append("    dbAzureVaultName: ").append(toIndentedString(dbAzureVaultName)).append("\n");
    sb.append("    dbAzureVaultUsernameKey: ").append(toIndentedString(dbAzureVaultUsernameKey)).append("\n");
    sb.append("    dbAzureVaultSecretKey: ").append(toIndentedString(dbAzureVaultSecretKey)).append("\n");
    sb.append("    dbCyberarkVaultQueryString: ").append(toIndentedString(dbCyberarkVaultQueryString)).append("\n");
    sb.append("    stagingRepository: ").append(toIndentedString(stagingRepository)).append("\n");
    sb.append("    stagingHostUser: ").append(toIndentedString(stagingHostUser)).append("\n");
    sb.append("    validatedSyncMode: ").append(toIndentedString(validatedSyncMode)).append("\n");
    sb.append("    dumpHistoryFileEnabled: ").append(toIndentedString(dumpHistoryFileEnabled)).append("\n");
    sb.append("    dropAndRecreateDevices: ").append(toIndentedString(dropAndRecreateDevices)).append("\n");
    sb.append("    syncStrategy: ").append(toIndentedString(syncStrategy)).append("\n");
    sb.append("    aseBackupFiles: ").append(toIndentedString(aseBackupFiles)).append("\n");
    sb.append("    preValidatedSync: ").append(toIndentedString(preValidatedSync)).append("\n");
    sb.append("    postValidatedSync: ").append(toIndentedString(postValidatedSync)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

