/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Parameters to test JDBC connectivity to source configs.
 */
@ApiModel(description = "Parameters to test JDBC connectivity to source configs.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T18:53:50.335381+05:30[Asia/Kolkata]")
public class DatabaseConnectivityCheckParameters {
  /**
   * The type of credentials.
   */
  @JsonAdapter(CredentialsTypeEnum.Adapter.class)
  public enum CredentialsTypeEnum {
    MSSQL_ENVIRONMENT_USER("MSSQL_ENVIRONMENT_USER"),
    
    MSSQL_DOMAIN_USER("MSSQL_DOMAIN_USER"),
    
    MSSQL_DATABASE_USER("MSSQL_DATABASE_USER"),
    
    ORACLE("ORACLE"),
    
    ASE("ASE"),
    
    SOURCE_CONFIG("SOURCE_CONFIG");

    private String value;

    CredentialsTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CredentialsTypeEnum fromValue(String value) {
      for (CredentialsTypeEnum b : CredentialsTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CredentialsTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CredentialsTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CredentialsTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CredentialsTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CREDENTIALS_TYPE = "credentials_type";
  @SerializedName(SERIALIZED_NAME_CREDENTIALS_TYPE)
  private CredentialsTypeEnum credentialsType;

  public static final String SERIALIZED_NAME_SOURCE_ID = "source_id";
  @SerializedName(SERIALIZED_NAME_SOURCE_ID)
  private String sourceId;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_VAULT = "vault";
  @SerializedName(SERIALIZED_NAME_VAULT)
  private String vault;

  public static final String SERIALIZED_NAME_HASHICORP_VAULT_ENGINE = "hashicorp_vault_engine";
  @SerializedName(SERIALIZED_NAME_HASHICORP_VAULT_ENGINE)
  private String hashicorpVaultEngine;

  public static final String SERIALIZED_NAME_HASHICORP_VAULT_SECRET_PATH = "hashicorp_vault_secret_path";
  @SerializedName(SERIALIZED_NAME_HASHICORP_VAULT_SECRET_PATH)
  private String hashicorpVaultSecretPath;

  public static final String SERIALIZED_NAME_HASHICORP_VAULT_USERNAME_KEY = "hashicorp_vault_username_key";
  @SerializedName(SERIALIZED_NAME_HASHICORP_VAULT_USERNAME_KEY)
  private String hashicorpVaultUsernameKey;

  public static final String SERIALIZED_NAME_HASHICORP_VAULT_SECRET_KEY = "hashicorp_vault_secret_key";
  @SerializedName(SERIALIZED_NAME_HASHICORP_VAULT_SECRET_KEY)
  private String hashicorpVaultSecretKey;

  public static final String SERIALIZED_NAME_AZURE_VAULT_NAME = "azure_vault_name";
  @SerializedName(SERIALIZED_NAME_AZURE_VAULT_NAME)
  private String azureVaultName;

  public static final String SERIALIZED_NAME_AZURE_VAULT_USERNAME_KEY = "azure_vault_username_key";
  @SerializedName(SERIALIZED_NAME_AZURE_VAULT_USERNAME_KEY)
  private String azureVaultUsernameKey;

  public static final String SERIALIZED_NAME_AZURE_VAULT_SECRET_KEY = "azure_vault_secret_key";
  @SerializedName(SERIALIZED_NAME_AZURE_VAULT_SECRET_KEY)
  private String azureVaultSecretKey;

  public static final String SERIALIZED_NAME_CYBERARK_VAULT_QUERY_STRING = "cyberark_vault_query_string";
  @SerializedName(SERIALIZED_NAME_CYBERARK_VAULT_QUERY_STRING)
  private String cyberarkVaultQueryString;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "environment_id";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private String environmentId;

  public static final String SERIALIZED_NAME_ENVIRONMENT_USER = "environment_user";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_USER)
  private String environmentUser;


  public DatabaseConnectivityCheckParameters credentialsType(CredentialsTypeEnum credentialsType) {
    
    this.credentialsType = credentialsType;
    return this;
  }

   /**
   * The type of credentials.
   * @return credentialsType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of credentials.")

  public CredentialsTypeEnum getCredentialsType() {
    return credentialsType;
  }


  public void setCredentialsType(CredentialsTypeEnum credentialsType) {
    this.credentialsType = credentialsType;
  }


  public DatabaseConnectivityCheckParameters sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Source database config Id.
   * @return sourceId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1-SOURCE-CONFIG-1", required = true, value = "Source database config Id.")

  public String getSourceId() {
    return sourceId;
  }


  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public DatabaseConnectivityCheckParameters username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Database username (Not applicable for MSSQL_ENVIRONMENT_USER).
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "username", value = "Database username (Not applicable for MSSQL_ENVIRONMENT_USER).")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  public DatabaseConnectivityCheckParameters password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Database password (Not applicable for MSSQL_ENVIRONMENT_USER and mutually exclusive with vault attributes).
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "password", value = "Database password (Not applicable for MSSQL_ENVIRONMENT_USER and mutually exclusive with vault attributes).")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public DatabaseConnectivityCheckParameters vault(String vault) {
    
    this.vault = vault;
    return this;
  }

   /**
   * The name or reference of the vault from which to read the database credentials (ORACLE, ASE and MSSQL_DOMAIN_USER only).
   * @return vault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "my-vault", value = "The name or reference of the vault from which to read the database credentials (ORACLE, ASE and MSSQL_DOMAIN_USER only).")

  public String getVault() {
    return vault;
  }


  public void setVault(String vault) {
    this.vault = vault;
  }


  public DatabaseConnectivityCheckParameters hashicorpVaultEngine(String hashicorpVaultEngine) {
    
    this.hashicorpVaultEngine = hashicorpVaultEngine;
    return this;
  }

   /**
   * Vault engine name where the credential is stored (ORACLE, ASE and MSSQL_DOMAIN_USER only).
   * @return hashicorpVaultEngine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "kv", value = "Vault engine name where the credential is stored (ORACLE, ASE and MSSQL_DOMAIN_USER only).")

  public String getHashicorpVaultEngine() {
    return hashicorpVaultEngine;
  }


  public void setHashicorpVaultEngine(String hashicorpVaultEngine) {
    this.hashicorpVaultEngine = hashicorpVaultEngine;
  }


  public DatabaseConnectivityCheckParameters hashicorpVaultSecretPath(String hashicorpVaultSecretPath) {
    
    this.hashicorpVaultSecretPath = hashicorpVaultSecretPath;
    return this;
  }

   /**
   * Path in the vault engine where the credential is stored (ORACLE, ASE and MSSQL_DOMAIN_USER only).
   * @return hashicorpVaultSecretPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "oracle-env", value = "Path in the vault engine where the credential is stored (ORACLE, ASE and MSSQL_DOMAIN_USER only).")

  public String getHashicorpVaultSecretPath() {
    return hashicorpVaultSecretPath;
  }


  public void setHashicorpVaultSecretPath(String hashicorpVaultSecretPath) {
    this.hashicorpVaultSecretPath = hashicorpVaultSecretPath;
  }


  public DatabaseConnectivityCheckParameters hashicorpVaultUsernameKey(String hashicorpVaultUsernameKey) {
    
    this.hashicorpVaultUsernameKey = hashicorpVaultUsernameKey;
    return this;
  }

   /**
   * Hashicorp vault key for the username in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
   * @return hashicorpVaultUsernameKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "username", value = "Hashicorp vault key for the username in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).")

  public String getHashicorpVaultUsernameKey() {
    return hashicorpVaultUsernameKey;
  }


  public void setHashicorpVaultUsernameKey(String hashicorpVaultUsernameKey) {
    this.hashicorpVaultUsernameKey = hashicorpVaultUsernameKey;
  }


  public DatabaseConnectivityCheckParameters hashicorpVaultSecretKey(String hashicorpVaultSecretKey) {
    
    this.hashicorpVaultSecretKey = hashicorpVaultSecretKey;
    return this;
  }

   /**
   * Hashicorp vault key for the password in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
   * @return hashicorpVaultSecretKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "secret", value = "Hashicorp vault key for the password in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).")

  public String getHashicorpVaultSecretKey() {
    return hashicorpVaultSecretKey;
  }


  public void setHashicorpVaultSecretKey(String hashicorpVaultSecretKey) {
    this.hashicorpVaultSecretKey = hashicorpVaultSecretKey;
  }


  public DatabaseConnectivityCheckParameters azureVaultName(String azureVaultName) {
    
    this.azureVaultName = azureVaultName;
    return this;
  }

   /**
   * Azure key vault name (ORACLE, ASE and MSSQL_DOMAIN_USER only).
   * @return azureVaultName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "azure_vault", value = "Azure key vault name (ORACLE, ASE and MSSQL_DOMAIN_USER only).")

  public String getAzureVaultName() {
    return azureVaultName;
  }


  public void setAzureVaultName(String azureVaultName) {
    this.azureVaultName = azureVaultName;
  }


  public DatabaseConnectivityCheckParameters azureVaultUsernameKey(String azureVaultUsernameKey) {
    
    this.azureVaultUsernameKey = azureVaultUsernameKey;
    return this;
  }

   /**
   * Azure vault key for the username in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
   * @return azureVaultUsernameKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "username", value = "Azure vault key for the username in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).")

  public String getAzureVaultUsernameKey() {
    return azureVaultUsernameKey;
  }


  public void setAzureVaultUsernameKey(String azureVaultUsernameKey) {
    this.azureVaultUsernameKey = azureVaultUsernameKey;
  }


  public DatabaseConnectivityCheckParameters azureVaultSecretKey(String azureVaultSecretKey) {
    
    this.azureVaultSecretKey = azureVaultSecretKey;
    return this;
  }

   /**
   * Azure vault key for the password in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
   * @return azureVaultSecretKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "secret", value = "Azure vault key for the password in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).")

  public String getAzureVaultSecretKey() {
    return azureVaultSecretKey;
  }


  public void setAzureVaultSecretKey(String azureVaultSecretKey) {
    this.azureVaultSecretKey = azureVaultSecretKey;
  }


  public DatabaseConnectivityCheckParameters cyberarkVaultQueryString(String cyberarkVaultQueryString) {
    
    this.cyberarkVaultQueryString = cyberarkVaultQueryString;
    return this;
  }

   /**
   * Query to find a credential in the CyberArk vault (ORACLE, ASE and MSSQL_DOMAIN_USER only).
   * @return cyberarkVaultQueryString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Safe=Test;Folder=Test;Object=Test", value = "Query to find a credential in the CyberArk vault (ORACLE, ASE and MSSQL_DOMAIN_USER only).")

  public String getCyberarkVaultQueryString() {
    return cyberarkVaultQueryString;
  }


  public void setCyberarkVaultQueryString(String cyberarkVaultQueryString) {
    this.cyberarkVaultQueryString = cyberarkVaultQueryString;
  }


  public DatabaseConnectivityCheckParameters environmentId(String environmentId) {
    
    this.environmentId = environmentId;
    return this;
  }

   /**
   * Id of the environment to which environment user belongs (MSSQL_ENVIRONMENT_USER only).
   * @return environmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Id of the environment to which environment user belongs (MSSQL_ENVIRONMENT_USER only).")

  public String getEnvironmentId() {
    return environmentId;
  }


  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  public DatabaseConnectivityCheckParameters environmentUser(String environmentUser) {
    
    this.environmentUser = environmentUser;
    return this;
  }

   /**
   * Reference to the environment user (MSSQL_ENVIRONMENT_USER only).
   * @return environmentUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reference to the environment user (MSSQL_ENVIRONMENT_USER only).")

  public String getEnvironmentUser() {
    return environmentUser;
  }


  public void setEnvironmentUser(String environmentUser) {
    this.environmentUser = environmentUser;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatabaseConnectivityCheckParameters databaseConnectivityCheckParameters = (DatabaseConnectivityCheckParameters) o;
    return Objects.equals(this.credentialsType, databaseConnectivityCheckParameters.credentialsType) &&
        Objects.equals(this.sourceId, databaseConnectivityCheckParameters.sourceId) &&
        Objects.equals(this.username, databaseConnectivityCheckParameters.username) &&
        Objects.equals(this.password, databaseConnectivityCheckParameters.password) &&
        Objects.equals(this.vault, databaseConnectivityCheckParameters.vault) &&
        Objects.equals(this.hashicorpVaultEngine, databaseConnectivityCheckParameters.hashicorpVaultEngine) &&
        Objects.equals(this.hashicorpVaultSecretPath, databaseConnectivityCheckParameters.hashicorpVaultSecretPath) &&
        Objects.equals(this.hashicorpVaultUsernameKey, databaseConnectivityCheckParameters.hashicorpVaultUsernameKey) &&
        Objects.equals(this.hashicorpVaultSecretKey, databaseConnectivityCheckParameters.hashicorpVaultSecretKey) &&
        Objects.equals(this.azureVaultName, databaseConnectivityCheckParameters.azureVaultName) &&
        Objects.equals(this.azureVaultUsernameKey, databaseConnectivityCheckParameters.azureVaultUsernameKey) &&
        Objects.equals(this.azureVaultSecretKey, databaseConnectivityCheckParameters.azureVaultSecretKey) &&
        Objects.equals(this.cyberarkVaultQueryString, databaseConnectivityCheckParameters.cyberarkVaultQueryString) &&
        Objects.equals(this.environmentId, databaseConnectivityCheckParameters.environmentId) &&
        Objects.equals(this.environmentUser, databaseConnectivityCheckParameters.environmentUser);
  }

  @Override
  public int hashCode() {
    return Objects.hash(credentialsType, sourceId, username, password, vault, hashicorpVaultEngine, hashicorpVaultSecretPath, hashicorpVaultUsernameKey, hashicorpVaultSecretKey, azureVaultName, azureVaultUsernameKey, azureVaultSecretKey, cyberarkVaultQueryString, environmentId, environmentUser);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatabaseConnectivityCheckParameters {\n");
    sb.append("    credentialsType: ").append(toIndentedString(credentialsType)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    vault: ").append(toIndentedString(vault)).append("\n");
    sb.append("    hashicorpVaultEngine: ").append(toIndentedString(hashicorpVaultEngine)).append("\n");
    sb.append("    hashicorpVaultSecretPath: ").append(toIndentedString(hashicorpVaultSecretPath)).append("\n");
    sb.append("    hashicorpVaultUsernameKey: ").append(toIndentedString(hashicorpVaultUsernameKey)).append("\n");
    sb.append("    hashicorpVaultSecretKey: ").append(toIndentedString(hashicorpVaultSecretKey)).append("\n");
    sb.append("    azureVaultName: ").append(toIndentedString(azureVaultName)).append("\n");
    sb.append("    azureVaultUsernameKey: ").append(toIndentedString(azureVaultUsernameKey)).append("\n");
    sb.append("    azureVaultSecretKey: ").append(toIndentedString(azureVaultSecretKey)).append("\n");
    sb.append("    cyberarkVaultQueryString: ").append(toIndentedString(cyberarkVaultQueryString)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    environmentUser: ").append(toIndentedString(environmentUser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

