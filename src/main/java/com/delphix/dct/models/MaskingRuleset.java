/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * A masking ruleset.
 */
@ApiModel(description = "A masking ruleset.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T17:08:49.349376+05:30[Asia/Kolkata]")
public class MaskingRuleset {
  /**
   * The Ruleset type.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    FILE("FILE"),
    
    DATABASE("DATABASE"),
    
    MAINFRAME_DATASET("MAINFRAME_DATASET");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REFRESH_DROPS_TABLES = "refresh_drops_tables";
  @SerializedName(SERIALIZED_NAME_REFRESH_DROPS_TABLES)
  private Boolean refreshDropsTables;

  public static final String SERIALIZED_NAME_ALGORITHMS = "algorithms";
  @SerializedName(SERIALIZED_NAME_ALGORITHMS)
  private List<String> algorithms = null;


  public MaskingRuleset type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The Ruleset type.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Ruleset type.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public MaskingRuleset name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of this Ruleset.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of this Ruleset.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public MaskingRuleset refreshDropsTables(Boolean refreshDropsTables) {
    
    this.refreshDropsTables = refreshDropsTables;
    return this;
  }

   /**
   * Whether refresh drops tables. Only applicable to database ruleset type.
   * @return refreshDropsTables
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether refresh drops tables. Only applicable to database ruleset type.")

  public Boolean getRefreshDropsTables() {
    return refreshDropsTables;
  }


  public void setRefreshDropsTables(Boolean refreshDropsTables) {
    this.refreshDropsTables = refreshDropsTables;
  }


  public MaskingRuleset algorithms(List<String> algorithms) {
    
    this.algorithms = algorithms;
    return this;
  }

  public MaskingRuleset addAlgorithmsItem(String algorithmsItem) {
    if (this.algorithms == null) {
      this.algorithms = new ArrayList<String>();
    }
    this.algorithms.add(algorithmsItem);
    return this;
  }

   /**
   * The list of algorithms for this Ruleset.
   * @return algorithms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of algorithms for this Ruleset.")

  public List<String> getAlgorithms() {
    return algorithms;
  }


  public void setAlgorithms(List<String> algorithms) {
    this.algorithms = algorithms;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MaskingRuleset maskingRuleset = (MaskingRuleset) o;
    return Objects.equals(this.type, maskingRuleset.type) &&
        Objects.equals(this.name, maskingRuleset.name) &&
        Objects.equals(this.refreshDropsTables, maskingRuleset.refreshDropsTables) &&
        Objects.equals(this.algorithms, maskingRuleset.algorithms);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name, refreshDropsTables, algorithms);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MaskingRuleset {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    refreshDropsTables: ").append(toIndentedString(refreshDropsTables)).append("\n");
    sb.append("    algorithms: ").append(toIndentedString(algorithms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

