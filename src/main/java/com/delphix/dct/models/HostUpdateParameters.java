/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.OracleVirtualIP;
import com.delphix.dct.models.SSHVerificationStrategy;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * HostUpdateParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T18:53:50.335381+05:30[Asia/Kolkata]")
public class HostUpdateParameters {
  public static final String SERIALIZED_NAME_HOSTNAME = "hostname";
  @SerializedName(SERIALIZED_NAME_HOSTNAME)
  private String hostname;

  public static final String SERIALIZED_NAME_ORACLE_CLUSTER_NODE_NAME = "oracle_cluster_node_name";
  @SerializedName(SERIALIZED_NAME_ORACLE_CLUSTER_NODE_NAME)
  private String oracleClusterNodeName;

  public static final String SERIALIZED_NAME_ORACLE_CLUSTER_NODE_ENABLED = "oracle_cluster_node_enabled";
  @SerializedName(SERIALIZED_NAME_ORACLE_CLUSTER_NODE_ENABLED)
  private Boolean oracleClusterNodeEnabled;

  public static final String SERIALIZED_NAME_ORACLE_CLUSTER_NODE_VIRTUAL_IPS = "oracle_cluster_node_virtual_ips";
  @SerializedName(SERIALIZED_NAME_ORACLE_CLUSTER_NODE_VIRTUAL_IPS)
  private List<OracleVirtualIP> oracleClusterNodeVirtualIps = null;

  public static final String SERIALIZED_NAME_NFS_ADDRESSES = "nfs_addresses";
  @SerializedName(SERIALIZED_NAME_NFS_ADDRESSES)
  private List<String> nfsAddresses = null;

  public static final String SERIALIZED_NAME_SSH_PORT = "ssh_port";
  @SerializedName(SERIALIZED_NAME_SSH_PORT)
  private Long sshPort;

  public static final String SERIALIZED_NAME_TOOLKIT_PATH = "toolkit_path";
  @SerializedName(SERIALIZED_NAME_TOOLKIT_PATH)
  private String toolkitPath;

  public static final String SERIALIZED_NAME_JAVA_HOME = "java_home";
  @SerializedName(SERIALIZED_NAME_JAVA_HOME)
  private String javaHome;

  public static final String SERIALIZED_NAME_DSP_KEYSTORE_PATH = "dsp_keystore_path";
  @SerializedName(SERIALIZED_NAME_DSP_KEYSTORE_PATH)
  private String dspKeystorePath;

  public static final String SERIALIZED_NAME_DSP_KEYSTORE_PASSWORD = "dsp_keystore_password";
  @SerializedName(SERIALIZED_NAME_DSP_KEYSTORE_PASSWORD)
  private String dspKeystorePassword;

  public static final String SERIALIZED_NAME_DSP_KEYSTORE_ALIAS = "dsp_keystore_alias";
  @SerializedName(SERIALIZED_NAME_DSP_KEYSTORE_ALIAS)
  private String dspKeystoreAlias;

  public static final String SERIALIZED_NAME_DSP_TRUSTSTORE_PATH = "dsp_truststore_path";
  @SerializedName(SERIALIZED_NAME_DSP_TRUSTSTORE_PATH)
  private String dspTruststorePath;

  public static final String SERIALIZED_NAME_DSP_TRUSTSTORE_PASSWORD = "dsp_truststore_password";
  @SerializedName(SERIALIZED_NAME_DSP_TRUSTSTORE_PASSWORD)
  private String dspTruststorePassword;

  public static final String SERIALIZED_NAME_CONNECTOR_PORT = "connector_port";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_PORT)
  private Integer connectorPort;

  public static final String SERIALIZED_NAME_ORACLE_JDBC_KEYSTORE_PASSWORD = "oracle_jdbc_keystore_password";
  @SerializedName(SERIALIZED_NAME_ORACLE_JDBC_KEYSTORE_PASSWORD)
  private String oracleJdbcKeystorePassword;

  public static final String SERIALIZED_NAME_ORACLE_TDE_KEYSTORES_ROOT_PATH = "oracle_tde_keystores_root_path";
  @SerializedName(SERIALIZED_NAME_ORACLE_TDE_KEYSTORES_ROOT_PATH)
  private String oracleTdeKeystoresRootPath;

  public static final String SERIALIZED_NAME_SSH_VERIFICATION_STRATEGY = "ssh_verification_strategy";
  @SerializedName(SERIALIZED_NAME_SSH_VERIFICATION_STRATEGY)
  private SSHVerificationStrategy sshVerificationStrategy;

  public static final String SERIALIZED_NAME_CONNECTOR_AUTHENTICATION_KEY = "connector_authentication_key";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_AUTHENTICATION_KEY)
  private String connectorAuthenticationKey;


  public HostUpdateParameters hostname(String hostname) {
    
    this.hostname = hostname;
    return this;
  }

   /**
   * host address of the machine.
   * @return hostname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "db.host.com", value = "host address of the machine.")

  public String getHostname() {
    return hostname;
  }


  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public HostUpdateParameters oracleClusterNodeName(String oracleClusterNodeName) {
    
    this.oracleClusterNodeName = oracleClusterNodeName;
    return this;
  }

   /**
   * The name of the associated OracleClusterNode.
   * @return oracleClusterNodeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "my-favorite-cluster-node", value = "The name of the associated OracleClusterNode.")

  public String getOracleClusterNodeName() {
    return oracleClusterNodeName;
  }


  public void setOracleClusterNodeName(String oracleClusterNodeName) {
    this.oracleClusterNodeName = oracleClusterNodeName;
  }


  public HostUpdateParameters oracleClusterNodeEnabled(Boolean oracleClusterNodeEnabled) {
    
    this.oracleClusterNodeEnabled = oracleClusterNodeEnabled;
    return this;
  }

   /**
   * Whether the associated OracleClusterNode is enabled.
   * @return oracleClusterNodeEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether the associated OracleClusterNode is enabled.")

  public Boolean getOracleClusterNodeEnabled() {
    return oracleClusterNodeEnabled;
  }


  public void setOracleClusterNodeEnabled(Boolean oracleClusterNodeEnabled) {
    this.oracleClusterNodeEnabled = oracleClusterNodeEnabled;
  }


  public HostUpdateParameters oracleClusterNodeVirtualIps(List<OracleVirtualIP> oracleClusterNodeVirtualIps) {
    
    this.oracleClusterNodeVirtualIps = oracleClusterNodeVirtualIps;
    return this;
  }

  public HostUpdateParameters addOracleClusterNodeVirtualIpsItem(OracleVirtualIP oracleClusterNodeVirtualIpsItem) {
    if (this.oracleClusterNodeVirtualIps == null) {
      this.oracleClusterNodeVirtualIps = new ArrayList<OracleVirtualIP>();
    }
    this.oracleClusterNodeVirtualIps.add(oracleClusterNodeVirtualIpsItem);
    return this;
  }

   /**
   * The Virtual IP addresses associated with the OracleClusterNode.
   * @return oracleClusterNodeVirtualIps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Virtual IP addresses associated with the OracleClusterNode.")

  public List<OracleVirtualIP> getOracleClusterNodeVirtualIps() {
    return oracleClusterNodeVirtualIps;
  }


  public void setOracleClusterNodeVirtualIps(List<OracleVirtualIP> oracleClusterNodeVirtualIps) {
    this.oracleClusterNodeVirtualIps = oracleClusterNodeVirtualIps;
  }


  public HostUpdateParameters nfsAddresses(List<String> nfsAddresses) {
    
    this.nfsAddresses = nfsAddresses;
    return this;
  }

  public HostUpdateParameters addNfsAddressesItem(String nfsAddressesItem) {
    if (this.nfsAddresses == null) {
      this.nfsAddresses = new ArrayList<String>();
    }
    this.nfsAddresses.add(nfsAddressesItem);
    return this;
  }

   /**
   * array of ip addresses or hostnames
   * @return nfsAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"192.168.10.2\"]", value = "array of ip addresses or hostnames")

  public List<String> getNfsAddresses() {
    return nfsAddresses;
  }


  public void setNfsAddresses(List<String> nfsAddresses) {
    this.nfsAddresses = nfsAddresses;
  }


  public HostUpdateParameters sshPort(Long sshPort) {
    
    this.sshPort = sshPort;
    return this;
  }

   /**
   * ssh port of the host.
   * minimum: 1
   * maximum: 65535
   * @return sshPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "22", value = "ssh port of the host.")

  public Long getSshPort() {
    return sshPort;
  }


  public void setSshPort(Long sshPort) {
    this.sshPort = sshPort;
  }


  public HostUpdateParameters toolkitPath(String toolkitPath) {
    
    this.toolkitPath = toolkitPath;
    return this;
  }

   /**
   * The path for the toolkit that resides on the host.
   * @return toolkitPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/work", value = "The path for the toolkit that resides on the host.")

  public String getToolkitPath() {
    return toolkitPath;
  }


  public void setToolkitPath(String toolkitPath) {
    this.toolkitPath = toolkitPath;
  }


  public HostUpdateParameters javaHome(String javaHome) {
    
    this.javaHome = javaHome;
    return this;
  }

   /**
   * The path to the user managed Java Development Kit (JDK). If not specified, then the OpenJDK will be used.
   * @return javaHome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/Library/Java/JavaVirtualMachines/jdk/Contents/Home", value = "The path to the user managed Java Development Kit (JDK). If not specified, then the OpenJDK will be used.")

  public String getJavaHome() {
    return javaHome;
  }


  public void setJavaHome(String javaHome) {
    this.javaHome = javaHome;
  }


  public HostUpdateParameters dspKeystorePath(String dspKeystorePath) {
    
    this.dspKeystorePath = dspKeystorePath;
    return this;
  }

   /**
   * DSP keystore path.
   * @return dspKeystorePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/tmp/keystore.keystore", value = "DSP keystore path.")

  public String getDspKeystorePath() {
    return dspKeystorePath;
  }


  public void setDspKeystorePath(String dspKeystorePath) {
    this.dspKeystorePath = dspKeystorePath;
  }


  public HostUpdateParameters dspKeystorePassword(String dspKeystorePassword) {
    
    this.dspKeystorePassword = dspKeystorePassword;
    return this;
  }

   /**
   * DSP keystore password.
   * @return dspKeystorePassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "temp123", value = "DSP keystore password.")

  public String getDspKeystorePassword() {
    return dspKeystorePassword;
  }


  public void setDspKeystorePassword(String dspKeystorePassword) {
    this.dspKeystorePassword = dspKeystorePassword;
  }


  public HostUpdateParameters dspKeystoreAlias(String dspKeystoreAlias) {
    
    this.dspKeystoreAlias = dspKeystoreAlias;
    return this;
  }

   /**
   * DSP keystore alias.
   * @return dspKeystoreAlias
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "oracle-src", value = "DSP keystore alias.")

  public String getDspKeystoreAlias() {
    return dspKeystoreAlias;
  }


  public void setDspKeystoreAlias(String dspKeystoreAlias) {
    this.dspKeystoreAlias = dspKeystoreAlias;
  }


  public HostUpdateParameters dspTruststorePath(String dspTruststorePath) {
    
    this.dspTruststorePath = dspTruststorePath;
    return this;
  }

   /**
   * DSP truststore path.
   * @return dspTruststorePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/tmp/truststore.keystore", value = "DSP truststore path.")

  public String getDspTruststorePath() {
    return dspTruststorePath;
  }


  public void setDspTruststorePath(String dspTruststorePath) {
    this.dspTruststorePath = dspTruststorePath;
  }


  public HostUpdateParameters dspTruststorePassword(String dspTruststorePassword) {
    
    this.dspTruststorePassword = dspTruststorePassword;
    return this;
  }

   /**
   * DSP truststore password.
   * @return dspTruststorePassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "truststore123", value = "DSP truststore password.")

  public String getDspTruststorePassword() {
    return dspTruststorePassword;
  }


  public void setDspTruststorePassword(String dspTruststorePassword) {
    this.dspTruststorePassword = dspTruststorePassword;
  }


  public HostUpdateParameters connectorPort(Integer connectorPort) {
    
    this.connectorPort = connectorPort;
    return this;
  }

   /**
   * Specify port on which Delphix connector will run.
   * minimum: 1
   * maximum: 65535
   * @return connectorPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9100", value = "Specify port on which Delphix connector will run.")

  public Integer getConnectorPort() {
    return connectorPort;
  }


  public void setConnectorPort(Integer connectorPort) {
    this.connectorPort = connectorPort;
  }


  public HostUpdateParameters oracleJdbcKeystorePassword(String oracleJdbcKeystorePassword) {
    
    this.oracleJdbcKeystorePassword = oracleJdbcKeystorePassword;
    return this;
  }

   /**
   * The password for the user managed Oracle JDBC keystore.
   * @return oracleJdbcKeystorePassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The password for the user managed Oracle JDBC keystore.")

  public String getOracleJdbcKeystorePassword() {
    return oracleJdbcKeystorePassword;
  }


  public void setOracleJdbcKeystorePassword(String oracleJdbcKeystorePassword) {
    this.oracleJdbcKeystorePassword = oracleJdbcKeystorePassword;
  }


  public HostUpdateParameters oracleTdeKeystoresRootPath(String oracleTdeKeystoresRootPath) {
    
    this.oracleTdeKeystoresRootPath = oracleTdeKeystoresRootPath;
    return this;
  }

   /**
   * The path to the root of the Oracle TDE keystores artifact directories.
   * @return oracleTdeKeystoresRootPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to the root of the Oracle TDE keystores artifact directories.")

  public String getOracleTdeKeystoresRootPath() {
    return oracleTdeKeystoresRootPath;
  }


  public void setOracleTdeKeystoresRootPath(String oracleTdeKeystoresRootPath) {
    this.oracleTdeKeystoresRootPath = oracleTdeKeystoresRootPath;
  }


  public HostUpdateParameters sshVerificationStrategy(SSHVerificationStrategy sshVerificationStrategy) {
    
    this.sshVerificationStrategy = sshVerificationStrategy;
    return this;
  }

   /**
   * Get sshVerificationStrategy
   * @return sshVerificationStrategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SSHVerificationStrategy getSshVerificationStrategy() {
    return sshVerificationStrategy;
  }


  public void setSshVerificationStrategy(SSHVerificationStrategy sshVerificationStrategy) {
    this.sshVerificationStrategy = sshVerificationStrategy;
  }


  public HostUpdateParameters connectorAuthenticationKey(String connectorAuthenticationKey) {
    
    this.connectorAuthenticationKey = connectorAuthenticationKey;
    return this;
  }

   /**
   * Unique per Delphix key used to authenticate with the remote Delphix Connector.
   * @return connectorAuthenticationKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "secret", value = "Unique per Delphix key used to authenticate with the remote Delphix Connector.")

  public String getConnectorAuthenticationKey() {
    return connectorAuthenticationKey;
  }


  public void setConnectorAuthenticationKey(String connectorAuthenticationKey) {
    this.connectorAuthenticationKey = connectorAuthenticationKey;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HostUpdateParameters hostUpdateParameters = (HostUpdateParameters) o;
    return Objects.equals(this.hostname, hostUpdateParameters.hostname) &&
        Objects.equals(this.oracleClusterNodeName, hostUpdateParameters.oracleClusterNodeName) &&
        Objects.equals(this.oracleClusterNodeEnabled, hostUpdateParameters.oracleClusterNodeEnabled) &&
        Objects.equals(this.oracleClusterNodeVirtualIps, hostUpdateParameters.oracleClusterNodeVirtualIps) &&
        Objects.equals(this.nfsAddresses, hostUpdateParameters.nfsAddresses) &&
        Objects.equals(this.sshPort, hostUpdateParameters.sshPort) &&
        Objects.equals(this.toolkitPath, hostUpdateParameters.toolkitPath) &&
        Objects.equals(this.javaHome, hostUpdateParameters.javaHome) &&
        Objects.equals(this.dspKeystorePath, hostUpdateParameters.dspKeystorePath) &&
        Objects.equals(this.dspKeystorePassword, hostUpdateParameters.dspKeystorePassword) &&
        Objects.equals(this.dspKeystoreAlias, hostUpdateParameters.dspKeystoreAlias) &&
        Objects.equals(this.dspTruststorePath, hostUpdateParameters.dspTruststorePath) &&
        Objects.equals(this.dspTruststorePassword, hostUpdateParameters.dspTruststorePassword) &&
        Objects.equals(this.connectorPort, hostUpdateParameters.connectorPort) &&
        Objects.equals(this.oracleJdbcKeystorePassword, hostUpdateParameters.oracleJdbcKeystorePassword) &&
        Objects.equals(this.oracleTdeKeystoresRootPath, hostUpdateParameters.oracleTdeKeystoresRootPath) &&
        Objects.equals(this.sshVerificationStrategy, hostUpdateParameters.sshVerificationStrategy) &&
        Objects.equals(this.connectorAuthenticationKey, hostUpdateParameters.connectorAuthenticationKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostname, oracleClusterNodeName, oracleClusterNodeEnabled, oracleClusterNodeVirtualIps, nfsAddresses, sshPort, toolkitPath, javaHome, dspKeystorePath, dspKeystorePassword, dspKeystoreAlias, dspTruststorePath, dspTruststorePassword, connectorPort, oracleJdbcKeystorePassword, oracleTdeKeystoresRootPath, sshVerificationStrategy, connectorAuthenticationKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HostUpdateParameters {\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    oracleClusterNodeName: ").append(toIndentedString(oracleClusterNodeName)).append("\n");
    sb.append("    oracleClusterNodeEnabled: ").append(toIndentedString(oracleClusterNodeEnabled)).append("\n");
    sb.append("    oracleClusterNodeVirtualIps: ").append(toIndentedString(oracleClusterNodeVirtualIps)).append("\n");
    sb.append("    nfsAddresses: ").append(toIndentedString(nfsAddresses)).append("\n");
    sb.append("    sshPort: ").append(toIndentedString(sshPort)).append("\n");
    sb.append("    toolkitPath: ").append(toIndentedString(toolkitPath)).append("\n");
    sb.append("    javaHome: ").append(toIndentedString(javaHome)).append("\n");
    sb.append("    dspKeystorePath: ").append(toIndentedString(dspKeystorePath)).append("\n");
    sb.append("    dspKeystorePassword: ").append(toIndentedString(dspKeystorePassword)).append("\n");
    sb.append("    dspKeystoreAlias: ").append(toIndentedString(dspKeystoreAlias)).append("\n");
    sb.append("    dspTruststorePath: ").append(toIndentedString(dspTruststorePath)).append("\n");
    sb.append("    dspTruststorePassword: ").append(toIndentedString(dspTruststorePassword)).append("\n");
    sb.append("    connectorPort: ").append(toIndentedString(connectorPort)).append("\n");
    sb.append("    oracleJdbcKeystorePassword: ").append(toIndentedString(oracleJdbcKeystorePassword)).append("\n");
    sb.append("    oracleTdeKeystoresRootPath: ").append(toIndentedString(oracleTdeKeystoresRootPath)).append("\n");
    sb.append("    sshVerificationStrategy: ").append(toIndentedString(sshVerificationStrategy)).append("\n");
    sb.append("    connectorAuthenticationKey: ").append(toIndentedString(connectorAuthenticationKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

