/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

/**
 * ReportingScheduleCreateParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T17:08:49.349376+05:30[Asia/Kolkata]")
public class ReportingScheduleCreateParameters {
  /**
   * Gets or Sets reportType
   */
  @JsonAdapter(ReportTypeEnum.Adapter.class)
  public enum ReportTypeEnum {
    VIRTUALIZATION_STORAGE_SUMMARY("VIRTUALIZATION_STORAGE_SUMMARY"),
    
    VDB_INVENTORY_DATA("VDB_INVENTORY_DATA"),
    
    DSOURCE_USAGE_DATA("DSOURCE_USAGE_DATA"),
    
    DSOURCE_CONSUMPTION_DATA("DSOURCE_CONSUMPTION_DATA");

    private String value;

    ReportTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReportTypeEnum fromValue(String value) {
      for (ReportTypeEnum b : ReportTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ReportTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReportTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReportTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ReportTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_REPORT_TYPE = "report_type";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE)
  private ReportTypeEnum reportType;

  public static final String SERIALIZED_NAME_CRON_EXPRESSION = "cron_expression";
  @SerializedName(SERIALIZED_NAME_CRON_EXPRESSION)
  private String cronExpression;

  public static final String SERIALIZED_NAME_TIME_ZONE = "time_zone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  /**
   * Gets or Sets fileFormat
   */
  @JsonAdapter(FileFormatEnum.Adapter.class)
  public enum FileFormatEnum {
    CSV("CSV");

    private String value;

    FileFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FileFormatEnum fromValue(String value) {
      for (FileFormatEnum b : FileFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FileFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FileFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FileFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FileFormatEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FILE_FORMAT = "file_format";
  @SerializedName(SERIALIZED_NAME_FILE_FORMAT)
  private FileFormatEnum fileFormat;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled = true;

  public static final String SERIALIZED_NAME_RECIPIENTS = "recipients";
  @SerializedName(SERIALIZED_NAME_RECIPIENTS)
  private Set<String> recipients = new LinkedHashSet<String>();

  /**
   * Gets or Sets sortColumn
   */
  @JsonAdapter(SortColumnEnum.Adapter.class)
  public enum SortColumnEnum {
    ENGINE_ID("engine_id"),
    
    ENGINE_NAME("engine_name"),
    
    ENGINE_HOSTNAME("engine_hostname"),
    
    TOTAL_CAPACITY("total_capacity"),
    
    FREE_STORAGE("free_storage"),
    
    USED_STORAGE("used_storage"),
    
    USED_PERCENTAGE("used_percentage"),
    
    DSOURCE_COUNT("dsource_count"),
    
    VDB_COUNT("vdb_count"),
    
    TOTAL_OBJECT_COUNT("total_object_count"),
    
    NAME("name"),
    
    UNVIRTUALIZED_SPACE("unvirtualized_space"),
    
    ACTUAL_SPACE("actual_space"),
    
    DEPENDANT_VDBS("dependant_vdbs"),
    
    TYPE("type"),
    
    VERSION("version"),
    
    PARENT_ID("parent_id"),
    
    PARENT_NAME("parent_name"),
    
    CREATION_DATE("creation_date"),
    
    PARENT_TIMEFLOW_LOCATION("parent_timeflow_location"),
    
    PARENT_TIMEFLOW_TIMESTAMP("parent_timeflow_timestamp"),
    
    PARENT_TIMEFLOW_TIMEZONE("parent_timeflow_timezone"),
    
    ENABLED("enabled"),
    
    STATUS("status"),
    
    _ENGINE_ID("-engine_id"),
    
    _ENGINE_NAME("-engine_name"),
    
    _ENGINE_HOSTNAME("-engine_hostname"),
    
    _TOTAL_CAPACITY("-total_capacity"),
    
    _FREE_STORAGE("-free_storage"),
    
    _USED_STORAGE("-used_storage"),
    
    _USED_PERCENTAGE("-used_percentage"),
    
    _DSOURCE_COUNT("-dsource_count"),
    
    _VDB_COUNT("-vdb_count"),
    
    _TOTAL_OBJECT_COUNT("-total_object_count"),
    
    _UNVIRTUALIZED_SPACE("-unvirtualized_space"),
    
    _ACTUAL_SPACE("-actual_space"),
    
    _DEPENDANT_VDBS("-dependant_vdbs"),
    
    _NAME("-name"),
    
    _TYPE("-type"),
    
    _VERSION("-version"),
    
    _PARENT_ID("-parent_id"),
    
    _PARENT_NAME("-parent_name"),
    
    _CREATION_DATE("-creation_date"),
    
    _PARENT_TIMEFLOW_LOCATION("-parent_timeflow_location"),
    
    _PARENT_TIMEFLOW_TIMESTAMP("-parent_timeflow_timestamp"),
    
    _PARENT_TIMEFLOW_TIMEZONE("-parent_timeflow_timezone"),
    
    _ENABLED("-enabled"),
    
    _STATUS("-status");

    private String value;

    SortColumnEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SortColumnEnum fromValue(String value) {
      for (SortColumnEnum b : SortColumnEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SortColumnEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SortColumnEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SortColumnEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SortColumnEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SORT_COLUMN = "sort_column";
  @SerializedName(SERIALIZED_NAME_SORT_COLUMN)
  private SortColumnEnum sortColumn;

  public static final String SERIALIZED_NAME_ROW_COUNT = "row_count";
  @SerializedName(SERIALIZED_NAME_ROW_COUNT)
  private Integer rowCount;

  public static final String SERIALIZED_NAME_MAKE_CURRENT_ACCOUNT_OWNER = "make_current_account_owner";
  @SerializedName(SERIALIZED_NAME_MAKE_CURRENT_ACCOUNT_OWNER)
  private Boolean makeCurrentAccountOwner = true;


  public ReportingScheduleCreateParameters reportType(ReportTypeEnum reportType) {
    
    this.reportType = reportType;
    return this;
  }

   /**
   * Get reportType
   * @return reportType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "VIRTUALIZATION_STORAGE_SUMMARY", required = true, value = "")

  public ReportTypeEnum getReportType() {
    return reportType;
  }


  public void setReportType(ReportTypeEnum reportType) {
    this.reportType = reportType;
  }


  public ReportingScheduleCreateParameters cronExpression(String cronExpression) {
    
    this.cronExpression = cronExpression;
    return this;
  }

   /**
   * Standard cron expressions are supported e.g. 0 15 10 L * ?  - Schedule at 10:15 AM on the last day of every month, 0 0 2 ? * Mon-Fri - Schedule at 2:00 AM every Monday, Tuesday, Wednesday, Thursday and Friday. For more details kindly refer- \&quot;http://www.quartz-scheduler.org/documentation/\&quot;
   * @return cronExpression
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "0 0 2 ? * Mon-Fri", required = true, value = "Standard cron expressions are supported e.g. 0 15 10 L * ?  - Schedule at 10:15 AM on the last day of every month, 0 0 2 ? * Mon-Fri - Schedule at 2:00 AM every Monday, Tuesday, Wednesday, Thursday and Friday. For more details kindly refer- \"http://www.quartz-scheduler.org/documentation/\"")

  public String getCronExpression() {
    return cronExpression;
  }


  public void setCronExpression(String cronExpression) {
    this.cronExpression = cronExpression;
  }


  public ReportingScheduleCreateParameters timeZone(String timeZone) {
    
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Timezones are specified according to the Olson tzinfo database - \&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\&quot;.
   * @return timeZone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "America/Los_Angeles", value = "Timezones are specified according to the Olson tzinfo database - \"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\".")

  public String getTimeZone() {
    return timeZone;
  }


  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }


  public ReportingScheduleCreateParameters message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "sample message", value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public ReportingScheduleCreateParameters fileFormat(FileFormatEnum fileFormat) {
    
    this.fileFormat = fileFormat;
    return this;
  }

   /**
   * Get fileFormat
   * @return fileFormat
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "CSV", required = true, value = "")

  public FileFormatEnum getFileFormat() {
    return fileFormat;
  }


  public void setFileFormat(FileFormatEnum fileFormat) {
    this.fileFormat = fileFormat;
  }


  public ReportingScheduleCreateParameters enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ReportingScheduleCreateParameters recipients(Set<String> recipients) {
    
    this.recipients = recipients;
    return this;
  }

  public ReportingScheduleCreateParameters addRecipientsItem(String recipientsItem) {
    this.recipients.add(recipientsItem);
    return this;
  }

   /**
   * Get recipients
   * @return recipients
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Set<String> getRecipients() {
    return recipients;
  }


  public void setRecipients(Set<String> recipients) {
    this.recipients = recipients;
  }


  public ReportingScheduleCreateParameters sortColumn(SortColumnEnum sortColumn) {
    
    this.sortColumn = sortColumn;
    return this;
  }

   /**
   * Get sortColumn
   * @return sortColumn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "engine_name", value = "")

  public SortColumnEnum getSortColumn() {
    return sortColumn;
  }


  public void setSortColumn(SortColumnEnum sortColumn) {
    this.sortColumn = sortColumn;
  }


  public ReportingScheduleCreateParameters rowCount(Integer rowCount) {
    
    this.rowCount = rowCount;
    return this;
  }

   /**
   * Get rowCount
   * minimum: 1
   * @return rowCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getRowCount() {
    return rowCount;
  }


  public void setRowCount(Integer rowCount) {
    this.rowCount = rowCount;
  }


  public ReportingScheduleCreateParameters makeCurrentAccountOwner(Boolean makeCurrentAccountOwner) {
    
    this.makeCurrentAccountOwner = makeCurrentAccountOwner;
    return this;
  }

   /**
   * Whether the account creating this reporting schedule must be configured as owner of the reporting schedule.
   * @return makeCurrentAccountOwner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the account creating this reporting schedule must be configured as owner of the reporting schedule.")

  public Boolean getMakeCurrentAccountOwner() {
    return makeCurrentAccountOwner;
  }


  public void setMakeCurrentAccountOwner(Boolean makeCurrentAccountOwner) {
    this.makeCurrentAccountOwner = makeCurrentAccountOwner;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportingScheduleCreateParameters reportingScheduleCreateParameters = (ReportingScheduleCreateParameters) o;
    return Objects.equals(this.reportType, reportingScheduleCreateParameters.reportType) &&
        Objects.equals(this.cronExpression, reportingScheduleCreateParameters.cronExpression) &&
        Objects.equals(this.timeZone, reportingScheduleCreateParameters.timeZone) &&
        Objects.equals(this.message, reportingScheduleCreateParameters.message) &&
        Objects.equals(this.fileFormat, reportingScheduleCreateParameters.fileFormat) &&
        Objects.equals(this.enabled, reportingScheduleCreateParameters.enabled) &&
        Objects.equals(this.recipients, reportingScheduleCreateParameters.recipients) &&
        Objects.equals(this.sortColumn, reportingScheduleCreateParameters.sortColumn) &&
        Objects.equals(this.rowCount, reportingScheduleCreateParameters.rowCount) &&
        Objects.equals(this.makeCurrentAccountOwner, reportingScheduleCreateParameters.makeCurrentAccountOwner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportType, cronExpression, timeZone, message, fileFormat, enabled, recipients, sortColumn, rowCount, makeCurrentAccountOwner);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportingScheduleCreateParameters {\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    cronExpression: ").append(toIndentedString(cronExpression)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    fileFormat: ").append(toIndentedString(fileFormat)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    sortColumn: ").append(toIndentedString(sortColumn)).append("\n");
    sb.append("    rowCount: ").append(toIndentedString(rowCount)).append("\n");
    sb.append("    makeCurrentAccountOwner: ").append(toIndentedString(makeCurrentAccountOwner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

