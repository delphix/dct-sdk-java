/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

/**
 * A Permission object.
 */
@ApiModel(description = "A Permission object.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T18:53:50.335381+05:30[Asia/Kolkata]")
public class PermissionProperty {
  /**
   * Gets or Sets permissions
   */
  @JsonAdapter(PermissionsEnum.Adapter.class)
  public enum PermissionsEnum {
    CREATE("CREATE"),
    
    READ("READ"),
    
    UPDATE("UPDATE"),
    
    DELETE("DELETE"),
    
    EXECUTE("EXECUTE"),
    
    CANCEL("CANCEL"),
    
    MIGRATE("MIGRATE"),
    
    REFRESH("REFRESH"),
    
    DISABLE("DISABLE"),
    
    ENABLE("ENABLE"),
    
    ABANDON("ABANDON"),
    
    VALIDATE("VALIDATE"),
    
    START("START"),
    
    STOP("STOP"),
    
    SNAPSHOT("SNAPSHOT"),
    
    COPY("COPY"),
    
    REMOVE_JOB("REMOVE_JOB"),
    
    PASSWORD_RESET("PASSWORD_RESET"),
    
    UNDO_IMPORT("UNDO_IMPORT"),
    
    IMPORT("IMPORT"),
    
    PROVISION_FROM_BOOKMARK("PROVISION_FROM_BOOKMARK"),
    
    PROVISION("PROVISION"),
    
    REFRESH_FROM_BOOKMARK("REFRESH_FROM_BOOKMARK"),
    
    REFRESH_FROM_SNAPSHOT("REFRESH_FROM_SNAPSHOT"),
    
    REFRESH_FROM_TIMESTAMP("REFRESH_FROM_TIMESTAMP"),
    
    CREATE_ENVIRONMENT("CREATE_ENVIRONMENT"),
    
    CREATE_BOOKMARK("CREATE_BOOKMARK"),
    
    CREATE_VDBGROUP("CREATE_VDBGROUP"),
    
    MANAGE_TAGS("MANAGE_TAGS"),
    
    SET_TAGS_AT_OBJECT_CREATION("SET_TAGS_AT_OBJECT_CREATION"),
    
    SNAPSHOT_UPDATE("SNAPSHOT_UPDATE"),
    
    SNAPSHOT_DELETE("SNAPSHOT_DELETE"),
    
    SWITCH_TIMEFLOW("SWITCH_TIMEFLOW"),
    
    UPDATE_TIMEFLOW("UPDATE_TIMEFLOW"),
    
    DELETE_TIMEFLOW("DELETE_TIMEFLOW"),
    
    LINK("LINK");

    private String value;

    PermissionsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PermissionsEnum fromValue(String value) {
      for (PermissionsEnum b : PermissionsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PermissionsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PermissionsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PermissionsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PermissionsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PERMISSIONS = "permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private Set<PermissionsEnum> permissions = new LinkedHashSet<PermissionsEnum>();


  public PermissionProperty permissions(Set<PermissionsEnum> permissions) {
    
    this.permissions = permissions;
    return this;
  }

  public PermissionProperty addPermissionsItem(PermissionsEnum permissionsItem) {
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * List of permissions.
   * @return permissions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of permissions.")

  public Set<PermissionsEnum> getPermissions() {
    return permissions;
  }


  public void setPermissions(Set<PermissionsEnum> permissions) {
    this.permissions = permissions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PermissionProperty permissionProperty = (PermissionProperty) o;
    return Objects.equals(this.permissions, permissionProperty.permissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(permissions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PermissionProperty {\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

