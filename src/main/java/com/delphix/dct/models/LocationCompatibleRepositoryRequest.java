/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LocationCompatibleRepositoryRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T17:08:49.349376+05:30[Asia/Kolkata]")
public class LocationCompatibleRepositoryRequest {
  public static final String SERIALIZED_NAME_SOURCE_DATA_ID = "source_data_id";
  @SerializedName(SERIALIZED_NAME_SOURCE_DATA_ID)
  private String sourceDataId;

  public static final String SERIALIZED_NAME_ENGINE_ID = "engine_id";
  @SerializedName(SERIALIZED_NAME_ENGINE_ID)
  private String engineId;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_TIMEFLOW_ID = "timeflow_id";
  @SerializedName(SERIALIZED_NAME_TIMEFLOW_ID)
  private String timeflowId;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "environment_id";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private String environmentId;


  public LocationCompatibleRepositoryRequest sourceDataId(String sourceDataId) {
    
    this.sourceDataId = sourceDataId;
    return this;
  }

   /**
   * The ID of the source object (dSource or VDB) to get the compatible repos. All other objects referenced by the parameters must live on the same engine as the source.
   * @return sourceDataId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "source-123", value = "The ID of the source object (dSource or VDB) to get the compatible repos. All other objects referenced by the parameters must live on the same engine as the source.")

  public String getSourceDataId() {
    return sourceDataId;
  }


  public void setSourceDataId(String sourceDataId) {
    this.sourceDataId = sourceDataId;
  }


  public LocationCompatibleRepositoryRequest engineId(String engineId) {
    
    this.engineId = engineId;
    return this;
  }

   /**
   * The ID of the Engine from where to get the compatible repos. If the source ID unambiguously identifies a source object, this parameter is unnecessary and ignored.
   * @return engineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "engine-123", value = "The ID of the Engine from where to get the compatible repos. If the source ID unambiguously identifies a source object, this parameter is unnecessary and ignored.")

  public String getEngineId() {
    return engineId;
  }


  public void setEngineId(String engineId) {
    this.engineId = engineId;
  }


  public LocationCompatibleRepositoryRequest location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * location from where compatible repo to be fetched.
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "location from where compatible repo to be fetched.")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    this.location = location;
  }


  public LocationCompatibleRepositoryRequest timeflowId(String timeflowId) {
    
    this.timeflowId = timeflowId;
    return this;
  }

   /**
   * ID of the timeflow from which compatible repos need to be fetched.
   * @return timeflowId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "timeflow_123", value = "ID of the timeflow from which compatible repos need to be fetched.")

  public String getTimeflowId() {
    return timeflowId;
  }


  public void setTimeflowId(String timeflowId) {
    this.timeflowId = timeflowId;
  }


  public LocationCompatibleRepositoryRequest environmentId(String environmentId) {
    
    this.environmentId = environmentId;
    return this;
  }

   /**
   * The ID or name of the target environment.
   * @return environmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1-UNIX_HOST_ENVIRONMENT-1", value = "The ID or name of the target environment.")

  public String getEnvironmentId() {
    return environmentId;
  }


  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationCompatibleRepositoryRequest locationCompatibleRepositoryRequest = (LocationCompatibleRepositoryRequest) o;
    return Objects.equals(this.sourceDataId, locationCompatibleRepositoryRequest.sourceDataId) &&
        Objects.equals(this.engineId, locationCompatibleRepositoryRequest.engineId) &&
        Objects.equals(this.location, locationCompatibleRepositoryRequest.location) &&
        Objects.equals(this.timeflowId, locationCompatibleRepositoryRequest.timeflowId) &&
        Objects.equals(this.environmentId, locationCompatibleRepositoryRequest.environmentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceDataId, engineId, location, timeflowId, environmentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationCompatibleRepositoryRequest {\n");
    sb.append("    sourceDataId: ").append(toIndentedString(sourceDataId)).append("\n");
    sb.append("    engineId: ").append(toIndentedString(engineId)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    timeflowId: ").append(toIndentedString(timeflowId)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

