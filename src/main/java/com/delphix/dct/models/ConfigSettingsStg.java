/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Custom Database-Level config settings.
 */
@ApiModel(description = "Custom Database-Level config settings.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T17:08:49.349376+05:30[Asia/Kolkata]")
public class ConfigSettingsStg {
  public static final String SERIALIZED_NAME_PROPERTY_NAME = "property_name";
  @SerializedName(SERIALIZED_NAME_PROPERTY_NAME)
  private String propertyName;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public static final String SERIALIZED_NAME_COMMENT_PROPERTY = "comment_property";
  @SerializedName(SERIALIZED_NAME_COMMENT_PROPERTY)
  private Boolean commentProperty;


  public ConfigSettingsStg propertyName(String propertyName) {
    
    this.propertyName = propertyName;
    return this;
  }

   /**
   * Name of the property.
   * @return propertyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the property.")

  public String getPropertyName() {
    return propertyName;
  }


  public void setPropertyName(String propertyName) {
    this.propertyName = propertyName;
  }


  public ConfigSettingsStg value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * Value of the property.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Value of the property.")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  public ConfigSettingsStg commentProperty(Boolean commentProperty) {
    
    this.commentProperty = commentProperty;
    return this;
  }

   /**
   * Select this option to comment out the provided property name in the configuration file.
   * @return commentProperty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Select this option to comment out the provided property name in the configuration file.")

  public Boolean getCommentProperty() {
    return commentProperty;
  }


  public void setCommentProperty(Boolean commentProperty) {
    this.commentProperty = commentProperty;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigSettingsStg configSettingsStg = (ConfigSettingsStg) o;
    return Objects.equals(this.propertyName, configSettingsStg.propertyName) &&
        Objects.equals(this.value, configSettingsStg.value) &&
        Objects.equals(this.commentProperty, configSettingsStg.commentProperty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(propertyName, value, commentProperty);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigSettingsStg {\n");
    sb.append("    propertyName: ").append(toIndentedString(propertyName)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    commentProperty: ").append(toIndentedString(commentProperty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

