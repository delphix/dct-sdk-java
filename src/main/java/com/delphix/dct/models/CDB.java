/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * The Delphix representation of an Oracle Container Database.
 */
@ApiModel(description = "The Delphix representation of an Oracle Container Database.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T18:53:50.335381+05:30[Asia/Kolkata]")
public class CDB {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DATABASE_VERSION = "database_version";
  @SerializedName(SERIALIZED_NAME_DATABASE_VERSION)
  private String databaseVersion;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "environment_id";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private String environmentId;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Long size;

  public static final String SERIALIZED_NAME_JDBC_CONNECTION_STRING = "jdbc_connection_string";
  @SerializedName(SERIALIZED_NAME_JDBC_CONNECTION_STRING)
  private String jdbcConnectionString;

  public static final String SERIALIZED_NAME_ENGINE_ID = "engine_id";
  @SerializedName(SERIALIZED_NAME_ENGINE_ID)
  private String engineId;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = null;


  public CDB id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The CDB object entity ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1-CDB-1", value = "The CDB object entity ID.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CDB name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of this CDB.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Oracle CDB", value = "The name of this CDB.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CDB databaseVersion(String databaseVersion) {
    
    this.databaseVersion = databaseVersion;
    return this;
  }

   /**
   * The version of this CDB.
   * @return databaseVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10.2.0.5.0", value = "The version of this CDB.")

  public String getDatabaseVersion() {
    return databaseVersion;
  }


  public void setDatabaseVersion(String databaseVersion) {
    this.databaseVersion = databaseVersion;
  }


  public CDB environmentId(String environmentId) {
    
    this.environmentId = environmentId;
    return this;
  }

   /**
   * A reference to the Environment that hosts this CDB.
   * @return environmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1-ENVIRONMENT-1", value = "A reference to the Environment that hosts this CDB.")

  public String getEnvironmentId() {
    return environmentId;
  }


  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  public CDB size(Long size) {
    
    this.size = size;
    return this;
  }

   /**
   * The total size of the data files used by this CDB, in bytes.
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "339292672", value = "The total size of the data files used by this CDB, in bytes.")

  public Long getSize() {
    return size;
  }


  public void setSize(Long size) {
    this.size = size;
  }


  public CDB jdbcConnectionString(String jdbcConnectionString) {
    
    this.jdbcConnectionString = jdbcConnectionString;
    return this;
  }

   /**
   * The JDBC connection URL for this CDB.
   * @return jdbcConnectionString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.43.47.94)(PORT=1521))(CONNECT_DATA=(UR=A)(SID=production01)))", value = "The JDBC connection URL for this CDB.")

  public String getJdbcConnectionString() {
    return jdbcConnectionString;
  }


  public void setJdbcConnectionString(String jdbcConnectionString) {
    this.jdbcConnectionString = jdbcConnectionString;
  }


  public CDB engineId(String engineId) {
    
    this.engineId = engineId;
    return this;
  }

   /**
   * A reference to the Engine that this CDB belongs to.
   * @return engineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "engine-12", value = "A reference to the Engine that this CDB belongs to.")

  public String getEngineId() {
    return engineId;
  }


  public void setEngineId(String engineId) {
    this.engineId = engineId;
  }


  public CDB tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public CDB addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Tag> getTags() {
    return tags;
  }


  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CDB CDB = (CDB) o;
    return Objects.equals(this.id, CDB.id) &&
        Objects.equals(this.name, CDB.name) &&
        Objects.equals(this.databaseVersion, CDB.databaseVersion) &&
        Objects.equals(this.environmentId, CDB.environmentId) &&
        Objects.equals(this.size, CDB.size) &&
        Objects.equals(this.jdbcConnectionString, CDB.jdbcConnectionString) &&
        Objects.equals(this.engineId, CDB.engineId) &&
        Objects.equals(this.tags, CDB.tags);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, databaseVersion, environmentId, size, jdbcConnectionString, engineId, tags);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CDB {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    databaseVersion: ").append(toIndentedString(databaseVersion)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    jdbcConnectionString: ").append(toIndentedString(jdbcConnectionString)).append("\n");
    sb.append("    engineId: ").append(toIndentedString(engineId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

