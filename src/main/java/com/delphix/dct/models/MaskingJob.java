/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.MaskingRuleset;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * A masking job.
 */
@ApiModel(description = "A masking job.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T17:08:49.349376+05:30[Asia/Kolkata]")
public class MaskingJob {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RULESET = "ruleset";
  @SerializedName(SERIALIZED_NAME_RULESET)
  private MaskingRuleset ruleset;

  public static final String SERIALIZED_NAME_IS_ON_THE_FLY_MASKING = "is_on_the_fly_masking";
  @SerializedName(SERIALIZED_NAME_IS_ON_THE_FLY_MASKING)
  private Boolean isOnTheFlyMasking;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_LAST_COMPLETED_EXECUTION_DATE = "last_completed_execution_date";
  @SerializedName(SERIALIZED_NAME_LAST_COMPLETED_EXECUTION_DATE)
  private OffsetDateTime lastCompletedExecutionDate;

  /**
   * The status of this MaskingJob&#39;s last execution.
   */
  @JsonAdapter(LastExecutionStatusEnum.Adapter.class)
  public enum LastExecutionStatusEnum {
    PENDING("PENDING"),
    
    CANCELLED("CANCELLED"),
    
    FAILED("FAILED"),
    
    QUEUED("QUEUED"),
    
    RUNNING("RUNNING"),
    
    SUCCEEDED("SUCCEEDED");

    private String value;

    LastExecutionStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LastExecutionStatusEnum fromValue(String value) {
      for (LastExecutionStatusEnum b : LastExecutionStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LastExecutionStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LastExecutionStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LastExecutionStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LastExecutionStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LAST_EXECUTION_STATUS = "last_execution_status";
  @SerializedName(SERIALIZED_NAME_LAST_EXECUTION_STATUS)
  private LastExecutionStatusEnum lastExecutionStatus;

  public static final String SERIALIZED_NAME_CONNECTOR_USERNAME = "connector_username";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_USERNAME)
  private String connectorUsername;

  public static final String SERIALIZED_NAME_CONNECTOR_PASSWORD = "connector_password";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_PASSWORD)
  private String connectorPassword;

  public static final String SERIALIZED_NAME_ON_THE_FLY_SOURCE_CONNECTOR_USERNAME = "on_the_fly_source_connector_username";
  @SerializedName(SERIALIZED_NAME_ON_THE_FLY_SOURCE_CONNECTOR_USERNAME)
  private String onTheFlySourceConnectorUsername;

  public static final String SERIALIZED_NAME_ON_THE_FLY_SOURCE_CONNECTOR_PASSWORD = "on_the_fly_source_connector_password";
  @SerializedName(SERIALIZED_NAME_ON_THE_FLY_SOURCE_CONNECTOR_PASSWORD)
  private String onTheFlySourceConnectorPassword;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = null;


  public MaskingJob id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The MaskingJob entity ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "masking-job-1", value = "The MaskingJob entity ID.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public MaskingJob name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of this MaskingJob.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "My favorite MaskingJob", value = "The name of this MaskingJob.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public MaskingJob ruleset(MaskingRuleset ruleset) {
    
    this.ruleset = ruleset;
    return this;
  }

   /**
   * Get ruleset
   * @return ruleset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MaskingRuleset getRuleset() {
    return ruleset;
  }


  public void setRuleset(MaskingRuleset ruleset) {
    this.ruleset = ruleset;
  }


  public MaskingJob isOnTheFlyMasking(Boolean isOnTheFlyMasking) {
    
    this.isOnTheFlyMasking = isOnTheFlyMasking;
    return this;
  }

   /**
   * Whether this is an on-the-fly masking job.
   * @return isOnTheFlyMasking
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether this is an on-the-fly masking job.")

  public Boolean getIsOnTheFlyMasking() {
    return isOnTheFlyMasking;
  }


  public void setIsOnTheFlyMasking(Boolean isOnTheFlyMasking) {
    this.isOnTheFlyMasking = isOnTheFlyMasking;
  }


  public MaskingJob creationDate(OffsetDateTime creationDate) {
    
    this.creationDate = creationDate;
    return this;
  }

   /**
   * The date this MaskingJob was created.
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-11-30T08:51:34.148Z", value = "The date this MaskingJob was created.")

  public OffsetDateTime getCreationDate() {
    return creationDate;
  }


  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public MaskingJob lastCompletedExecutionDate(OffsetDateTime lastCompletedExecutionDate) {
    
    this.lastCompletedExecutionDate = lastCompletedExecutionDate;
    return this;
  }

   /**
   * The date this MaskingJob was last executed to completion.
   * @return lastCompletedExecutionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-11-30T09:51:34.148Z", value = "The date this MaskingJob was last executed to completion.")

  public OffsetDateTime getLastCompletedExecutionDate() {
    return lastCompletedExecutionDate;
  }


  public void setLastCompletedExecutionDate(OffsetDateTime lastCompletedExecutionDate) {
    this.lastCompletedExecutionDate = lastCompletedExecutionDate;
  }


  public MaskingJob lastExecutionStatus(LastExecutionStatusEnum lastExecutionStatus) {
    
    this.lastExecutionStatus = lastExecutionStatus;
    return this;
  }

   /**
   * The status of this MaskingJob&#39;s last execution.
   * @return lastExecutionStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SUCCEEDED", value = "The status of this MaskingJob's last execution.")

  public LastExecutionStatusEnum getLastExecutionStatus() {
    return lastExecutionStatus;
  }


  public void setLastExecutionStatus(LastExecutionStatusEnum lastExecutionStatus) {
    this.lastExecutionStatus = lastExecutionStatus;
  }


  public MaskingJob connectorUsername(String connectorUsername) {
    
    this.connectorUsername = connectorUsername;
    return this;
  }

   /**
   * The username of the Connector used by the MaskingJob.
   * @return connectorUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "user123", value = "The username of the Connector used by the MaskingJob.")

  public String getConnectorUsername() {
    return connectorUsername;
  }


  public void setConnectorUsername(String connectorUsername) {
    this.connectorUsername = connectorUsername;
  }


  public MaskingJob connectorPassword(String connectorPassword) {
    
    this.connectorPassword = connectorPassword;
    return this;
  }

   /**
   * The password of the Connector used by the MaskingJob.
   * @return connectorPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "*****", value = "The password of the Connector used by the MaskingJob.")

  public String getConnectorPassword() {
    return connectorPassword;
  }


  public void setConnectorPassword(String connectorPassword) {
    this.connectorPassword = connectorPassword;
  }


  public MaskingJob onTheFlySourceConnectorUsername(String onTheFlySourceConnectorUsername) {
    
    this.onTheFlySourceConnectorUsername = onTheFlySourceConnectorUsername;
    return this;
  }

   /**
   * The username of the source Connector used by the on-the-fly MaskingJob.
   * @return onTheFlySourceConnectorUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "user123", value = "The username of the source Connector used by the on-the-fly MaskingJob.")

  public String getOnTheFlySourceConnectorUsername() {
    return onTheFlySourceConnectorUsername;
  }


  public void setOnTheFlySourceConnectorUsername(String onTheFlySourceConnectorUsername) {
    this.onTheFlySourceConnectorUsername = onTheFlySourceConnectorUsername;
  }


  public MaskingJob onTheFlySourceConnectorPassword(String onTheFlySourceConnectorPassword) {
    
    this.onTheFlySourceConnectorPassword = onTheFlySourceConnectorPassword;
    return this;
  }

   /**
   * The password of the source Connector used by the on-the-fly MaskingJob.
   * @return onTheFlySourceConnectorPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "*****", value = "The password of the source Connector used by the on-the-fly MaskingJob.")

  public String getOnTheFlySourceConnectorPassword() {
    return onTheFlySourceConnectorPassword;
  }


  public void setOnTheFlySourceConnectorPassword(String onTheFlySourceConnectorPassword) {
    this.onTheFlySourceConnectorPassword = onTheFlySourceConnectorPassword;
  }


  public MaskingJob tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public MaskingJob addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Tag> getTags() {
    return tags;
  }


  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MaskingJob maskingJob = (MaskingJob) o;
    return Objects.equals(this.id, maskingJob.id) &&
        Objects.equals(this.name, maskingJob.name) &&
        Objects.equals(this.ruleset, maskingJob.ruleset) &&
        Objects.equals(this.isOnTheFlyMasking, maskingJob.isOnTheFlyMasking) &&
        Objects.equals(this.creationDate, maskingJob.creationDate) &&
        Objects.equals(this.lastCompletedExecutionDate, maskingJob.lastCompletedExecutionDate) &&
        Objects.equals(this.lastExecutionStatus, maskingJob.lastExecutionStatus) &&
        Objects.equals(this.connectorUsername, maskingJob.connectorUsername) &&
        Objects.equals(this.connectorPassword, maskingJob.connectorPassword) &&
        Objects.equals(this.onTheFlySourceConnectorUsername, maskingJob.onTheFlySourceConnectorUsername) &&
        Objects.equals(this.onTheFlySourceConnectorPassword, maskingJob.onTheFlySourceConnectorPassword) &&
        Objects.equals(this.tags, maskingJob.tags);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, ruleset, isOnTheFlyMasking, creationDate, lastCompletedExecutionDate, lastExecutionStatus, connectorUsername, connectorPassword, onTheFlySourceConnectorUsername, onTheFlySourceConnectorPassword, tags);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MaskingJob {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ruleset: ").append(toIndentedString(ruleset)).append("\n");
    sb.append("    isOnTheFlyMasking: ").append(toIndentedString(isOnTheFlyMasking)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    lastCompletedExecutionDate: ").append(toIndentedString(lastCompletedExecutionDate)).append("\n");
    sb.append("    lastExecutionStatus: ").append(toIndentedString(lastExecutionStatus)).append("\n");
    sb.append("    connectorUsername: ").append(toIndentedString(connectorUsername)).append("\n");
    sb.append("    connectorPassword: ").append(toIndentedString(connectorPassword)).append("\n");
    sb.append("    onTheFlySourceConnectorUsername: ").append(toIndentedString(onTheFlySourceConnectorUsername)).append("\n");
    sb.append("    onTheFlySourceConnectorPassword: ").append(toIndentedString(onTheFlySourceConnectorPassword)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

