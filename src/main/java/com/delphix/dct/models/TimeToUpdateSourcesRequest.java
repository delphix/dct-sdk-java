/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TimeToUpdateSourcesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T17:08:49.349376+05:30[Asia/Kolkata]")
public class TimeToUpdateSourcesRequest {
  public static final String SERIALIZED_NAME_ENGINES_COUNT = "engines_count";
  @SerializedName(SERIALIZED_NAME_ENGINES_COUNT)
  private Integer enginesCount;

  public static final String SERIALIZED_NAME_ENGINES_LIST = "engines_list";
  @SerializedName(SERIALIZED_NAME_ENGINES_LIST)
  private List<String> enginesList = new ArrayList<String>();

  public static final String SERIALIZED_NAME_EXISTING_NO_OF_SOURCES = "existing_no_of_sources";
  @SerializedName(SERIALIZED_NAME_EXISTING_NO_OF_SOURCES)
  private Integer existingNoOfSources;

  public static final String SERIALIZED_NAME_SOURCES_COUNT = "sources_count";
  @SerializedName(SERIALIZED_NAME_SOURCES_COUNT)
  private Integer sourcesCount;


  public TimeToUpdateSourcesRequest enginesCount(Integer enginesCount) {
    
    this.enginesCount = enginesCount;
    return this;
  }

   /**
   * no. of times same engine needs to be registered
   * @return enginesCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "no. of times same engine needs to be registered")

  public Integer getEnginesCount() {
    return enginesCount;
  }


  public void setEnginesCount(Integer enginesCount) {
    this.enginesCount = enginesCount;
  }


  public TimeToUpdateSourcesRequest enginesList(List<String> enginesList) {
    
    this.enginesList = enginesList;
    return this;
  }

  public TimeToUpdateSourcesRequest addEnginesListItem(String enginesListItem) {
    this.enginesList.add(enginesListItem);
    return this;
  }

   /**
   * list of engine hostnames to be registered engines_count times
   * @return enginesList
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "list of engine hostnames to be registered engines_count times")

  public List<String> getEnginesList() {
    return enginesList;
  }


  public void setEnginesList(List<String> enginesList) {
    this.enginesList = enginesList;
  }


  public TimeToUpdateSourcesRequest existingNoOfSources(Integer existingNoOfSources) {
    
    this.existingNoOfSources = existingNoOfSources;
    return this;
  }

   /**
   * no. of actual sources on 1 engine - this no. needs to be same for all engines
   * @return existingNoOfSources
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "no. of actual sources on 1 engine - this no. needs to be same for all engines")

  public Integer getExistingNoOfSources() {
    return existingNoOfSources;
  }


  public void setExistingNoOfSources(Integer existingNoOfSources) {
    this.existingNoOfSources = existingNoOfSources;
  }


  public TimeToUpdateSourcesRequest sourcesCount(Integer sourcesCount) {
    
    this.sourcesCount = sourcesCount;
    return this;
  }

   /**
   * no. of times every source needs to be saved in data library
   * @return sourcesCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "no. of times every source needs to be saved in data library")

  public Integer getSourcesCount() {
    return sourcesCount;
  }


  public void setSourcesCount(Integer sourcesCount) {
    this.sourcesCount = sourcesCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeToUpdateSourcesRequest timeToUpdateSourcesRequest = (TimeToUpdateSourcesRequest) o;
    return Objects.equals(this.enginesCount, timeToUpdateSourcesRequest.enginesCount) &&
        Objects.equals(this.enginesList, timeToUpdateSourcesRequest.enginesList) &&
        Objects.equals(this.existingNoOfSources, timeToUpdateSourcesRequest.existingNoOfSources) &&
        Objects.equals(this.sourcesCount, timeToUpdateSourcesRequest.sourcesCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enginesCount, enginesList, existingNoOfSources, sourcesCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeToUpdateSourcesRequest {\n");
    sb.append("    enginesCount: ").append(toIndentedString(enginesCount)).append("\n");
    sb.append("    enginesList: ").append(toIndentedString(enginesList)).append("\n");
    sb.append("    existingNoOfSources: ").append(toIndentedString(existingNoOfSources)).append("\n");
    sb.append("    sourcesCount: ").append(toIndentedString(sourcesCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

