/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.3.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * A Data Control Tower object that references points in time for one or more datasets.
 */
@ApiModel(description = "A Data Control Tower object that references points in time for one or more datasets.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-19T17:08:49.349376+05:30[Asia/Kolkata]")
public class Bookmark {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_VDB_IDS = "vdb_ids";
  @SerializedName(SERIALIZED_NAME_VDB_IDS)
  private List<String> vdbIds = null;

  public static final String SERIALIZED_NAME_RETENTION = "retention";
  @SerializedName(SERIALIZED_NAME_RETENTION)
  private Long retention;

  public static final String SERIALIZED_NAME_EXPIRATION = "expiration";
  @SerializedName(SERIALIZED_NAME_EXPIRATION)
  private LocalDate expiration;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = null;


   /**
   * The Bookmark object entity ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "bookmark-123", value = "The Bookmark object entity ID.")

  public String getId() {
    return id;
  }




  public Bookmark name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The user-defined name of this bookmark.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "my-bookmark-123", value = "The user-defined name of this bookmark.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


   /**
   * The date and time that this bookmark was created.
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-07-04T08:51:34.148Z", value = "The date and time that this bookmark was created.")

  public OffsetDateTime getCreationDate() {
    return creationDate;
  }




  public Bookmark vdbIds(List<String> vdbIds) {
    
    this.vdbIds = vdbIds;
    return this;
  }

  public Bookmark addVdbIdsItem(String vdbIdsItem) {
    if (this.vdbIds == null) {
      this.vdbIds = new ArrayList<String>();
    }
    this.vdbIds.add(vdbIdsItem);
    return this;
  }

   /**
   * The list of VDB IDs associated with this bookmark.
   * @return vdbIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"vdb-123\",\"vdb-456\"]", value = "The list of VDB IDs associated with this bookmark.")

  public List<String> getVdbIds() {
    return vdbIds;
  }


  public void setVdbIds(List<String> vdbIds) {
    this.vdbIds = vdbIds;
  }


  public Bookmark retention(Long retention) {
    
    this.retention = retention;
    return this;
  }

   /**
   * The retention policy for this bookmark, in days. A value of -1 indicates the bookmark should be kept forever. Deprecated in favor of expiration.
   * @return retention
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "365", value = "The retention policy for this bookmark, in days. A value of -1 indicates the bookmark should be kept forever. Deprecated in favor of expiration.")

  public Long getRetention() {
    return retention;
  }


  public void setRetention(Long retention) {
    this.retention = retention;
  }


  public Bookmark expiration(LocalDate expiration) {
    
    this.expiration = expiration;
    return this;
  }

   /**
   * The expiration for this bookmark. When unset, indicates the bookmark is kept forever.
   * @return expiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sun Jul 04 05:30:00 IST 2021", value = "The expiration for this bookmark. When unset, indicates the bookmark is kept forever.")

  public LocalDate getExpiration() {
    return expiration;
  }


  public void setExpiration(LocalDate expiration) {
    this.expiration = expiration;
  }


   /**
   * A message with details about operation progress or state of this bookmark.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "RESTORED", value = "A message with details about operation progress or state of this bookmark.")

  public String getStatus() {
    return status;
  }




  public Bookmark tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public Bookmark addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The tags to be created for this Bookmark.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"key\":\"key-1\",\"value\":\"value-1\"},{\"key\":\"key-2\",\"value\":\"value-2\"}]", value = "The tags to be created for this Bookmark.")

  public List<Tag> getTags() {
    return tags;
  }


  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Bookmark bookmark = (Bookmark) o;
    return Objects.equals(this.id, bookmark.id) &&
        Objects.equals(this.name, bookmark.name) &&
        Objects.equals(this.creationDate, bookmark.creationDate) &&
        Objects.equals(this.vdbIds, bookmark.vdbIds) &&
        Objects.equals(this.retention, bookmark.retention) &&
        Objects.equals(this.expiration, bookmark.expiration) &&
        Objects.equals(this.status, bookmark.status) &&
        Objects.equals(this.tags, bookmark.tags);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, creationDate, vdbIds, retention, expiration, status, tags);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Bookmark {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    vdbIds: ").append(toIndentedString(vdbIds)).append("\n");
    sb.append("    retention: ").append(toIndentedString(retention)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

